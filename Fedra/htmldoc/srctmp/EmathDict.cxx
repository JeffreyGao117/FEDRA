//
// File generated by C:\root_v5.34.26\bin\rootcint.EXE at Fri Sep 04 22:31:01 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME EmathDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "EmathDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void TIndexCell_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TIndexCell(void *p = 0);
   static void *newArray_TIndexCell(Long_t size, void *p);
   static void delete_TIndexCell(void *p);
   static void deleteArray_TIndexCell(void *p);
   static void destruct_TIndexCell(void *p);
   static void streamer_TIndexCell(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TIndexCell*)
   {
      ::TIndexCell *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TIndexCell >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TIndexCell", ::TIndexCell::Class_Version(), "./TIndexCell.h", 19,
                  typeid(::TIndexCell), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TIndexCell::Dictionary, isa_proxy, 0,
                  sizeof(::TIndexCell) );
      instance.SetNew(&new_TIndexCell);
      instance.SetNewArray(&newArray_TIndexCell);
      instance.SetDelete(&delete_TIndexCell);
      instance.SetDeleteArray(&deleteArray_TIndexCell);
      instance.SetDestructor(&destruct_TIndexCell);
      instance.SetStreamerFunc(&streamer_TIndexCell);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TIndexCell*)
   {
      return GenerateInitInstanceLocal((::TIndexCell*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TIndexCell*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TIndexCellIter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TIndexCellIter(void *p);
   static void deleteArray_TIndexCellIter(void *p);
   static void destruct_TIndexCellIter(void *p);
   static void streamer_TIndexCellIter(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TIndexCellIter*)
   {
      ::TIndexCellIter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TIndexCellIter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TIndexCellIter", ::TIndexCellIter::Class_Version(), "./TIndexCell.h", 110,
                  typeid(::TIndexCellIter), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TIndexCellIter::Dictionary, isa_proxy, 0,
                  sizeof(::TIndexCellIter) );
      instance.SetDelete(&delete_TIndexCellIter);
      instance.SetDeleteArray(&deleteArray_TIndexCellIter);
      instance.SetDestructor(&destruct_TIndexCellIter);
      instance.SetStreamerFunc(&streamer_TIndexCellIter);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TIndexCellIter*)
   {
      return GenerateInitInstanceLocal((::TIndexCellIter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TIndexCellIter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TIndexCellIterV_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TIndexCellIterV(void *p);
   static void deleteArray_TIndexCellIterV(void *p);
   static void destruct_TIndexCellIterV(void *p);
   static void streamer_TIndexCellIterV(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TIndexCellIterV*)
   {
      ::TIndexCellIterV *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TIndexCellIterV >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TIndexCellIterV", ::TIndexCellIterV::Class_Version(), "./TIndexCell.h", 142,
                  typeid(::TIndexCellIterV), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TIndexCellIterV::Dictionary, isa_proxy, 0,
                  sizeof(::TIndexCellIterV) );
      instance.SetDelete(&delete_TIndexCellIterV);
      instance.SetDeleteArray(&deleteArray_TIndexCellIterV);
      instance.SetDestructor(&destruct_TIndexCellIterV);
      instance.SetStreamerFunc(&streamer_TIndexCellIterV);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TIndexCellIterV*)
   {
      return GenerateInitInstanceLocal((::TIndexCellIterV*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TIndexCellIterV*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbMath_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbMath(void *p = 0);
   static void *newArray_EdbMath(Long_t size, void *p);
   static void delete_EdbMath(void *p);
   static void deleteArray_EdbMath(void *p);
   static void destruct_EdbMath(void *p);
   static void streamer_EdbMath(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbMath*)
   {
      ::EdbMath *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbMath >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbMath", ::EdbMath::Class_Version(), "./EdbMath.h", 16,
                  typeid(::EdbMath), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbMath::Dictionary, isa_proxy, 0,
                  sizeof(::EdbMath) );
      instance.SetNew(&new_EdbMath);
      instance.SetNewArray(&newArray_EdbMath);
      instance.SetDelete(&delete_EdbMath);
      instance.SetDeleteArray(&deleteArray_EdbMath);
      instance.SetDestructor(&destruct_EdbMath);
      instance.SetStreamerFunc(&streamer_EdbMath);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbMath*)
   {
      return GenerateInitInstanceLocal((::EdbMath*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbMath*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TIndex2_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TIndex2(void *p = 0);
   static void *newArray_TIndex2(Long_t size, void *p);
   static void delete_TIndex2(void *p);
   static void deleteArray_TIndex2(void *p);
   static void destruct_TIndex2(void *p);
   static void streamer_TIndex2(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TIndex2*)
   {
      ::TIndex2 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TIndex2 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TIndex2", ::TIndex2::Class_Version(), "./EdbMath.h", 48,
                  typeid(::TIndex2), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TIndex2::Dictionary, isa_proxy, 0,
                  sizeof(::TIndex2) );
      instance.SetNew(&new_TIndex2);
      instance.SetNewArray(&newArray_TIndex2);
      instance.SetDelete(&delete_TIndex2);
      instance.SetDeleteArray(&deleteArray_TIndex2);
      instance.SetDestructor(&destruct_TIndex2);
      instance.SetStreamerFunc(&streamer_TIndex2);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TIndex2*)
   {
      return GenerateInitInstanceLocal((::TIndex2*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TIndex2*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbH1_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbH1(void *p = 0);
   static void *newArray_EdbH1(Long_t size, void *p);
   static void delete_EdbH1(void *p);
   static void deleteArray_EdbH1(void *p);
   static void destruct_EdbH1(void *p);
   static void streamer_EdbH1(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbH1*)
   {
      ::EdbH1 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbH1 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbH1", ::EdbH1::Class_Version(), "d:/documents/prg/fedrasvn/src/libemath/EdbCell1.h", 17,
                  typeid(::EdbH1), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbH1::Dictionary, isa_proxy, 0,
                  sizeof(::EdbH1) );
      instance.SetNew(&new_EdbH1);
      instance.SetNewArray(&newArray_EdbH1);
      instance.SetDelete(&delete_EdbH1);
      instance.SetDeleteArray(&deleteArray_EdbH1);
      instance.SetDestructor(&destruct_EdbH1);
      instance.SetStreamerFunc(&streamer_EdbH1);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbH1*)
   {
      return GenerateInitInstanceLocal((::EdbH1*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbH1*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbCell1_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbCell1(void *p = 0);
   static void *newArray_EdbCell1(Long_t size, void *p);
   static void delete_EdbCell1(void *p);
   static void deleteArray_EdbCell1(void *p);
   static void destruct_EdbCell1(void *p);
   static void streamer_EdbCell1(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbCell1*)
   {
      ::EdbCell1 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbCell1 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbCell1", ::EdbCell1::Class_Version(), "d:/documents/prg/fedrasvn/src/libemath/EdbCell1.h", 117,
                  typeid(::EdbCell1), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbCell1::Dictionary, isa_proxy, 0,
                  sizeof(::EdbCell1) );
      instance.SetNew(&new_EdbCell1);
      instance.SetNewArray(&newArray_EdbCell1);
      instance.SetDelete(&delete_EdbCell1);
      instance.SetDeleteArray(&deleteArray_EdbCell1);
      instance.SetDestructor(&destruct_EdbCell1);
      instance.SetStreamerFunc(&streamer_EdbCell1);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbCell1*)
   {
      return GenerateInitInstanceLocal((::EdbCell1*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbCell1*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbH2_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbH2(void *p = 0);
   static void *newArray_EdbH2(Long_t size, void *p);
   static void delete_EdbH2(void *p);
   static void deleteArray_EdbH2(void *p);
   static void destruct_EdbH2(void *p);
   static void streamer_EdbH2(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbH2*)
   {
      ::EdbH2 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbH2 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbH2", ::EdbH2::Class_Version(), "./EdbCell2.h", 19,
                  typeid(::EdbH2), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbH2::Dictionary, isa_proxy, 0,
                  sizeof(::EdbH2) );
      instance.SetNew(&new_EdbH2);
      instance.SetNewArray(&newArray_EdbH2);
      instance.SetDelete(&delete_EdbH2);
      instance.SetDeleteArray(&deleteArray_EdbH2);
      instance.SetDestructor(&destruct_EdbH2);
      instance.SetStreamerFunc(&streamer_EdbH2);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbH2*)
   {
      return GenerateInitInstanceLocal((::EdbH2*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbH2*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbPeak2_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbPeak2(void *p = 0);
   static void *newArray_EdbPeak2(Long_t size, void *p);
   static void delete_EdbPeak2(void *p);
   static void deleteArray_EdbPeak2(void *p);
   static void destruct_EdbPeak2(void *p);
   static void streamer_EdbPeak2(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbPeak2*)
   {
      ::EdbPeak2 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbPeak2 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbPeak2", ::EdbPeak2::Class_Version(), "./EdbCell2.h", 104,
                  typeid(::EdbPeak2), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbPeak2::Dictionary, isa_proxy, 0,
                  sizeof(::EdbPeak2) );
      instance.SetNew(&new_EdbPeak2);
      instance.SetNewArray(&newArray_EdbPeak2);
      instance.SetDelete(&delete_EdbPeak2);
      instance.SetDeleteArray(&deleteArray_EdbPeak2);
      instance.SetDestructor(&destruct_EdbPeak2);
      instance.SetStreamerFunc(&streamer_EdbPeak2);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbPeak2*)
   {
      return GenerateInitInstanceLocal((::EdbPeak2*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbPeak2*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbCell2_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbCell2(void *p = 0);
   static void *newArray_EdbCell2(Long_t size, void *p);
   static void delete_EdbCell2(void *p);
   static void deleteArray_EdbCell2(void *p);
   static void destruct_EdbCell2(void *p);
   static void streamer_EdbCell2(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbCell2*)
   {
      ::EdbCell2 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbCell2 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbCell2", ::EdbCell2::Class_Version(), "./EdbCell2.h", 147,
                  typeid(::EdbCell2), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbCell2::Dictionary, isa_proxy, 1,
                  sizeof(::EdbCell2) );
      instance.SetNew(&new_EdbCell2);
      instance.SetNewArray(&newArray_EdbCell2);
      instance.SetDelete(&delete_EdbCell2);
      instance.SetDeleteArray(&deleteArray_EdbCell2);
      instance.SetDestructor(&destruct_EdbCell2);
      instance.SetStreamerFunc(&streamer_EdbCell2);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbCell2*)
   {
      return GenerateInitInstanceLocal((::EdbCell2*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbCell2*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbMask_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbMask(void *p = 0);
   static void *newArray_EdbMask(Long_t size, void *p);
   static void delete_EdbMask(void *p);
   static void deleteArray_EdbMask(void *p);
   static void destruct_EdbMask(void *p);
   static void streamer_EdbMask(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbMask*)
   {
      ::EdbMask *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbMask >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbMask", ::EdbMask::Class_Version(), "./EdbMask.h", 8,
                  typeid(::EdbMask), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbMask::Dictionary, isa_proxy, 0,
                  sizeof(::EdbMask) );
      instance.SetNew(&new_EdbMask);
      instance.SetNewArray(&newArray_EdbMask);
      instance.SetDelete(&delete_EdbMask);
      instance.SetDeleteArray(&deleteArray_EdbMask);
      instance.SetDestructor(&destruct_EdbMask);
      instance.SetStreamerFunc(&streamer_EdbMask);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbMask*)
   {
      return GenerateInitInstanceLocal((::EdbMask*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbMask*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbCombGen_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbCombGen(void *p = 0);
   static void *newArray_EdbCombGen(Long_t size, void *p);
   static void delete_EdbCombGen(void *p);
   static void deleteArray_EdbCombGen(void *p);
   static void destruct_EdbCombGen(void *p);
   static void streamer_EdbCombGen(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbCombGen*)
   {
      ::EdbCombGen *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbCombGen >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbCombGen", ::EdbCombGen::Class_Version(), "./EdbCombGen.h", 15,
                  typeid(::EdbCombGen), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbCombGen::Dictionary, isa_proxy, 0,
                  sizeof(::EdbCombGen) );
      instance.SetNew(&new_EdbCombGen);
      instance.SetNewArray(&newArray_EdbCombGen);
      instance.SetDelete(&delete_EdbCombGen);
      instance.SetDeleteArray(&deleteArray_EdbCombGen);
      instance.SetDestructor(&destruct_EdbCombGen);
      instance.SetStreamerFunc(&streamer_EdbCombGen);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbCombGen*)
   {
      return GenerateInitInstanceLocal((::EdbCombGen*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbCombGen*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr TIndexCell::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TIndexCell::Class_Name()
{
   return "TIndexCell";
}

//______________________________________________________________________________
const char *TIndexCell::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TIndexCell*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TIndexCell::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TIndexCell*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TIndexCell::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TIndexCell*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TIndexCell::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TIndexCell*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TIndexCellIter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TIndexCellIter::Class_Name()
{
   return "TIndexCellIter";
}

//______________________________________________________________________________
const char *TIndexCellIter::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TIndexCellIter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TIndexCellIter::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TIndexCellIter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TIndexCellIter::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TIndexCellIter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TIndexCellIter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TIndexCellIter*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TIndexCellIterV::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TIndexCellIterV::Class_Name()
{
   return "TIndexCellIterV";
}

//______________________________________________________________________________
const char *TIndexCellIterV::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TIndexCellIterV*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TIndexCellIterV::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TIndexCellIterV*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TIndexCellIterV::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TIndexCellIterV*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TIndexCellIterV::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TIndexCellIterV*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbMath::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbMath::Class_Name()
{
   return "EdbMath";
}

//______________________________________________________________________________
const char *EdbMath::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbMath*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbMath::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbMath*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbMath::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbMath*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbMath::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbMath*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TIndex2::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TIndex2::Class_Name()
{
   return "TIndex2";
}

//______________________________________________________________________________
const char *TIndex2::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TIndex2*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TIndex2::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TIndex2*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TIndex2::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TIndex2*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TIndex2::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TIndex2*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbH1::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbH1::Class_Name()
{
   return "EdbH1";
}

//______________________________________________________________________________
const char *EdbH1::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbH1*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbH1::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbH1*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbH1::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbH1*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbH1::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbH1*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbCell1::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbCell1::Class_Name()
{
   return "EdbCell1";
}

//______________________________________________________________________________
const char *EdbCell1::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbCell1*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbCell1::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbCell1*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbCell1::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbCell1*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbCell1::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbCell1*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbH2::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbH2::Class_Name()
{
   return "EdbH2";
}

//______________________________________________________________________________
const char *EdbH2::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbH2*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbH2::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbH2*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbH2::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbH2*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbH2::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbH2*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbPeak2::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbPeak2::Class_Name()
{
   return "EdbPeak2";
}

//______________________________________________________________________________
const char *EdbPeak2::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbPeak2*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbPeak2::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbPeak2*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbPeak2::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbPeak2*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbPeak2::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbPeak2*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbCell2::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbCell2::Class_Name()
{
   return "EdbCell2";
}

//______________________________________________________________________________
const char *EdbCell2::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbCell2*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbCell2::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbCell2*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbCell2::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbCell2*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbCell2::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbCell2*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbMask::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbMask::Class_Name()
{
   return "EdbMask";
}

//______________________________________________________________________________
const char *EdbMask::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbMask*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbMask::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbMask*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbMask::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbMask*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbMask::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbMask*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbCombGen::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbCombGen::Class_Name()
{
   return "EdbCombGen";
}

//______________________________________________________________________________
const char *EdbCombGen::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbCombGen*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbCombGen::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbCombGen*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbCombGen::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbCombGen*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbCombGen::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbCombGen*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void TIndexCell::Streamer(TBuffer &R__b)
{
   // Stream an object of class TIndexCell.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> fValue;
      R__b >> fList;
      R__b.CheckByteCount(R__s, R__c, TIndexCell::IsA());
   } else {
      R__c = R__b.WriteVersion(TIndexCell::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << fValue;
      R__b << fList;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TIndexCell::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TIndexCell.
      typedef ::TIndexCell msvc_bug_workaround;
      TClass *R__cl = msvc_bug_workaround::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fValue", &fValue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fList", &fList);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TIndexCell(void *p) {
      return  p ? new(p) ::TIndexCell : new ::TIndexCell;
   }
   static void *newArray_TIndexCell(Long_t nElements, void *p) {
      return p ? new(p) ::TIndexCell[nElements] : new ::TIndexCell[nElements];
   }
   // Wrapper around operator delete
   static void delete_TIndexCell(void *p) {
      delete ((::TIndexCell*)p);
   }
   static void deleteArray_TIndexCell(void *p) {
      delete [] ((::TIndexCell*)p);
   }
   static void destruct_TIndexCell(void *p) {
      typedef ::TIndexCell current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TIndexCell(TBuffer &buf, void *obj) {
      ((::TIndexCell*)obj)->::TIndexCell::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::TIndexCell

//______________________________________________________________________________
void TIndexCellIter::Streamer(TBuffer &R__b)
{
   // Stream an object of class TIndexCellIter.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TIndexCellIter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TIndexCellIter.
      typedef ::TIndexCellIter msvc_bug_workaround;
      TClass *R__cl = msvc_bug_workaround::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCell", &fCell);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVind", &fVind);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLevel0", &fLevel0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLevel", &fLevel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPass", &fPass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDirection", &fDirection);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TIndexCellIter(void *p) {
      delete ((::TIndexCellIter*)p);
   }
   static void deleteArray_TIndexCellIter(void *p) {
      delete [] ((::TIndexCellIter*)p);
   }
   static void destruct_TIndexCellIter(void *p) {
      typedef ::TIndexCellIter current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TIndexCellIter(TBuffer &buf, void *obj) {
      ((::TIndexCellIter*)obj)->::TIndexCellIter::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::TIndexCellIter

//______________________________________________________________________________
void TIndexCellIterV::Streamer(TBuffer &R__b)
{
   // Stream an object of class TIndexCellIterV.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TIndexCellIterV::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TIndexCellIterV.
      typedef ::TIndexCellIterV msvc_bug_workaround;
      TClass *R__cl = msvc_bug_workaround::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCell", &fCell);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLevel0", &fLevel0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVcent", &fVcent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVdiff", &fVdiff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVind", &fVind);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVval", &fVval);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLevel", &fLevel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPass", &fPass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDirection", &fDirection);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TIndexCellIterV(void *p) {
      delete ((::TIndexCellIterV*)p);
   }
   static void deleteArray_TIndexCellIterV(void *p) {
      delete [] ((::TIndexCellIterV*)p);
   }
   static void destruct_TIndexCellIterV(void *p) {
      typedef ::TIndexCellIterV current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TIndexCellIterV(TBuffer &buf, void *obj) {
      ((::TIndexCellIterV*)obj)->::TIndexCellIterV::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::TIndexCellIterV

//______________________________________________________________________________
void EdbMath::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbMath.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b.CheckByteCount(R__s, R__c, EdbMath::IsA());
   } else {
      R__c = R__b.WriteVersion(EdbMath::IsA(), kTRUE);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbMath::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbMath.
      typedef ::EdbMath msvc_bug_workaround;
      TClass *R__cl = msvc_bug_workaround::IsA();
      if (R__cl || R__insp.IsA()) { }
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbMath(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EdbMath : new ::EdbMath;
   }
   static void *newArray_EdbMath(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EdbMath[nElements] : new ::EdbMath[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbMath(void *p) {
      delete ((::EdbMath*)p);
   }
   static void deleteArray_EdbMath(void *p) {
      delete [] ((::EdbMath*)p);
   }
   static void destruct_EdbMath(void *p) {
      typedef ::EdbMath current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbMath(TBuffer &buf, void *obj) {
      ((::EdbMath*)obj)->::EdbMath::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbMath

//______________________________________________________________________________
void TIndex2::Streamer(TBuffer &R__b)
{
   // Stream an object of class TIndex2.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TArrayD::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TIndex2::IsA());
   } else {
      R__c = R__b.WriteVersion(TIndex2::IsA(), kTRUE);
      TArrayD::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TIndex2::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TIndex2.
      typedef ::TIndex2 msvc_bug_workaround;
      TClass *R__cl = msvc_bug_workaround::IsA();
      if (R__cl || R__insp.IsA()) { }
      TArrayD::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TIndex2(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TIndex2 : new ::TIndex2;
   }
   static void *newArray_TIndex2(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TIndex2[nElements] : new ::TIndex2[nElements];
   }
   // Wrapper around operator delete
   static void delete_TIndex2(void *p) {
      delete ((::TIndex2*)p);
   }
   static void deleteArray_TIndex2(void *p) {
      delete [] ((::TIndex2*)p);
   }
   static void destruct_TIndex2(void *p) {
      typedef ::TIndex2 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TIndex2(TBuffer &buf, void *obj) {
      ((::TIndex2*)obj)->::TIndex2::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::TIndex2

//______________________________________________________________________________
void EdbH1::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbH1.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> eN;
      R__b >> eMin;
      R__b >> eMax;
      R__b >> eBin;
      R__b >> eNcell;
      R__b.CheckByteCount(R__s, R__c, EdbH1::IsA());
   } else {
      R__c = R__b.WriteVersion(EdbH1::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << eN;
      R__b << eMin;
      R__b << eMax;
      R__b << eBin;
      R__b << eNcell;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbH1::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbH1.
      typedef ::EdbH1 msvc_bug_workaround;
      TClass *R__cl = msvc_bug_workaround::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eN", &eN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eMin", &eMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eMax", &eMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eBin", &eBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eNcell", &eNcell);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eNC", &eNC);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbH1(void *p) {
      return  p ? new(p) ::EdbH1 : new ::EdbH1;
   }
   static void *newArray_EdbH1(Long_t nElements, void *p) {
      return p ? new(p) ::EdbH1[nElements] : new ::EdbH1[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbH1(void *p) {
      delete ((::EdbH1*)p);
   }
   static void deleteArray_EdbH1(void *p) {
      delete [] ((::EdbH1*)p);
   }
   static void destruct_EdbH1(void *p) {
      typedef ::EdbH1 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbH1(TBuffer &buf, void *obj) {
      ((::EdbH1*)obj)->::EdbH1::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbH1

//______________________________________________________________________________
void EdbCell1::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbCell1.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      EdbH1::Streamer(R__b);
      R__b >> eCellLim;
      R__b.CheckByteCount(R__s, R__c, EdbCell1::IsA());
   } else {
      R__c = R__b.WriteVersion(EdbCell1::IsA(), kTRUE);
      EdbH1::Streamer(R__b);
      R__b << eCellLim;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbCell1::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbCell1.
      typedef ::EdbCell1 msvc_bug_workaround;
      TClass *R__cl = msvc_bug_workaround::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCellLim", &eCellLim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*epO", &epO);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*epC", &epC);
      EdbH1::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbCell1(void *p) {
      return  p ? new(p) ::EdbCell1 : new ::EdbCell1;
   }
   static void *newArray_EdbCell1(Long_t nElements, void *p) {
      return p ? new(p) ::EdbCell1[nElements] : new ::EdbCell1[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbCell1(void *p) {
      delete ((::EdbCell1*)p);
   }
   static void deleteArray_EdbCell1(void *p) {
      delete [] ((::EdbCell1*)p);
   }
   static void destruct_EdbCell1(void *p) {
      typedef ::EdbCell1 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbCell1(TBuffer &buf, void *obj) {
      ((::EdbCell1*)obj)->::EdbCell1::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbCell1

//______________________________________________________________________________
void EdbH2::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbH2.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b.ReadStaticArray((int*)eN);
      R__b.ReadStaticArray((float*)eMin);
      R__b.ReadStaticArray((float*)eMax);
      R__b.ReadStaticArray((float*)eBin);
      R__b >> eNcell;
      delete [] eNC;
      eNC = new Int_t[eNcell];
      R__b.ReadFastArray(eNC,eNcell);
      R__b.CheckByteCount(R__s, R__c, EdbH2::IsA());
   } else {
      R__c = R__b.WriteVersion(EdbH2::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b.WriteArray(eN, 2);
      R__b.WriteArray(eMin, 2);
      R__b.WriteArray(eMax, 2);
      R__b.WriteArray(eBin, 2);
      R__b << eNcell;
      R__b.WriteFastArray(eNC,eNcell);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbH2::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbH2.
      typedef ::EdbH2 msvc_bug_workaround;
      TClass *R__cl = msvc_bug_workaround::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eN[2]", eN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eMin[2]", eMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eMax[2]", eMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eBin[2]", eBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eNcell", &eNcell);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eNC", &eNC);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbH2(void *p) {
      return  p ? new(p) ::EdbH2 : new ::EdbH2;
   }
   static void *newArray_EdbH2(Long_t nElements, void *p) {
      return p ? new(p) ::EdbH2[nElements] : new ::EdbH2[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbH2(void *p) {
      delete ((::EdbH2*)p);
   }
   static void deleteArray_EdbH2(void *p) {
      delete [] ((::EdbH2*)p);
   }
   static void destruct_EdbH2(void *p) {
      typedef ::EdbH2 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbH2(TBuffer &buf, void *obj) {
      ((::EdbH2*)obj)->::EdbH2::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbH2

//______________________________________________________________________________
void EdbCell2::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbCell2.
      typedef ::EdbCell2 msvc_bug_workaround;
      TClass *R__cl = msvc_bug_workaround::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCellLim", &eCellLim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCapacity", &eCapacity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*epO", &epO);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*epC", &epC);
      EdbH2::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbCell2(void *p) {
      return  p ? new(p) ::EdbCell2 : new ::EdbCell2;
   }
   static void *newArray_EdbCell2(Long_t nElements, void *p) {
      return p ? new(p) ::EdbCell2[nElements] : new ::EdbCell2[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbCell2(void *p) {
      delete ((::EdbCell2*)p);
   }
   static void deleteArray_EdbCell2(void *p) {
      delete [] ((::EdbCell2*)p);
   }
   static void destruct_EdbCell2(void *p) {
      typedef ::EdbCell2 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbCell2(TBuffer &buf, void *obj) {
      ((::EdbCell2*)obj)->::EdbCell2::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbCell2

//______________________________________________________________________________
void EdbPeak2::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbPeak2.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      EdbH2::Streamer(R__b);
      R__b >> eNpeaks;
      ePeak.Streamer(R__b);
      eMean3.Streamer(R__b);
      eMean.Streamer(R__b);
      R__b >> eNorm;
      R__b.CheckByteCount(R__s, R__c, EdbPeak2::IsA());
   } else {
      R__c = R__b.WriteVersion(EdbPeak2::IsA(), kTRUE);
      EdbH2::Streamer(R__b);
      R__b << eNpeaks;
      ePeak.Streamer(R__b);
      eMean3.Streamer(R__b);
      eMean.Streamer(R__b);
      R__b << eNorm;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbPeak2::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbPeak2.
      typedef ::EdbPeak2 msvc_bug_workaround;
      TClass *R__cl = msvc_bug_workaround::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eNpeaks", &eNpeaks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePeak", &ePeak);
      R__insp.InspectMember(ePeak, "ePeak.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eMean3", &eMean3);
      R__insp.InspectMember(eMean3, "eMean3.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eMean", &eMean);
      R__insp.InspectMember(eMean, "eMean.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eNorm", &eNorm);
      EdbH2::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbPeak2(void *p) {
      return  p ? new(p) ::EdbPeak2 : new ::EdbPeak2;
   }
   static void *newArray_EdbPeak2(Long_t nElements, void *p) {
      return p ? new(p) ::EdbPeak2[nElements] : new ::EdbPeak2[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbPeak2(void *p) {
      delete ((::EdbPeak2*)p);
   }
   static void deleteArray_EdbPeak2(void *p) {
      delete [] ((::EdbPeak2*)p);
   }
   static void destruct_EdbPeak2(void *p) {
      typedef ::EdbPeak2 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbPeak2(TBuffer &buf, void *obj) {
      ((::EdbPeak2*)obj)->::EdbPeak2::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbPeak2

//______________________________________________________________________________
void EdbMask::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbMask.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      eBuffer.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, EdbMask::IsA());
   } else {
      R__c = R__b.WriteVersion(EdbMask::IsA(), kTRUE);
      TObject::Streamer(R__b);
      eBuffer.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbMask::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbMask.
      typedef ::EdbMask msvc_bug_workaround;
      TClass *R__cl = msvc_bug_workaround::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eBuffer", &eBuffer);
      R__insp.InspectMember(eBuffer, "eBuffer.");
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbMask(void *p) {
      return  p ? new(p) ::EdbMask : new ::EdbMask;
   }
   static void *newArray_EdbMask(Long_t nElements, void *p) {
      return p ? new(p) ::EdbMask[nElements] : new ::EdbMask[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbMask(void *p) {
      delete ((::EdbMask*)p);
   }
   static void deleteArray_EdbMask(void *p) {
      delete [] ((::EdbMask*)p);
   }
   static void destruct_EdbMask(void *p) {
      typedef ::EdbMask current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbMask(TBuffer &buf, void *obj) {
      ((::EdbMask*)obj)->::EdbMask::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbMask

//______________________________________________________________________________
void EdbCombGen::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbCombGen.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      eElements.Streamer(R__b);
      {
         vector<bool> &R__stl =  eBits;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            bool R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      R__b >> eSize;
      R__b >> eItems;
      R__b >> eNext;
      R__b.CheckByteCount(R__s, R__c, EdbCombGen::IsA());
   } else {
      R__c = R__b.WriteVersion(EdbCombGen::IsA(), kTRUE);
      TObject::Streamer(R__b);
      eElements.Streamer(R__b);
      {
         vector<bool> &R__stl =  eBits;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<bool>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      R__b << eSize;
      R__b << eItems;
      R__b << eNext;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbCombGen::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbCombGen.
      typedef ::EdbCombGen msvc_bug_workaround;
      TClass *R__cl = msvc_bug_workaround::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eElements", &eElements);
      R__insp.InspectMember(eElements, "eElements.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eBits", (void*)&eBits);
      R__insp.InspectMember("vector<bool>", (void*)&eBits, "eBits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eSize", &eSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eItems", &eItems);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eNext", &eNext);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbCombGen(void *p) {
      return  p ? new(p) ::EdbCombGen : new ::EdbCombGen;
   }
   static void *newArray_EdbCombGen(Long_t nElements, void *p) {
      return p ? new(p) ::EdbCombGen[nElements] : new ::EdbCombGen[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbCombGen(void *p) {
      delete ((::EdbCombGen*)p);
   }
   static void deleteArray_EdbCombGen(void *p) {
      delete [] ((::EdbCombGen*)p);
   }
   static void destruct_EdbCombGen(void *p) {
      typedef ::EdbCombGen current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbCombGen(TBuffer &buf, void *obj) {
      ((::EdbCombGen*)obj)->::EdbCombGen::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbCombGen

namespace ROOTDict {
   void vectorlEboolgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEboolgR_Dictionary();
   static void *new_vectorlEboolgR(void *p = 0);
   static void *newArray_vectorlEboolgR(Long_t size, void *p);
   static void delete_vectorlEboolgR(void *p);
   static void deleteArray_vectorlEboolgR(void *p);
   static void destruct_vectorlEboolgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<bool>*)
   {
      vector<bool> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<bool>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<bool>", -2, "vectorbool.dll", 0,
                  typeid(vector<bool>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEboolgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<bool>) );
      instance.SetNew(&new_vectorlEboolgR);
      instance.SetNewArray(&newArray_vectorlEboolgR);
      instance.SetDelete(&delete_vectorlEboolgR);
      instance.SetDeleteArray(&deleteArray_vectorlEboolgR);
      instance.SetDestructor(&destruct_vectorlEboolgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<bool> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<bool>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEboolgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<bool>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEboolgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bool> : new vector<bool>;
   }
   static void *newArray_vectorlEboolgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bool>[nElements] : new vector<bool>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEboolgR(void *p) {
      delete ((vector<bool>*)p);
   }
   static void deleteArray_vectorlEboolgR(void *p) {
      delete [] ((vector<bool>*)p);
   }
   static void destruct_vectorlEboolgR(void *p) {
      typedef vector<bool> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<bool>

/********************************************************
* EmathDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtableEmathDict();

extern "C" void G__set_cpp_environmentEmathDict() {
  G__add_ipath(".");
  G__add_ipath("..\\..\\include");
  G__cpp_reset_tagtableEmathDict();
}
#include <new>
extern "C" int G__cpp_dllrevEmathDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TIndexCell */
static int G__EmathDict_273_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TIndexCell* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TIndexCell[n];
     } else {
       p = new((void*) gvp) TIndexCell[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TIndexCell;
     } else {
       p = new((void*) gvp) TIndexCell;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EmathDictLN_TIndexCell));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TIndexCell* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TIndexCell((Long_t) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TIndexCell((Long_t) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EmathDictLN_TIndexCell));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TIndexCell* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TIndexCell(*(TIndexCell*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TIndexCell(*(TIndexCell*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EmathDictLN_TIndexCell));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((TIndexCell*) G__getstructoffset())->ComparePatterns((Int_t) G__int(libp->para[0]), (TIndexCell*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((TIndexCell*) G__getstructoffset())->ComparePatterns((Int_t) G__int(libp->para[0]), (TIndexCell*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 105, (long) ((TIndexCell*) G__getstructoffset())->ComparePatterns((Int_t) G__int(libp->para[0]), (Long_t*) G__int(libp->para[1])
, (TIndexCell*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 105, (long) ((TIndexCell*) G__getstructoffset())->ComparePatterns((Int_t) G__int(libp->para[0]), (Long_t*) G__int(libp->para[1])
, (TIndexCell*) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TIndexCell*) G__getstructoffset())->Shift((Long_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TIndexCell*) G__getstructoffset())->Shift((Int_t) G__int(libp->para[0]), (Long_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TIndexCell*) G__getstructoffset())->Delete();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TIndexCell*) G__getstructoffset())->Drop();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TIndexCell*) G__getstructoffset())->Drop((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TIndexCell*) G__getstructoffset())->DropCouples((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TIndexCell*) G__getstructoffset())->DropButFirst((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TIndexCell*) G__getstructoffset())->DropButLast((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TIndexCell*) G__getstructoffset())->Nlevels());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TIndexCell*) G__getstructoffset())->N());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TIndexCell*) G__getstructoffset())->N((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TIndexCell*) G__getstructoffset())->MinN((Int_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TIndexCell*) G__getstructoffset())->MaxN((Int_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((const TIndexCell*) G__getstructoffset())->MinV((Int_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((const TIndexCell*) G__getstructoffset())->MaxV((Int_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TIndexCell*) G__getstructoffset())->MinN((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TIndexCell*) G__getstructoffset())->MaxN((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((const TIndexCell*) G__getstructoffset())->MinV((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((const TIndexCell*) G__getstructoffset())->MaxV((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TIndexCell*) G__getstructoffset())->Add((Int_t) G__int(libp->para[0]), (Long_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TIndexCell*) G__getstructoffset())->Add((Long_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TIndexCell*) G__getstructoffset())->FindAdd((Long_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TIndexCell*) G__getstructoffset())->Find((Int_t) G__int(libp->para[0]), (Long_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TIndexCell*) G__getstructoffset())->Find((Long_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TIndexCell*) G__getstructoffset())->At((Int_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TIndexCell*) G__getstructoffset())->At((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TIndexCell*) G__getstructoffset())->List());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((const TIndexCell*) G__getstructoffset())->Value());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TIndexCell*) G__getstructoffset())->GetValues((Int_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])
, (Long_t*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TIndexCell*) G__getstructoffset())->GetEntries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TIndexCell*) G__getstructoffset())->SetName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TIndexCell*) G__getstructoffset())->SetValue((Long_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TIndexCell*) G__getstructoffset())->PrintStat();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TIndexCell*) G__getstructoffset())->PrintPopulation((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TIndexCell*) G__getstructoffset())->Sort((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TIndexCell*) G__getstructoffset())->Sort();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TIndexCell*) G__getstructoffset())->Purge((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TIndexCell::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TIndexCell::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TIndexCell::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TIndexCell::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TIndexCell*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TIndexCell::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TIndexCell::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TIndexCell::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_273_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TIndexCell::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TIndexCell G__TTIndexCell;
static int G__EmathDict_273_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TIndexCell*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TIndexCell*) (soff+(sizeof(TIndexCell)*i)))->~G__TTIndexCell();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TIndexCell*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TIndexCell*) (soff))->~G__TTIndexCell();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EmathDict_273_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TIndexCell* dest = (TIndexCell*) G__getstructoffset();
   *dest = *(TIndexCell*) libp->para[0].ref;
   const TIndexCell& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TIndexCellIter */
static int G__EmathDict_274_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TIndexCellIter* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TIndexCellIter(
(TIndexCell*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TIndexCellIter(
(TIndexCell*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TIndexCellIter((TIndexCell*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TIndexCellIter((TIndexCell*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EmathDictLN_TIndexCellIter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_274_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TIndexCellIter*) G__getstructoffset())->GetCell());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_274_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TIndexCellIter*) G__getstructoffset())->Next());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_274_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TIndexCellIter*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_274_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TIndexCellIter*) G__getstructoffset())->LevelDown());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_274_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TIndexCellIter*) G__getstructoffset())->Test();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_274_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TIndexCellIter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_274_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TIndexCellIter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_274_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TIndexCellIter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_274_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TIndexCellIter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_274_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TIndexCellIter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_274_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TIndexCellIter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_274_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TIndexCellIter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_274_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TIndexCellIter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_274_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TIndexCellIter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EmathDict_274_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TIndexCellIter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TIndexCellIter(*(TIndexCellIter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EmathDictLN_TIndexCellIter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TIndexCellIter G__TTIndexCellIter;
static int G__EmathDict_274_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TIndexCellIter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TIndexCellIter*) (soff+(sizeof(TIndexCellIter)*i)))->~G__TTIndexCellIter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TIndexCellIter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TIndexCellIter*) (soff))->~G__TTIndexCellIter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TIndexCellIterV */
static int G__EmathDict_275_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TIndexCellIterV* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TIndexCellIterV(
(TIndexCell*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (long*) G__int(libp->para[2]), (long*) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TIndexCellIterV(
(TIndexCell*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (long*) G__int(libp->para[2]), (long*) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TIndexCellIterV(
(TIndexCell*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (long*) G__int(libp->para[2]), (long*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TIndexCellIterV(
(TIndexCell*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (long*) G__int(libp->para[2]), (long*) G__int(libp->para[3]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EmathDictLN_TIndexCellIterV));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_275_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TIndexCellIterV*) G__getstructoffset())->GetCell());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_275_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TIndexCellIterV*) G__getstructoffset())->Next());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_275_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TIndexCellIterV*) G__getstructoffset())->NextAll());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_275_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TIndexCellIterV*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_275_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TIndexCellIterV*) G__getstructoffset())->LevelDown());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_275_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TIndexCellIterV*) G__getstructoffset())->Test();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_275_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TIndexCellIterV::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_275_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TIndexCellIterV::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_275_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TIndexCellIterV::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_275_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TIndexCellIterV::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_275_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TIndexCellIterV*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_275_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TIndexCellIterV::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_275_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TIndexCellIterV::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_275_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TIndexCellIterV::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_275_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TIndexCellIterV::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EmathDict_275_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TIndexCellIterV* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TIndexCellIterV(*(TIndexCellIterV*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EmathDictLN_TIndexCellIterV));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TIndexCellIterV G__TTIndexCellIterV;
static int G__EmathDict_275_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TIndexCellIterV*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TIndexCellIterV*) (soff+(sizeof(TIndexCellIterV)*i)))->~G__TTIndexCellIterV();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TIndexCellIterV*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TIndexCellIterV*) (soff))->~G__TTIndexCellIterV();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbMath */
static int G__EmathDict_279_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbMath* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbMath[n];
     } else {
       p = new((void*) gvp) EdbMath[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbMath;
     } else {
       p = new((void*) gvp) EdbMath;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EmathDictLN_EdbMath));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_279_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) EdbMath::Magnitude3((float*) G__int(libp->para[0]), (float*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_279_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) EdbMath::DistancePointLine3((float*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]), (bool) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_279_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) EdbMath::Angle3((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_279_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) EdbMath::LineLineIntersect(
(float*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]), (float*) G__int(libp->para[3])
, (float*) G__int(libp->para[4]), (float*) G__int(libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_279_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp5 { float a[1][2]; }* G__Ap5 = (struct G__aRyp5*) G__int(libp->para[5]);
      G__letint(result7, 103, (long) EdbMath::LinFitDiag(
(int) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]), (float*) G__int(libp->para[3])
, (float*) G__int(libp->para[4]), G__Ap5->a
, (float*) G__int(libp->para[6])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_279_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) EdbMath::LinFitCOV(
(int) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]), (double*) G__int(libp->para[3])
, (float*) G__int(libp->para[4]), (float*) G__int(libp->para[5])
, (float*) G__int(libp->para[6])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_279_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbMath::LFITW(
(float*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_279_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbMath::LFIT3(
(float*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]), (float*) G__int(libp->para[3])
, (int) G__int(libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7])
, *(float*) G__Floatref(&libp->para[8]), *(float*) G__Floatref(&libp->para[9])
, *(float*) G__Floatref(&libp->para[10]), *(float*) G__Floatref(&libp->para[11])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_279_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbMath::ArrStat((int) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (float*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_279_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbMath::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_279_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbMath::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_279_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbMath::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_279_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbMath::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_279_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbMath*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_279_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbMath*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_279_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbMath*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_279_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbMath*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_279_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbMath::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_279_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbMath::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_279_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbMath::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_279_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbMath::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EmathDict_279_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbMath* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbMath(*(EdbMath*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EmathDictLN_EdbMath));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbMath G__TEdbMath;
static int G__EmathDict_279_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbMath*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbMath*) (soff+(sizeof(EdbMath)*i)))->~G__TEdbMath();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbMath*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbMath*) (soff))->~G__TEdbMath();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EmathDict_279_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbMath* dest = (EdbMath*) G__getstructoffset();
   *dest = *(EdbMath*) libp->para[0].ref;
   const EdbMath& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TIndex2 */
static int G__EmathDict_280_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TIndex2* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TIndex2[n];
     } else {
       p = new((void*) gvp) TIndex2[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TIndex2;
     } else {
       p = new((void*) gvp) TIndex2;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EmathDictLN_TIndex2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_280_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TIndex2* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TIndex2((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TIndex2((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EmathDictLN_TIndex2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_280_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) TIndex2::BuildValue((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_280_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TIndex2*) G__getstructoffset())->SetMinor((int) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_280_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TIndex2*) G__getstructoffset())->Major((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_280_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TIndex2*) G__getstructoffset())->Minor((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_280_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TIndex2*) G__getstructoffset())->BuildIndex((int) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_280_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TIndex2*) G__getstructoffset())->Find((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_280_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TIndex2*) G__getstructoffset())->FindIndex((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_280_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TIndex2*) G__getstructoffset())->FindIndexArr((Int_t) G__int(libp->para[0]), *(TArrayI*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_280_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TIndex2*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_280_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TIndex2::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_280_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TIndex2::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_280_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TIndex2::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_280_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TIndex2::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_280_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TIndex2*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_280_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TIndex2::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_280_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TIndex2::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_280_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TIndex2::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_280_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TIndex2::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EmathDict_280_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TIndex2* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TIndex2(*(TIndex2*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EmathDictLN_TIndex2));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TIndex2 G__TTIndex2;
static int G__EmathDict_280_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TIndex2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TIndex2*) (soff+(sizeof(TIndex2)*i)))->~G__TTIndex2();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TIndex2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TIndex2*) (soff))->~G__TTIndex2();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EmathDict_280_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TIndex2* dest = (TIndex2*) G__getstructoffset();
   *dest = *(TIndex2*) libp->para[0].ref;
   const TIndex2& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbH1 */
static int G__EmathDict_319_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbH1* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbH1[n];
     } else {
       p = new((void*) gvp) EdbH1[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbH1;
     } else {
       p = new((void*) gvp) EdbH1;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EmathDictLN_EdbH1));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbH1* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbH1(
(int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
   } else {
     p = new((void*) gvp) EdbH1(
(int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EmathDictLN_EdbH1));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbH1* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbH1(*(EdbH1*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) EdbH1(*(EdbH1*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EmathDictLN_EdbH1));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbH1*) G__getstructoffset())->Set0();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbH1*) G__getstructoffset())->Copy(*(EdbH1*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbH1*) G__getstructoffset())->InitH1(*(EdbH1*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbH1*) G__getstructoffset())->InitH1((int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbH1*) G__getstructoffset())->CleanCells();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbH1*) G__getstructoffset())->PrintStat();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbH1*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbH1*) G__getstructoffset())->Delete();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbH1*) G__getstructoffset())->DiscardHighCells((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbH1*) G__getstructoffset())->Ncell());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbH1*) G__getstructoffset())->N());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbH1*) G__getstructoffset())->IX((float) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbH1*) G__getstructoffset())->Jcell((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbH1*) G__getstructoffset())->Jcell((float) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbH1*) G__getstructoffset())->X((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbH1*) G__getstructoffset())->Xmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbH1*) G__getstructoffset())->Xmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbH1*) G__getstructoffset())->Xbin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbH1*) G__getstructoffset())->Bin((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbH1*) G__getstructoffset())->MaxBin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((EdbH1*) G__getstructoffset())->XminA((float) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((EdbH1*) G__getstructoffset())->XminA());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((EdbH1*) G__getstructoffset())->XmaxA((float) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((EdbH1*) G__getstructoffset())->XmaxA());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbH1*) G__getstructoffset())->AddBin((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbH1*) G__getstructoffset())->Fill((float) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbH1*) G__getstructoffset())->Fill((float) G__double(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbH1*) G__getstructoffset())->SetBin((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((EdbH1*) G__getstructoffset())->Integral());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((EdbH1*) G__getstructoffset())->Integral((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbH1*) G__getstructoffset())->Mean());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((EdbH1*) G__getstructoffset())->DrawSpectrum((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((EdbH1*) G__getstructoffset())->DrawSpectrum());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((EdbH1*) G__getstructoffset())->DrawH1((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((EdbH1*) G__getstructoffset())->DrawH1((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((EdbH1*) G__getstructoffset())->DrawH1());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbH1::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbH1::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbH1::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbH1::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbH1*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbH1::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbH1::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbH1::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_319_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbH1::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbH1 G__TEdbH1;
static int G__EmathDict_319_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbH1*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbH1*) (soff+(sizeof(EdbH1)*i)))->~G__TEdbH1();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbH1*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbH1*) (soff))->~G__TEdbH1();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EmathDict_319_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbH1* dest = (EdbH1*) G__getstructoffset();
   *dest = *(EdbH1*) libp->para[0].ref;
   const EdbH1& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbCell1 */
static int G__EmathDict_320_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbCell1* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbCell1[n];
     } else {
       p = new((void*) gvp) EdbCell1[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbCell1;
     } else {
       p = new((void*) gvp) EdbCell1;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EmathDictLN_EdbCell1));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_320_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbCell1*) G__getstructoffset())->InitCell((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_320_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbCell1*) G__getstructoffset())->Delete();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_320_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbCell1*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_320_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((EdbCell1*) G__getstructoffset())->AddObject((float) G__double(libp->para[0]), (TObject*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_320_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((EdbCell1*) G__getstructoffset())->AddObject((int) G__int(libp->para[0]), (TObject*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_320_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbCell1*) G__getstructoffset())->SelectObjects(*(TObjArray*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_320_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbCell1*) G__getstructoffset())->SelectObjects((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, *(TObjArray*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_320_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbCell1*) G__getstructoffset())->SelectObjects((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, *(TObjArray*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_320_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbCell1*) G__getstructoffset())->SelectObjectsC((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, *(TObjArray*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_320_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbCell1*) G__getstructoffset())->SelectObjectsC((float) G__double(libp->para[0]), (int) G__int(libp->para[1])
, *(TObjArray*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_320_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbCell1*) G__getstructoffset())->GetObject((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_320_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbCell1*) G__getstructoffset())->PrintStat();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_320_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbCell1::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_320_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbCell1::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_320_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbCell1::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_320_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbCell1::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_320_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbCell1*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_320_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbCell1::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_320_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbCell1::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_320_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbCell1::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_320_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbCell1::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EmathDict_320_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbCell1* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbCell1(*(EdbCell1*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EmathDictLN_EdbCell1));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbCell1 G__TEdbCell1;
static int G__EmathDict_320_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbCell1*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbCell1*) (soff+(sizeof(EdbCell1)*i)))->~G__TEdbCell1();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbCell1*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbCell1*) (soff))->~G__TEdbCell1();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EmathDict_320_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbCell1* dest = (EdbCell1*) G__getstructoffset();
   *dest = *(EdbCell1*) libp->para[0].ref;
   const EdbCell1& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbH2 */
static int G__EmathDict_321_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbH2* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbH2[n];
     } else {
       p = new((void*) gvp) EdbH2[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbH2;
     } else {
       p = new((void*) gvp) EdbH2;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EmathDictLN_EdbH2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbH2* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbH2(
(int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (int) G__int(libp->para[3])
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5]));
   } else {
     p = new((void*) gvp) EdbH2(
(int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (int) G__int(libp->para[3])
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EmathDictLN_EdbH2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbH2* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbH2(*(EdbH2*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) EdbH2(*(EdbH2*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EmathDictLN_EdbH2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbH2*) G__getstructoffset())->Set0();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbH2*) G__getstructoffset())->Copy(*(EdbH2*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbH2*) G__getstructoffset())->InitH2(*(EdbH2*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbH2*) G__getstructoffset())->InitH2((int*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (float*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbH2*) G__getstructoffset())->InitH2((int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (int) G__int(libp->para[3])
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbH2*) G__getstructoffset())->CleanCells();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbH2*) G__getstructoffset())->PrintStat();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbH2*) G__getstructoffset())->Delete();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbH2*) G__getstructoffset())->DiscardHighCells((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbH2*) G__getstructoffset())->Ncell());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbH2*) G__getstructoffset())->NX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbH2*) G__getstructoffset())->NY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbH2*) G__getstructoffset())->IX((float) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbH2*) G__getstructoffset())->IY((float) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbH2*) G__getstructoffset())->IX((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbH2*) G__getstructoffset())->IY((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbH2*) G__getstructoffset())->Jcell((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbH2*) G__getstructoffset())->Jcell((float) G__double(libp->para[0]), (float) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbH2*) G__getstructoffset())->Jcell((float*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbH2*) G__getstructoffset())->X((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbH2*) G__getstructoffset())->Y((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbH2*) G__getstructoffset())->Xj((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbH2*) G__getstructoffset())->Yj((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbH2*) G__getstructoffset())->Xmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbH2*) G__getstructoffset())->Xmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbH2*) G__getstructoffset())->Ymin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbH2*) G__getstructoffset())->Ymax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((EdbH2*) G__getstructoffset())->XminA((float) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((EdbH2*) G__getstructoffset())->XminA());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((EdbH2*) G__getstructoffset())->XmaxA((float) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((EdbH2*) G__getstructoffset())->XmaxA());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((EdbH2*) G__getstructoffset())->YminA((float) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((EdbH2*) G__getstructoffset())->YminA());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((EdbH2*) G__getstructoffset())->YmaxA((float) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((EdbH2*) G__getstructoffset())->YmaxA());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbH2*) G__getstructoffset())->ProjectionX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbH2*) G__getstructoffset())->ProjectionY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbH2*) G__getstructoffset())->Xbin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbH2*) G__getstructoffset())->Ybin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbH2*) G__getstructoffset())->Bin((float) G__double(libp->para[0]), (float) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbH2*) G__getstructoffset())->Bin((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbH2*) G__getstructoffset())->Bin((int*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbH2*) G__getstructoffset())->Bin((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbH2*) G__getstructoffset())->MaxBin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbH2*) G__getstructoffset())->AddBin((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbH2*) G__getstructoffset())->Fill((float) G__double(libp->para[0]), (float) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbH2*) G__getstructoffset())->Fill((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbH2*) G__getstructoffset())->SetBin((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbH2*) G__getstructoffset())->SetBin((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((EdbH2*) G__getstructoffset())->Integral());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((EdbH2*) G__getstructoffset())->Integral((int*) G__int(libp->para[0]), (int*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbH2*) G__getstructoffset())->Mean());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((EdbH2*) G__getstructoffset())->DrawSpectrum((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((EdbH2*) G__getstructoffset())->DrawSpectrum((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((EdbH2*) G__getstructoffset())->DrawSpectrum());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((EdbH2*) G__getstructoffset())->DrawH2((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((EdbH2*) G__getstructoffset())->DrawH2((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((EdbH2*) G__getstructoffset())->DrawH2());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbH2::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbH2::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbH2::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbH2::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbH2*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbH2::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbH2::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbH2::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_321_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbH2::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbH2 G__TEdbH2;
static int G__EmathDict_321_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbH2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbH2*) (soff+(sizeof(EdbH2)*i)))->~G__TEdbH2();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbH2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbH2*) (soff))->~G__TEdbH2();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EmathDict_321_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbH2* dest = (EdbH2*) G__getstructoffset();
   *dest = *(EdbH2*) libp->para[0].ref;
   const EdbH2& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbPeak2 */
static int G__EmathDict_322_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbPeak2* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbPeak2[n];
     } else {
       p = new((void*) gvp) EdbPeak2[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbPeak2;
     } else {
       p = new((void*) gvp) EdbPeak2;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EmathDictLN_EdbPeak2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_322_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbPeak2* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbPeak2(*(EdbH2*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) EdbPeak2(*(EdbH2*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EmathDictLN_EdbPeak2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_322_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPeak2*) G__getstructoffset())->Delete();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_322_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((EdbPeak2*) G__getstructoffset())->Init(*(EdbH2*) libp->para[0].ref, (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((EdbPeak2*) G__getstructoffset())->Init(*(EdbH2*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_322_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPeak2*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_322_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPeak2*) G__getstructoffset())->InitPeaks((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_322_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbPeak2*) G__getstructoffset())->FindPeak((int*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_322_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbPeak2*) G__getstructoffset())->FindPeak((float*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_322_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbPeak2*) G__getstructoffset())->FindPeak(*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_322_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbPeak2*) G__getstructoffset())->FindPeak9(*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_322_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 102, (double) ((EdbPeak2*) G__getstructoffset())->FindGlobalPeak(*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, (float) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 102, (double) ((EdbPeak2*) G__getstructoffset())->FindGlobalPeak(*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_322_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbPeak2*) G__getstructoffset())->ProbPeak());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_322_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbPeak2*) G__getstructoffset())->ProbPeak(*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_322_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbPeak2*) G__getstructoffset())->ProbPeak((int*) G__int(libp->para[0]), (int*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_322_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbPeak2*) G__getstructoffset())->WipePeak((int*) G__int(libp->para[0]), (int*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_322_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbPeak2*) G__getstructoffset())->ProbPeaks((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_322_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbPeak2*) G__getstructoffset())->ProbPeaks((int) G__int(libp->para[0]), (int*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_322_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbPeak2*) G__getstructoffset())->EstimatePeakVolume((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_322_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbPeak2*) G__getstructoffset())->EstimatePeakVolumeSafe((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_322_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbPeak2*) G__getstructoffset())->EstimatePeakMeanPosition((int*) G__int(libp->para[0]), (int*) G__int(libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_322_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((EdbPeak2*) G__getstructoffset())->Smooth((Option_t*) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((EdbPeak2*) G__getstructoffset())->Smooth());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_322_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbPeak2*) G__getstructoffset())->Xmean());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_322_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbPeak2*) G__getstructoffset())->Ymean());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_322_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((const EdbPeak2*) G__getstructoffset())->Peak((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((const EdbPeak2*) G__getstructoffset())->Peak());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_322_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((const EdbPeak2*) G__getstructoffset())->Mean3((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((const EdbPeak2*) G__getstructoffset())->Mean3());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_322_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((const EdbPeak2*) G__getstructoffset())->Mean((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((const EdbPeak2*) G__getstructoffset())->Mean());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_322_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbPeak2::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_322_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbPeak2::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_322_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbPeak2::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_322_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbPeak2::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_322_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPeak2*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_322_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbPeak2::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_322_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbPeak2::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_322_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbPeak2::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_322_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbPeak2::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EmathDict_322_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbPeak2* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbPeak2(*(EdbPeak2*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EmathDictLN_EdbPeak2));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbPeak2 G__TEdbPeak2;
static int G__EmathDict_322_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbPeak2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbPeak2*) (soff+(sizeof(EdbPeak2)*i)))->~G__TEdbPeak2();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbPeak2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbPeak2*) (soff))->~G__TEdbPeak2();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EmathDict_322_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbPeak2* dest = (EdbPeak2*) G__getstructoffset();
   *dest = *(EdbPeak2*) libp->para[0].ref;
   const EdbPeak2& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbCell2 */
static int G__EmathDict_323_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbCell2* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbCell2[n];
     } else {
       p = new((void*) gvp) EdbCell2[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbCell2;
     } else {
       p = new((void*) gvp) EdbCell2;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EmathDictLN_EdbCell2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_323_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbCell2* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbCell2(*(EdbCell2*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) EdbCell2(*(EdbCell2*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EmathDictLN_EdbCell2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_323_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbCell2*) G__getstructoffset())->Set0();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_323_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbCell2*) G__getstructoffset())->Copy(*(EdbCell2*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_323_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbCell2*) G__getstructoffset())->InitEPC();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_323_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbCell2*) G__getstructoffset())->CellLim());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_323_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbCell2*) G__getstructoffset())->InitCell(*(EdbCell2*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_323_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbCell2*) G__getstructoffset())->InitCell(
(int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (int) G__int(libp->para[3])
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5])
, (int) G__int(libp->para[6])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_323_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbCell2*) G__getstructoffset())->InitCell((int) G__int(libp->para[0]), (int*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]), (float*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_323_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbCell2*) G__getstructoffset())->Delete();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_323_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbCell2*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_323_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((EdbCell2*) G__getstructoffset())->AddObject((float*) G__int(libp->para[0]), (TObject*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_323_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((EdbCell2*) G__getstructoffset())->AddObject((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (TObject*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_323_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((EdbCell2*) G__getstructoffset())->AddObject((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (TObject*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_323_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((EdbCell2*) G__getstructoffset())->AddObject((int) G__int(libp->para[0]), (TObject*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_323_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbCell2*) G__getstructoffset())->SelectObjects(*(TObjArray*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_323_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbCell2*) G__getstructoffset())->SelectObjects((int*) G__int(libp->para[0]), (int*) G__int(libp->para[1])
, *(TObjArray*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_323_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbCell2*) G__getstructoffset())->SelectObjects((float*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, *(TObjArray*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_323_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbCell2*) G__getstructoffset())->SelectObjectsCJ((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, *(TObjArray*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_323_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbCell2*) G__getstructoffset())->SelectObjectsC((int*) G__int(libp->para[0]), (int*) G__int(libp->para[1])
, *(TObjArray*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_323_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbCell2*) G__getstructoffset())->SelectObjectsC((float*) G__int(libp->para[0]), (int*) G__int(libp->para[1])
, *(TObjArray*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_323_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbCell2*) G__getstructoffset())->SelectObjectsC((float*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, *(TObjArray*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_323_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbCell2*) G__getstructoffset())->GetObject((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_323_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbCell2*) G__getstructoffset())->GetObject((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_323_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbCell2*) G__getstructoffset())->GetObject((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_323_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbCell2*) G__getstructoffset())->PrintStat();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_323_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbCell2::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_323_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbCell2::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_323_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbCell2::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_323_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbCell2::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_323_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbCell2*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_323_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbCell2::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_323_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbCell2::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_323_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbCell2::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_323_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbCell2::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbCell2 G__TEdbCell2;
static int G__EmathDict_323_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbCell2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbCell2*) (soff+(sizeof(EdbCell2)*i)))->~G__TEdbCell2();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbCell2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbCell2*) (soff))->~G__TEdbCell2();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EmathDict_323_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbCell2* dest = (EdbCell2*) G__getstructoffset();
   *dest = *(EdbCell2*) libp->para[0].ref;
   const EdbCell2& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbMask */
static int G__EmathDict_324_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbMask* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbMask[n];
     } else {
       p = new((void*) gvp) EdbMask[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbMask;
     } else {
       p = new((void*) gvp) EdbMask;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EmathDictLN_EdbMask));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_324_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbMask* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbMask((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) EdbMask((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EmathDictLN_EdbMask));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_324_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbMask*) G__getstructoffset())->At((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_324_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbMask*) G__getstructoffset())->SetAt((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_324_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbMask*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_324_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbMask::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_324_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbMask::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_324_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbMask::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_324_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbMask::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_324_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbMask*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_324_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbMask::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_324_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbMask::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_324_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbMask::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_324_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbMask::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EmathDict_324_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbMask* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbMask(*(EdbMask*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EmathDictLN_EdbMask));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbMask G__TEdbMask;
static int G__EmathDict_324_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbMask*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbMask*) (soff+(sizeof(EdbMask)*i)))->~G__TEdbMask();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbMask*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbMask*) (soff))->~G__TEdbMask();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EmathDict_324_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbMask* dest = (EdbMask*) G__getstructoffset();
   *dest = *(EdbMask*) libp->para[0].ref;
   const EdbMask& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbCombGen */
static int G__EmathDict_325_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbCombGen* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbCombGen[n];
     } else {
       p = new((void*) gvp) EdbCombGen[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbCombGen;
     } else {
       p = new((void*) gvp) EdbCombGen;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EmathDictLN_EdbCombGen));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_325_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbCombGen* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbCombGen(*(TObjArray*) libp->para[0].ref, (int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) EdbCombGen(*(TObjArray*) libp->para[0].ref, (int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbCombGen(*(TObjArray*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) EdbCombGen(*(TObjArray*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EmathDictLN_EdbCombGen));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_325_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((EdbCombGen*) G__getstructoffset())->NextCombination(*(TObjArray*) libp->para[0].ref, *(TObjArray*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_325_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbCombGen::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_325_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbCombGen::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_325_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbCombGen::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_325_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbCombGen::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_325_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbCombGen*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_325_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbCombGen::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_325_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbCombGen::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_325_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbCombGen::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EmathDict_325_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbCombGen::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbCombGen G__TEdbCombGen;
static int G__EmathDict_325_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbCombGen*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbCombGen*) (soff+(sizeof(EdbCombGen)*i)))->~G__TEdbCombGen();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbCombGen*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbCombGen*) (soff))->~G__TEdbCombGen();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TIndexCell */

/* TIndexCellIter */

/* TIndexCellIterV */

/* EdbMath */

/* TIndex2 */

/* EdbH1 */

/* EdbCell1 */

/* EdbH2 */

/* EdbPeak2 */

/* EdbCell2 */

/* EdbMask */

/* EdbCombGen */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncEmathDict {
 public:
  G__Sizep2memfuncEmathDict(): p(&G__Sizep2memfuncEmathDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncEmathDict::*p)();
};

size_t G__get_sizep2memfuncEmathDict()
{
  G__Sizep2memfuncEmathDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceEmathDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EmathDictLN_TIndexCell))) {
     TIndexCell *G__Lderived;
     G__Lderived=(TIndexCell*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EmathDictLN_TIndexCell),G__get_linked_tagnum(&G__EmathDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EmathDictLN_TIndexCellIter))) {
     TIndexCellIter *G__Lderived;
     G__Lderived=(TIndexCellIter*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EmathDictLN_TIndexCellIter),G__get_linked_tagnum(&G__EmathDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EmathDictLN_TIndexCellIterV))) {
     TIndexCellIterV *G__Lderived;
     G__Lderived=(TIndexCellIterV*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EmathDictLN_TIndexCellIterV),G__get_linked_tagnum(&G__EmathDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EmathDictLN_TIndex2))) {
     TIndex2 *G__Lderived;
     G__Lderived=(TIndex2*)0x1000;
     {
       TArrayD *G__Lpbase=(TArrayD*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EmathDictLN_TIndex2),G__get_linked_tagnum(&G__EmathDictLN_TArrayD),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TArray *G__Lpbase=(TArray*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EmathDictLN_TIndex2),G__get_linked_tagnum(&G__EmathDictLN_TArray),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EmathDictLN_EdbH1))) {
     EdbH1 *G__Lderived;
     G__Lderived=(EdbH1*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EmathDictLN_EdbH1),G__get_linked_tagnum(&G__EmathDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EmathDictLN_EdbCell1))) {
     EdbCell1 *G__Lderived;
     G__Lderived=(EdbCell1*)0x1000;
     {
       EdbH1 *G__Lpbase=(EdbH1*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EmathDictLN_EdbCell1),G__get_linked_tagnum(&G__EmathDictLN_EdbH1),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EmathDictLN_EdbCell1),G__get_linked_tagnum(&G__EmathDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EmathDictLN_EdbH2))) {
     EdbH2 *G__Lderived;
     G__Lderived=(EdbH2*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EmathDictLN_EdbH2),G__get_linked_tagnum(&G__EmathDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EmathDictLN_EdbPeak2))) {
     EdbPeak2 *G__Lderived;
     G__Lderived=(EdbPeak2*)0x1000;
     {
       EdbH2 *G__Lpbase=(EdbH2*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EmathDictLN_EdbPeak2),G__get_linked_tagnum(&G__EmathDictLN_EdbH2),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EmathDictLN_EdbPeak2),G__get_linked_tagnum(&G__EmathDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EmathDictLN_EdbCell2))) {
     EdbCell2 *G__Lderived;
     G__Lderived=(EdbCell2*)0x1000;
     {
       EdbH2 *G__Lpbase=(EdbH2*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EmathDictLN_EdbCell2),G__get_linked_tagnum(&G__EmathDictLN_EdbH2),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EmathDictLN_EdbCell2),G__get_linked_tagnum(&G__EmathDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EmathDictLN_EdbMask))) {
     EdbMask *G__Lderived;
     G__Lderived=(EdbMask*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EmathDictLN_EdbMask),G__get_linked_tagnum(&G__EmathDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EmathDictLN_EdbCombGen))) {
     EdbCombGen *G__Lderived;
     G__Lderived=(EdbCombGen*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EmathDictLN_EdbCombGen),G__get_linked_tagnum(&G__EmathDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableEmathDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Long_t",108,-1,0,-1);
   G__setnewtype(-1,"Signed long integer 4 bytes (long)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("iterator<iterator_traits<string::iterator>::iterator_category,iterator_traits<string::iterator>::value_type,iterator_traits<string::iterator>::difference_type,iterator_traits<string::iterator>::pointer,iterator_traits<string::iterator>::reference>",117,G__get_linked_tagnum(&G__EmathDictLN_iteratorlErandom_access_iterator_tagcOcharcOlongcOcharmUcOcharaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,char>",117,G__get_linked_tagnum(&G__EmathDictLN_iteratorlErandom_access_iterator_tagcOcharcOlongcOcharmUcOcharaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,char,long>",117,G__get_linked_tagnum(&G__EmathDictLN_iteratorlErandom_access_iterator_tagcOcharcOlongcOcharmUcOcharaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,char,long,char*>",117,G__get_linked_tagnum(&G__EmathDictLN_iteratorlErandom_access_iterator_tagcOcharcOlongcOcharmUcOcharaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<string::const_iterator>::iterator_category,iterator_traits<string::const_iterator>::value_type,iterator_traits<string::const_iterator>::difference_type,iterator_traits<string::const_iterator>::pointer,iterator_traits<string::const_iterator>::reference>",117,G__get_linked_tagnum(&G__EmathDictLN_iteratorlErandom_access_iterator_tagcOcharcOlongcOcharmUcOcharaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__EmathDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__EmathDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__EmathDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EmathDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>::iterator_category,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>::value_type,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>::difference_type,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>::pointer,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>::reference>",117,G__get_linked_tagnum(&G__EmathDictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__EmathDictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,ROOT::TSchemaHelper,long>",117,G__get_linked_tagnum(&G__EmathDictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,ROOT::TSchemaHelper,long,ROOT::TSchemaHelper*>",117,G__get_linked_tagnum(&G__EmathDictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__EmathDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLconst_iteratorgR),0,G__get_linked_tagnum(&G__EmathDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::const_iterator>::iterator_category,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::const_iterator>::value_type,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::const_iterator>::difference_type,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::const_iterator>::pointer,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::const_iterator>::reference>",117,G__get_linked_tagnum(&G__EmathDictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__EmathDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__EmathDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__EmathDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EmathDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>::iterator_category,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>::value_type,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>::difference_type,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>::pointer,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>::reference>",117,G__get_linked_tagnum(&G__EmathDictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,TVirtualArray*>",117,G__get_linked_tagnum(&G__EmathDictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,TVirtualArray*,long>",117,G__get_linked_tagnum(&G__EmathDictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,TVirtualArray*,long,TVirtualArray**>",117,G__get_linked_tagnum(&G__EmathDictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__EmathDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLconst_iteratorgR),0,G__get_linked_tagnum(&G__EmathDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::const_iterator>::iterator_category,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::const_iterator>::value_type,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::const_iterator>::difference_type,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::const_iterator>::pointer,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::const_iterator>::reference>",117,G__get_linked_tagnum(&G__EmathDictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__EmathDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__EmathDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__EmathDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__EmathDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__EmathDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__EmathDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__EmathDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__EmathDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__EmathDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TIndexCell */
static void G__setup_memvarTIndexCell(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EmathDictLN_TIndexCell));
   { TIndexCell *p; p=(TIndexCell*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,G__defined_typename("Long_t"),-1,4,"fValue=",0,"hash value");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EmathDictLN_TObjArray),-1,-1,4,"fList=",0,"list of TIndexCell's");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EmathDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TIndexCellIter */
static void G__setup_memvarTIndexCellIter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EmathDictLN_TIndexCellIter));
   { TIndexCellIter *p; p=(TIndexCellIter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__EmathDictLN_TIndexCell),-1,-1,4,"fCell=",0,"cell being iterated");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"fVind=",0,"current position in array");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLevel0=",0,"level to be iterated on");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLevel=",0,"current level");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPass=",0,"number of cells iterated");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fDirection=",0,"iteration direction");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EmathDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TIndexCellIterV */
static void G__setup_memvarTIndexCellIterV(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EmathDictLN_TIndexCellIterV));
   { TIndexCellIterV *p; p=(TIndexCellIterV*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__EmathDictLN_TIndexCell),-1,-1,4,"fCell=",0,"cell being iterated");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLevel0=",0,"level to be iterated on");
   G__memvar_setup((void*)0,76,0,0,-1,G__defined_typename("Long_t"),-1,4,"fVcent=",0,"central subcell");
   G__memvar_setup((void*)0,76,0,0,-1,G__defined_typename("Long_t"),-1,4,"fVdiff=",0,"volume to be iterated around Vcent");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"fVind=",0,"current position in array");
   G__memvar_setup((void*)0,76,0,0,-1,G__defined_typename("Long_t"),-1,4,"fVval=",0,"values corresponding to Vind");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLevel=",0,"current level");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPass=",0,"number of cells iterated");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fDirection=",0,"iteration direction");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EmathDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbMath */
static void G__setup_memvarEdbMath(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EmathDictLN_EdbMath));
   { EdbMath *p; p=(EdbMath*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EmathDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TIndex2 */
static void G__setup_memvarTIndex2(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EmathDictLN_TIndex2));
   { TIndex2 *p; p=(TIndex2*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EmathDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbH1 */
static void G__setup_memvarEdbH1(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EmathDictLN_EdbH1));
   { EdbH1 *p; p=(EdbH1*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eN=",0,"divisions");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"eMin=",0,"min");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"eMax=",0,"max");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"eBin=",0,"bin size");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eNcell=",0,"eN");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"eNC=",0,"! [eNcell] number of objects/cell");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EmathDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbCell1 */
static void G__setup_memvarEdbCell1(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EmathDictLN_EdbCell1));
   { EdbCell1 *p; p=(EdbCell1*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eCellLim=",0,"max number of entries into one cell (for memory allocation)");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__EmathDictLN_TObject),-1,-1,4,"epO=",0,"! pointers to objects [eNcell*eCellLim]");
   G__memvar_setup((void*)0,85,3,0,G__get_linked_tagnum(&G__EmathDictLN_TObject),-1,-1,4,"epC=",0,"! pointers to cells   [eNcell]");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EmathDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbH2 */
static void G__setup_memvarEdbH2(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EmathDictLN_EdbH2));
   { EdbH2 *p; p=(EdbH2*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eN[2]=",0,"divisions");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"eMin[2]=",0,"min");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"eMax[2]=",0,"max");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"eBin[2]=",0,"bin size");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eNcell=",0,"eNx*eNy");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"eNC=",0,"[eNcell] number of objects/cell");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EmathDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbPeak2 */
static void G__setup_memvarEdbPeak2(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EmathDictLN_EdbPeak2));
   { EdbPeak2 *p; p=(EdbPeak2*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->eNpeaks)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"eNpeaks=",0,"number of found peaks");
   G__memvar_setup((void*)((long)(&p->ePeak)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EmathDictLN_TArrayF),-1,-1,1,"ePeak=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eMean3)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EmathDictLN_TArrayF),-1,-1,1,"eMean3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eMean)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EmathDictLN_TArrayF),-1,-1,1,"eMean=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eNorm)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"eNorm=",0,"the norm-factor in case of the smoothing applied");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EmathDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbCell2 */
static void G__setup_memvarEdbCell2(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EmathDictLN_EdbCell2));
   { EdbCell2 *p; p=(EdbCell2*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eCellLim=",0,"max number of entries into one cell (for memory allocation)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eCapacity=",0,"eNcell*eCellLim");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__EmathDictLN_TObject),-1,-1,4,"epO=",0,"[eCapasity] array of the pointers to objects");
   G__memvar_setup((void*)0,85,3,0,G__get_linked_tagnum(&G__EmathDictLN_TObject),-1,-1,4,"epC=",0,"! [eNcell] pointers to cells");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EmathDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbMask */
static void G__setup_memvarEdbMask(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EmathDictLN_EdbMask));
   { EdbMask *p; p=(EdbMask*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__EmathDictLN_TArrayC),-1,-1,4,"eBuffer=",0,"body of the mask");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EmathDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbCombGen */
static void G__setup_memvarEdbCombGen(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EmathDictLN_EdbCombGen));
   { EdbCombGen *p; p=(EdbCombGen*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__EmathDictLN_TObjArray),-1,-1,4,"eElements=",0,"objects to be combinated");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__EmathDictLN_vectorlEboolcOallocatorlEboolgRsPgR),G__defined_typename("vector<bool>"),-1,4,"eBits=",0,"bits array");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eSize=",0,"total number of items");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eItems=",0,"number of items to be selected");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eNext=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EmathDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarEmathDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTIndexCell(void) {
   /* TIndexCell */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EmathDictLN_TIndexCell));
   G__memfunc_setup("TIndexCell",972,G__EmathDict_273_0_1, 105, G__get_linked_tagnum(&G__EmathDictLN_TIndexCell), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TIndexCell",972,G__EmathDict_273_0_2, 105, G__get_linked_tagnum(&G__EmathDictLN_TIndexCell), -1, 0, 1, 1, 1, 0, "l - 'Long_t' 0 - p1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TIndexCell",972,G__EmathDict_273_0_3, 105, G__get_linked_tagnum(&G__EmathDictLN_TIndexCell), -1, 0, 1, 1, 1, 0, "u 'TIndexCell' - 11 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ComparePatterns",1560,G__EmathDict_273_0_4, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - nind U 'TIndexCell' - 0 - cin "
"i - 'Int_t' 0 '0' srtip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ComparePatterns",1560,G__EmathDict_273_0_5, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - nind L - 'Long_t' 0 - vdiff "
"U 'TIndexCell' - 0 - cin i - 'Int_t' 0 '0' strip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Shift",510,G__EmathDict_273_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "l - 'Long_t' 0 - vshift", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Shift",510,G__EmathDict_273_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - n L - 'Long_t' 0 - vshift", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Delete",595,G__EmathDict_273_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Drop",405,G__EmathDict_273_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Drop",405,G__EmathDict_273_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DropCouples",1136,G__EmathDict_273_0_11, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DropButFirst",1224,G__EmathDict_273_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DropButLast",1108,G__EmathDict_273_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Nlevels",729,G__EmathDict_273_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("N",78,G__EmathDict_273_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("N",78,G__EmathDict_273_0_16, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MinN",370,G__EmathDict_273_0_17, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - level I - 'Int_t' 0 - vind", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MaxN",372,G__EmathDict_273_0_18, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - level I - 'Int_t' 0 - vind", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MinV",378,G__EmathDict_273_0_19, 108, -1, G__defined_typename("Long_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - level I - 'Int_t' 0 - vind", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MaxV",380,G__EmathDict_273_0_20, 108, -1, G__defined_typename("Long_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - level I - 'Int_t' 0 - vind", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MinN",370,G__EmathDict_273_0_21, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MaxN",372,G__EmathDict_273_0_22, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MinV",378,G__EmathDict_273_0_23, 108, -1, G__defined_typename("Long_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MaxV",380,G__EmathDict_273_0_24, 108, -1, G__defined_typename("Long_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__EmathDict_273_0_25, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - narg L - 'Long_t' 0 - varg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__EmathDict_273_0_26, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "l - 'Long_t' 0 - p1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindAdd",650,G__EmathDict_273_0_27, 85, G__get_linked_tagnum(&G__EmathDictLN_TIndexCell), -1, 0, 1, 1, 1, 0, "l - 'Long_t' 0 - p1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Find",385,G__EmathDict_273_0_28, 85, G__get_linked_tagnum(&G__EmathDictLN_TIndexCell), -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - narg L - 'Long_t' 0 - varg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Find",385,G__EmathDict_273_0_29, 85, G__get_linked_tagnum(&G__EmathDictLN_TIndexCell), -1, 0, 1, 1, 1, 8, "l - 'Long_t' 0 - p1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__EmathDict_273_0_30, 85, G__get_linked_tagnum(&G__EmathDictLN_TIndexCell), -1, 0, 2, 1, 1, 9, 
"i - 'Int_t' 0 - narg I - 'Int_t' 0 - vind", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__EmathDict_273_0_31, 85, G__get_linked_tagnum(&G__EmathDictLN_TIndexCell), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("List",412,G__EmathDict_273_0_32, 85, G__get_linked_tagnum(&G__EmathDictLN_TObjArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Value",509,G__EmathDict_273_0_33, 108, -1, G__defined_typename("Long_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetValues",912,G__EmathDict_273_0_34, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - level I - 'Int_t' 0 - vind "
"L - 'Long_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntries",1018,G__EmathDict_273_0_35, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetName",685,G__EmathDict_273_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - varlist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetValue",809,G__EmathDict_273_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "l - 'Long_t' 0 - p1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintStat",937,G__EmathDict_273_0_39, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintPopulation",1592,G__EmathDict_273_0_40, 121, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Sort",424,G__EmathDict_273_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 'kMaxInt' upto", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Purge",515,G__EmathDict_273_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Hash",388,(G__InterfaceMethod) NULL,107, -1, G__defined_typename("ULong_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsEqual",692,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__EmathDict_273_0_47, 85, G__get_linked_tagnum(&G__EmathDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TIndexCell::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EmathDict_273_0_48, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TIndexCell::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EmathDict_273_0_49, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TIndexCell::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EmathDict_273_0_50, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TIndexCell::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EmathDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EmathDict_273_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EmathDict_273_0_55, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TIndexCell::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EmathDict_273_0_56, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TIndexCell::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EmathDict_273_0_57, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TIndexCell::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EmathDict_273_0_58, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TIndexCell::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TIndexCell", 1098, G__EmathDict_273_0_59, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EmathDict_273_0_60, (int) ('u'), G__get_linked_tagnum(&G__EmathDictLN_TIndexCell), -1, 1, 1, 1, 1, 0, "u 'TIndexCell' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTIndexCellIter(void) {
   /* TIndexCellIter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EmathDictLN_TIndexCellIter));
   G__memfunc_setup("TIndexCellIter",1376,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__EmathDictLN_TIndexCellIter), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TIndexCellIter",1376,G__EmathDict_274_0_2, 105, G__get_linked_tagnum(&G__EmathDictLN_TIndexCellIter), -1, 0, 3, 1, 1, 0, 
"U 'TIndexCell' - 10 - cell i - - 0 - level "
"g - 'Bool_t' 0 'kIterForward' dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCell",672,G__EmathDict_274_0_3, 85, G__get_linked_tagnum(&G__EmathDictLN_TIndexCell), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Next",415,G__EmathDict_274_0_4, 85, G__get_linked_tagnum(&G__EmathDictLN_TIndexCell), -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__EmathDict_274_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LevelDown",912,G__EmathDict_274_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Test",416,G__EmathDict_274_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EmathDict_274_0_8, 85, G__get_linked_tagnum(&G__EmathDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TIndexCellIter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EmathDict_274_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TIndexCellIter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EmathDict_274_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TIndexCellIter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EmathDict_274_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TIndexCellIter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EmathDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EmathDict_274_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EmathDict_274_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TIndexCellIter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EmathDict_274_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TIndexCellIter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EmathDict_274_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TIndexCellIter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EmathDict_274_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TIndexCellIter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TIndexCellIter", 1376, G__EmathDict_274_0_20, (int) ('i'), G__get_linked_tagnum(&G__EmathDictLN_TIndexCellIter), -1, 0, 1, 1, 1, 0, "u 'TIndexCellIter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TIndexCellIter", 1502, G__EmathDict_274_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTIndexCellIterV(void) {
   /* TIndexCellIterV */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EmathDictLN_TIndexCellIterV));
   G__memfunc_setup("TIndexCellIterV",1462,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__EmathDictLN_TIndexCellIterV), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TIndexCellIterV",1462,G__EmathDict_275_0_2, 105, G__get_linked_tagnum(&G__EmathDictLN_TIndexCellIterV), -1, 0, 5, 1, 1, 0, 
"U 'TIndexCell' - 10 - cell i - - 0 - level "
"L - - 0 - vcent L - - 0 - vdiff "
"g - 'Bool_t' 0 'kIterForward' dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCell",672,G__EmathDict_275_0_3, 85, G__get_linked_tagnum(&G__EmathDictLN_TIndexCell), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Next",415,G__EmathDict_275_0_4, 85, G__get_linked_tagnum(&G__EmathDictLN_TIndexCell), -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NextAll",696,G__EmathDict_275_0_5, 85, G__get_linked_tagnum(&G__EmathDictLN_TIndexCell), -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__EmathDict_275_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LevelDown",912,G__EmathDict_275_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Test",416,G__EmathDict_275_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EmathDict_275_0_9, 85, G__get_linked_tagnum(&G__EmathDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TIndexCellIterV::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EmathDict_275_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TIndexCellIterV::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EmathDict_275_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TIndexCellIterV::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EmathDict_275_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TIndexCellIterV::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EmathDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EmathDict_275_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EmathDict_275_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TIndexCellIterV::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EmathDict_275_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TIndexCellIterV::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EmathDict_275_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TIndexCellIterV::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EmathDict_275_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TIndexCellIterV::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TIndexCellIterV", 1462, G__EmathDict_275_0_21, (int) ('i'), G__get_linked_tagnum(&G__EmathDictLN_TIndexCellIterV), -1, 0, 1, 1, 1, 0, "u 'TIndexCellIterV' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TIndexCellIterV", 1588, G__EmathDict_275_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbMath(void) {
   /* EdbMath */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EmathDictLN_EdbMath));
   G__memfunc_setup("EdbMath",661,G__EmathDict_279_0_1, 105, G__get_linked_tagnum(&G__EmathDictLN_EdbMath), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Magnitude3",977,G__EmathDict_279_0_2, 100, -1, -1, 0, 2, 3, 1, 0, 
"F - - 0 - Point1 F - - 0 - Point2", (char*)NULL, (void*) G__func2void( (double (*)(float*, float*))(&EdbMath::Magnitude3) ), 0);
   G__memfunc_setup("DistancePointLine3",1776,G__EmathDict_279_0_3, 100, -1, -1, 0, 4, 3, 1, 0, 
"F - - 0 - Point F - - 0 - LineStart "
"F - - 0 - LineEnd g - - 0 - inside", (char*)NULL, (void*) G__func2void( (double (*)(float*, float*, float*, bool))(&EdbMath::DistancePointLine3) ), 0);
   G__memfunc_setup("Angle3",538,G__EmathDict_279_0_4, 100, -1, -1, 0, 4, 3, 1, 0, 
"f - - 0 - tx1 f - - 0 - ty1 "
"f - - 0 - tx2 f - - 0 - ty2", (char*)NULL, (void*) G__func2void( (double (*)(float, float, float, float))(&EdbMath::Angle3) ), 0);
   G__memfunc_setup("LineLineIntersect",1729,G__EmathDict_279_0_5, 103, -1, -1, 0, 8, 3, 1, 0, 
"F - - 0 - p1 F - - 0 - p2 "
"F - - 0 - p3 F - - 0 - p4 "
"F - - 0 - pa F - - 0 - pb "
"d - - 1 - mua d - - 1 - mub", (char*)NULL, (void*) G__func2void( (bool (*)(float*, float*, float*, float*, float*, float*, double&, double&))(&EdbMath::LineLineIntersect) ), 0);
   G__memfunc_setup("LinFitDiag",955,G__EmathDict_279_0_6, 103, -1, -1, 0, 7, 3, 1, 0, 
"i - - 0 - n F - - 0 - x "
"F - - 0 - y F - - 0 - e "
"F - - 0 - p F - - 2 - d "
"F - - 0 - chi2", (char*)NULL, (void*) G__func2void( (bool (*)(int, float*, float*, float*, float*, float**, float*))(&EdbMath::LinFitDiag) ), 0);
   G__memfunc_setup("LinFitCOV",814,G__EmathDict_279_0_7, 103, -1, -1, 0, 7, 3, 1, 0, 
"i - - 0 - n F - - 0 - x "
"F - - 0 - y D - - 0 - c "
"F - - 0 - p F - - 0 - d "
"F - - 0 - chi2", (char*)NULL, (void*) G__func2void( (bool (*)(int, float*, float*, double*, float*, float*, float*))(&EdbMath::LinFitCOV) ), 0);
   G__memfunc_setup("LFITW",390,G__EmathDict_279_0_8, 121, -1, -1, 0, 8, 3, 1, 0, 
"F - - 0 - X F - - 0 - Y "
"F - - 0 - W i - - 0 - L "
"i - - 0 - KEY f - - 1 - A "
"f - - 1 - B f - - 1 - E", (char*)NULL, (void*) G__func2void( (void (*)(float*, float*, float*, int, int, float&, float&, float&))(&EdbMath::LFITW) ), 0);
   G__memfunc_setup("LFIT3",354,G__EmathDict_279_0_9, 105, -1, -1, 0, 12, 3, 1, 0, 
"F - - 0 - X F - - 0 - Y "
"F - - 0 - Z F - - 0 - W "
"i - - 0 - L f - - 1 - X0 "
"f - - 1 - Y0 f - - 1 - Z0 "
"f - - 1 - TX f - - 1 - TY "
"f - - 1 - EX f - - 1 - EY", (char*)NULL, (void*) G__func2void( (int (*)(float*, float*, float*, float*, int, float&, float&, float&, float&, float&, float&, float&))(&EdbMath::LFIT3) ), 0);
   G__memfunc_setup("ArrStat",705,G__EmathDict_279_0_10, 105, -1, -1, 0, 3, 3, 1, 0, 
"i - - 0 - n F - - 0 - x "
"F - - 0 - par", (char*)NULL, (void*) G__func2void( (int (*)(int, float*, float*))(&EdbMath::ArrStat) ), 0);
   G__memfunc_setup("Class",502,G__EmathDict_279_0_11, 85, G__get_linked_tagnum(&G__EmathDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbMath::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EmathDict_279_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbMath::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EmathDict_279_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbMath::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EmathDict_279_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbMath::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__EmathDict_279_0_15, 85, G__get_linked_tagnum(&G__EmathDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__EmathDict_279_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__EmathDict_279_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EmathDict_279_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EmathDict_279_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbMath::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EmathDict_279_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbMath::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EmathDict_279_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbMath::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EmathDict_279_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbMath::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EdbMath", 661, G__EmathDict_279_0_23, (int) ('i'), G__get_linked_tagnum(&G__EmathDictLN_EdbMath), -1, 0, 1, 1, 1, 0, "u 'EdbMath' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EdbMath", 787, G__EmathDict_279_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EmathDict_279_0_25, (int) ('u'), G__get_linked_tagnum(&G__EmathDictLN_EdbMath), -1, 1, 1, 1, 1, 0, "u 'EdbMath' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTIndex2(void) {
   /* TIndex2 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EmathDictLN_TIndex2));
   G__memfunc_setup("TIndex2",638,G__EmathDict_280_0_1, 105, G__get_linked_tagnum(&G__EmathDictLN_TIndex2), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TIndex2",638,G__EmathDict_280_0_2, 105, G__get_linked_tagnum(&G__EmathDictLN_TIndex2), -1, 0, 1, 1, 1, 0, "i - - 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildValue",1005,G__EmathDict_280_0_3, 100, -1, G__defined_typename("Double_t"), 0, 2, 3, 1, 0, 
"i - 'Int_t' 0 - major i - 'Int_t' 0 - minor", (char*)NULL, (void*) G__func2void( (Double_t (*)(Int_t, Int_t))(&TIndex2::BuildValue) ), 0);
   G__memfunc_setup("SetMinor",817,G__EmathDict_280_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i i - 'Int_t' 0 - minor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Major",505,G__EmathDict_280_0_5, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Minor",517,G__EmathDict_280_0_6, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildIndex",1000,G__EmathDict_280_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - n D - - 0 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Find",385,G__EmathDict_280_0_8, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - major i - 'Int_t' 0 - minor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindIndex",889,G__EmathDict_280_0_9, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - major", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindIndexArr",1182,G__EmathDict_280_0_10, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - major u 'TArrayI' - 1 - mina", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__EmathDict_280_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EmathDict_280_0_12, 85, G__get_linked_tagnum(&G__EmathDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TIndex2::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EmathDict_280_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TIndex2::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EmathDict_280_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TIndex2::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EmathDict_280_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TIndex2::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EmathDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EmathDict_280_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EmathDict_280_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TIndex2::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EmathDict_280_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TIndex2::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EmathDict_280_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TIndex2::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EmathDict_280_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TIndex2::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TIndex2", 638, G__EmathDict_280_0_24, (int) ('i'), G__get_linked_tagnum(&G__EmathDictLN_TIndex2), -1, 0, 1, 1, 1, 0, "u 'TIndex2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TIndex2", 764, G__EmathDict_280_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EmathDict_280_0_26, (int) ('u'), G__get_linked_tagnum(&G__EmathDictLN_TIndex2), -1, 1, 1, 1, 1, 0, "u 'TIndex2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbH1(void) {
   /* EdbH1 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EmathDictLN_EdbH1));
   G__memfunc_setup("EdbH1",388,G__EmathDict_319_0_1, 105, G__get_linked_tagnum(&G__EmathDictLN_EdbH1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbH1",388,G__EmathDict_319_0_2, 105, G__get_linked_tagnum(&G__EmathDictLN_EdbH1), -1, 0, 3, 1, 1, 0, 
"i - - 0 - n f - - 0 - min "
"f - - 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbH1",388,G__EmathDict_319_0_3, 105, G__get_linked_tagnum(&G__EmathDictLN_EdbH1), -1, 0, 1, 1, 1, 0, "u 'EdbH1' - 11 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set0",348,G__EmathDict_319_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,G__EmathDict_319_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'EdbH1' - 11 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitH1",525,G__EmathDict_319_0_6, 105, -1, -1, 0, 1, 1, 1, 0, "u 'EdbH1' - 11 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitH1",525,G__EmathDict_319_0_7, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - n f - - 0 - min "
"f - - 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CleanCells",982,G__EmathDict_319_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintStat",937,G__EmathDict_319_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__EmathDict_319_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Delete",595,G__EmathDict_319_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DiscardHighCells",1581,G__EmathDict_319_0_12, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - nmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ncell",494,G__EmathDict_319_0_13, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("N",78,G__EmathDict_319_0_14, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IX",161,G__EmathDict_319_0_15, 105, -1, -1, 0, 1, 1, 1, 8, "f - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Jcell",490,G__EmathDict_319_0_16, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - ix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Jcell",490,G__EmathDict_319_0_17, 105, -1, -1, 0, 1, 1, 1, 8, "f - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("X",88,G__EmathDict_319_0_18, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Xmin",412,G__EmathDict_319_0_19, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Xmax",414,G__EmathDict_319_0_20, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Xbin",401,G__EmathDict_319_0_21, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Bin",281,G__EmathDict_319_0_22, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - ix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MaxBin",575,G__EmathDict_319_0_23, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("XminA",477,G__EmathDict_319_0_24, 102, -1, -1, 0, 1, 1, 1, 0, "f - - 0 '0' level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("XmaxA",479,G__EmathDict_319_0_25, 102, -1, -1, 0, 1, 1, 1, 0, "f - - 0 '0' level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddBin",546,G__EmathDict_319_0_26, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - jcell i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__EmathDict_319_0_27, 105, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__EmathDict_319_0_28, 105, -1, -1, 0, 2, 1, 1, 0, 
"f - - 0 - x i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBin",581,G__EmathDict_319_0_29, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - ix i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Integral",822,G__EmathDict_319_0_30, 108, -1, G__defined_typename("Long_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Integral",822,G__EmathDict_319_0_31, 108, -1, G__defined_typename("Long_t"), 0, 2, 1, 1, 0, 
"i - - 0 - iv i - - 0 - ir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mean",385,G__EmathDict_319_0_32, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawSpectrum",1249,G__EmathDict_319_0_33, 85, G__get_linked_tagnum(&G__EmathDictLN_TH1I), -1, 0, 1, 1, 1, 0, "C - - 10 '\"EdbH1spectrun\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawH1",519,G__EmathDict_319_0_34, 85, G__get_linked_tagnum(&G__EmathDictLN_TH1F), -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"EdbH1plot\"' name C - - 10 '\"EdbH1plot1D\"' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EmathDict_319_0_35, 85, G__get_linked_tagnum(&G__EmathDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbH1::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EmathDict_319_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbH1::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EmathDict_319_0_37, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbH1::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EmathDict_319_0_38, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbH1::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EmathDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EmathDict_319_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EmathDict_319_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbH1::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EmathDict_319_0_44, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbH1::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EmathDict_319_0_45, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbH1::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EmathDict_319_0_46, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbH1::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~EdbH1", 514, G__EmathDict_319_0_47, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EmathDict_319_0_48, (int) ('u'), G__get_linked_tagnum(&G__EmathDictLN_EdbH1), -1, 1, 1, 1, 1, 0, "u 'EdbH1' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbCell1(void) {
   /* EdbCell1 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EmathDictLN_EdbCell1));
   G__memfunc_setup("EdbCell1",700,G__EmathDict_320_0_1, 105, G__get_linked_tagnum(&G__EmathDictLN_EdbCell1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitCell",788,G__EmathDict_320_0_2, 105, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - maxpercell i - - 0 - n "
"f - - 0 - min f - - 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Delete",595,G__EmathDict_320_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__EmathDict_320_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddObject",864,G__EmathDict_320_0_5, 103, -1, -1, 0, 2, 1, 1, 0, 
"f - - 0 - x U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddObject",864,G__EmathDict_320_0_6, 103, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - j U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectObjects",1322,G__EmathDict_320_0_7, 105, -1, -1, 0, 1, 1, 1, 0, "u 'TObjArray' - 1 - arr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectObjects",1322,G__EmathDict_320_0_8, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - min i - - 0 - max "
"u 'TObjArray' - 1 - arr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectObjects",1322,G__EmathDict_320_0_9, 105, -1, -1, 0, 3, 1, 1, 0, 
"f - - 0 - min f - - 0 - max "
"u 'TObjArray' - 1 - arr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectObjectsC",1389,G__EmathDict_320_0_10, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - iv i - - 0 - ir "
"u 'TObjArray' - 1 - arr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectObjectsC",1389,G__EmathDict_320_0_11, 105, -1, -1, 0, 3, 1, 1, 0, 
"f - - 0 - v i - - 0 - ir "
"u 'TObjArray' - 1 - arr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetObject",887,G__EmathDict_320_0_12, 85, G__get_linked_tagnum(&G__EmathDictLN_TObject), -1, 0, 2, 1, 1, 8, 
"i - - 0 - j i - - 0 - ientr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintStat",937,G__EmathDict_320_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EmathDict_320_0_14, 85, G__get_linked_tagnum(&G__EmathDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbCell1::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EmathDict_320_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbCell1::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EmathDict_320_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbCell1::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EmathDict_320_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbCell1::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EmathDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EmathDict_320_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EmathDict_320_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbCell1::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EmathDict_320_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbCell1::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EmathDict_320_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbCell1::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EmathDict_320_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbCell1::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EdbCell1", 700, G__EmathDict_320_0_26, (int) ('i'), G__get_linked_tagnum(&G__EmathDictLN_EdbCell1), -1, 0, 1, 1, 1, 0, "u 'EdbCell1' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EdbCell1", 826, G__EmathDict_320_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EmathDict_320_0_28, (int) ('u'), G__get_linked_tagnum(&G__EmathDictLN_EdbCell1), -1, 1, 1, 1, 1, 0, "u 'EdbCell1' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbH2(void) {
   /* EdbH2 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EmathDictLN_EdbH2));
   G__memfunc_setup("EdbH2",389,G__EmathDict_321_0_1, 105, G__get_linked_tagnum(&G__EmathDictLN_EdbH2), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbH2",389,G__EmathDict_321_0_2, 105, G__get_linked_tagnum(&G__EmathDictLN_EdbH2), -1, 0, 6, 1, 1, 0, 
"i - - 0 - nx f - - 0 - minx "
"f - - 0 - maxx i - - 0 - ny "
"f - - 0 - miny f - - 0 - maxy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbH2",389,G__EmathDict_321_0_3, 105, G__get_linked_tagnum(&G__EmathDictLN_EdbH2), -1, 0, 1, 1, 1, 0, "u 'EdbH2' - 11 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set0",348,G__EmathDict_321_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,G__EmathDict_321_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'EdbH2' - 11 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitH2",526,G__EmathDict_321_0_6, 105, -1, -1, 0, 1, 1, 1, 0, "u 'EdbH2' - 11 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitH2",526,G__EmathDict_321_0_7, 105, -1, -1, 0, 3, 1, 1, 0, 
"I - - 0 - n F - - 0 - min "
"F - - 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitH2",526,G__EmathDict_321_0_8, 105, -1, -1, 0, 6, 1, 1, 0, 
"i - - 0 - nx f - - 0 - minx "
"f - - 0 - maxx i - - 0 - ny "
"f - - 0 - miny f - - 0 - maxy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CleanCells",982,G__EmathDict_321_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintStat",937,G__EmathDict_321_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Delete",595,G__EmathDict_321_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DiscardHighCells",1581,G__EmathDict_321_0_12, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - nmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ncell",494,G__EmathDict_321_0_13, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NX",166,G__EmathDict_321_0_14, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NY",167,G__EmathDict_321_0_15, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IX",161,G__EmathDict_321_0_16, 105, -1, -1, 0, 1, 1, 1, 8, "f - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IY",162,G__EmathDict_321_0_17, 105, -1, -1, 0, 1, 1, 1, 8, "f - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IX",161,G__EmathDict_321_0_18, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - jcell", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IY",162,G__EmathDict_321_0_19, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - jcell", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Jcell",490,G__EmathDict_321_0_20, 105, -1, -1, 0, 2, 1, 1, 8, 
"i - - 0 - ix i - - 0 - iy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Jcell",490,G__EmathDict_321_0_21, 105, -1, -1, 0, 2, 1, 1, 8, 
"f - - 0 - x f - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Jcell",490,G__EmathDict_321_0_22, 105, -1, -1, 0, 1, 1, 1, 8, "F - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("X",88,G__EmathDict_321_0_23, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - ix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__EmathDict_321_0_24, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - iy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Xj",194,G__EmathDict_321_0_25, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Yj",195,G__EmathDict_321_0_26, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Xmin",412,G__EmathDict_321_0_27, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Xmax",414,G__EmathDict_321_0_28, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ymin",413,G__EmathDict_321_0_29, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ymax",415,G__EmathDict_321_0_30, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("XminA",477,G__EmathDict_321_0_31, 102, -1, -1, 0, 1, 1, 1, 0, "f - - 0 '0' level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("XmaxA",479,G__EmathDict_321_0_32, 102, -1, -1, 0, 1, 1, 1, 0, "f - - 0 '0' level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("YminA",478,G__EmathDict_321_0_33, 102, -1, -1, 0, 1, 1, 1, 0, "f - - 0 '0' level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("YmaxA",480,G__EmathDict_321_0_34, 102, -1, -1, 0, 1, 1, 1, 0, "f - - 0 '0' level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProjectionX",1141,G__EmathDict_321_0_35, 85, G__get_linked_tagnum(&G__EmathDictLN_EdbH1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProjectionY",1142,G__EmathDict_321_0_36, 85, G__get_linked_tagnum(&G__EmathDictLN_EdbH1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Xbin",401,G__EmathDict_321_0_37, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ybin",402,G__EmathDict_321_0_38, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Bin",281,G__EmathDict_321_0_39, 105, -1, -1, 0, 2, 1, 1, 8, 
"f - - 0 - x f - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Bin",281,G__EmathDict_321_0_40, 105, -1, -1, 0, 2, 1, 1, 8, 
"i - - 0 - ix i - - 0 - iy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Bin",281,G__EmathDict_321_0_41, 105, -1, -1, 0, 1, 1, 1, 8, "I - - 0 - iv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Bin",281,G__EmathDict_321_0_42, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MaxBin",575,G__EmathDict_321_0_43, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddBin",546,G__EmathDict_321_0_44, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - jcell i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__EmathDict_321_0_45, 105, -1, -1, 0, 2, 1, 1, 0, 
"f - - 0 - x f - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__EmathDict_321_0_46, 105, -1, -1, 0, 3, 1, 1, 0, 
"f - - 0 - x f - - 0 - y "
"i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBin",581,G__EmathDict_321_0_47, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - ix i - - 0 - iy "
"i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBin",581,G__EmathDict_321_0_48, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - j i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Integral",822,G__EmathDict_321_0_49, 108, -1, G__defined_typename("Long_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Integral",822,G__EmathDict_321_0_50, 108, -1, G__defined_typename("Long_t"), 0, 2, 1, 1, 0, 
"I - - 0 - iv I - - 0 - ir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mean",385,G__EmathDict_321_0_51, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawSpectrum",1249,G__EmathDict_321_0_52, 85, G__get_linked_tagnum(&G__EmathDictLN_TH1I), -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"plot1d\"' name C - - 10 '\"EdbH2 DrawSpectrun\"' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawH2",520,G__EmathDict_321_0_53, 85, G__get_linked_tagnum(&G__EmathDictLN_TH2F), -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"plot2d\"' name C - - 10 '\"EdbH2plot2D\"' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EmathDict_321_0_54, 85, G__get_linked_tagnum(&G__EmathDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbH2::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EmathDict_321_0_55, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbH2::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EmathDict_321_0_56, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbH2::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EmathDict_321_0_57, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbH2::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EmathDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EmathDict_321_0_61, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EmathDict_321_0_62, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbH2::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EmathDict_321_0_63, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbH2::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EmathDict_321_0_64, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbH2::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EmathDict_321_0_65, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbH2::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~EdbH2", 515, G__EmathDict_321_0_66, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EmathDict_321_0_67, (int) ('u'), G__get_linked_tagnum(&G__EmathDictLN_EdbH2), -1, 1, 1, 1, 1, 0, "u 'EdbH2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbPeak2(void) {
   /* EdbPeak2 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EmathDictLN_EdbPeak2));
   G__memfunc_setup("EdbPeak2",702,G__EmathDict_322_0_1, 105, G__get_linked_tagnum(&G__EmathDictLN_EdbPeak2), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbPeak2",702,G__EmathDict_322_0_2, 105, G__get_linked_tagnum(&G__EmathDictLN_EdbPeak2), -1, 0, 1, 1, 1, 0, "u 'EdbH2' - 11 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Delete",595,G__EmathDict_322_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__EmathDict_322_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'EdbH2' - 11 - h i - - 0 '10' npeaks", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__EmathDict_322_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitPeaks",904,G__EmathDict_322_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - npeaks", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindPeak",770,G__EmathDict_322_0_7, 105, -1, -1, 0, 1, 1, 1, 0, "I - - 0 - iv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindPeak",770,G__EmathDict_322_0_8, 105, -1, -1, 0, 1, 1, 1, 0, "F - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindPeak",770,G__EmathDict_322_0_9, 105, -1, -1, 0, 2, 1, 1, 0, 
"f - - 1 - x f - - 1 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindPeak9",827,G__EmathDict_322_0_10, 102, -1, -1, 0, 2, 1, 1, 0, 
"f - - 1 - x f - - 1 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindGlobalPeak",1363,G__EmathDict_322_0_11, 102, -1, -1, 0, 3, 1, 1, 0, 
"f - - 1 - x f - - 1 - y "
"f - - 0 '0.1' ratio", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProbPeak",788,G__EmathDict_322_0_12, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProbPeak",788,G__EmathDict_322_0_13, 102, -1, -1, 0, 2, 1, 1, 0, 
"f - - 1 - x f - - 1 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProbPeak",788,G__EmathDict_322_0_14, 102, -1, -1, 0, 2, 1, 1, 0, 
"I - - 0 - iv I - - 0 - ir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WipePeak",790,G__EmathDict_322_0_15, 105, -1, -1, 0, 2, 1, 1, 0, 
"I - - 0 - iv I - - 0 - ir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProbPeaks",903,G__EmathDict_322_0_16, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - npeak", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProbPeaks",903,G__EmathDict_322_0_17, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - npeak I - - 0 - ir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EstimatePeakVolume",1845,G__EmathDict_322_0_18, 102, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ipeak", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EstimatePeakVolumeSafe",2228,G__EmathDict_322_0_19, 102, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ipeak", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EstimatePeakMeanPosition",2451,G__EmathDict_322_0_20, 102, -1, -1, 0, 4, 1, 1, 0, 
"I - - 0 - iv I - - 0 - ir "
"f - - 1 - x f - - 1 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Smooth",634,G__EmathDict_322_0_21, 102, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"k5a\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Xmean",505,G__EmathDict_322_0_22, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ymean",506,G__EmathDict_322_0_23, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Peak",385,G__EmathDict_322_0_24, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mean3",436,G__EmathDict_322_0_25, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mean",385,G__EmathDict_322_0_26, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EmathDict_322_0_27, 85, G__get_linked_tagnum(&G__EmathDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbPeak2::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EmathDict_322_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbPeak2::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EmathDict_322_0_29, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbPeak2::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EmathDict_322_0_30, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbPeak2::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EmathDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EmathDict_322_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EmathDict_322_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbPeak2::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EmathDict_322_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbPeak2::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EmathDict_322_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbPeak2::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EmathDict_322_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbPeak2::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EdbPeak2", 702, G__EmathDict_322_0_39, (int) ('i'), G__get_linked_tagnum(&G__EmathDictLN_EdbPeak2), -1, 0, 1, 1, 1, 0, "u 'EdbPeak2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EdbPeak2", 828, G__EmathDict_322_0_40, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EmathDict_322_0_41, (int) ('u'), G__get_linked_tagnum(&G__EmathDictLN_EdbPeak2), -1, 1, 1, 1, 1, 0, "u 'EdbPeak2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbCell2(void) {
   /* EdbCell2 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EmathDictLN_EdbCell2));
   G__memfunc_setup("EdbCell2",701,G__EmathDict_323_0_1, 105, G__get_linked_tagnum(&G__EmathDictLN_EdbCell2), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbCell2",701,G__EmathDict_323_0_2, 105, G__get_linked_tagnum(&G__EmathDictLN_EdbCell2), -1, 0, 1, 1, 1, 0, "u 'EdbCell2' - 11 - cell", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set0",348,G__EmathDict_323_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,G__EmathDict_323_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'EdbCell2' - 11 - cell", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitEPC",620,G__EmathDict_323_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CellLim",674,G__EmathDict_323_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitCell",788,G__EmathDict_323_0_7, 105, -1, -1, 0, 1, 1, 1, 0, "u 'EdbCell2' - 1 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitCell",788,G__EmathDict_323_0_8, 105, -1, -1, 0, 7, 1, 1, 0, 
"i - - 0 - nx f - - 0 - minx "
"f - - 0 - maxx i - - 0 - ny "
"f - - 0 - miny f - - 0 - maxy "
"i - - 0 - maxpercell", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitCell",788,G__EmathDict_323_0_9, 105, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - maxpercell I - - 0 - n "
"F - - 0 - min F - - 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Delete",595,G__EmathDict_323_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__EmathDict_323_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddObject",864,G__EmathDict_323_0_12, 103, -1, -1, 0, 2, 1, 1, 0, 
"F - - 0 - v U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddObject",864,G__EmathDict_323_0_13, 103, -1, -1, 0, 3, 1, 1, 0, 
"f - - 0 - x f - - 0 - y "
"U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddObject",864,G__EmathDict_323_0_14, 103, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - ix i - - 0 - iy "
"U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddObject",864,G__EmathDict_323_0_15, 103, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - j U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectObjects",1322,G__EmathDict_323_0_16, 105, -1, -1, 0, 1, 1, 1, 0, "u 'TObjArray' - 1 - arr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectObjects",1322,G__EmathDict_323_0_17, 105, -1, -1, 0, 3, 1, 1, 0, 
"I - - 0 - min I - - 0 - max "
"u 'TObjArray' - 1 - arr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectObjects",1322,G__EmathDict_323_0_18, 105, -1, -1, 0, 3, 1, 1, 0, 
"F - - 0 - min F - - 0 - max "
"u 'TObjArray' - 1 - arr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectObjectsCJ",1463,G__EmathDict_323_0_19, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - j i - - 0 - ir "
"u 'TObjArray' - 1 - arr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectObjectsC",1389,G__EmathDict_323_0_20, 105, -1, -1, 0, 3, 1, 1, 0, 
"I - - 0 - iv I - - 0 - ir "
"u 'TObjArray' - 1 - arr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectObjectsC",1389,G__EmathDict_323_0_21, 105, -1, -1, 0, 3, 1, 1, 0, 
"F - - 0 - v I - - 0 - ir "
"u 'TObjArray' - 1 - arr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectObjectsC",1389,G__EmathDict_323_0_22, 105, -1, -1, 0, 3, 1, 1, 0, 
"F - - 0 - v f - - 0 - r "
"u 'TObjArray' - 1 - arr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetObject",887,G__EmathDict_323_0_23, 85, G__get_linked_tagnum(&G__EmathDictLN_TObject), -1, 0, 3, 1, 1, 8, 
"f - - 0 - x f - - 0 - y "
"i - - 0 - ientr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetObject",887,G__EmathDict_323_0_24, 85, G__get_linked_tagnum(&G__EmathDictLN_TObject), -1, 0, 3, 1, 1, 8, 
"i - - 0 - ix i - - 0 - iy "
"i - - 0 - ientr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetObject",887,G__EmathDict_323_0_25, 85, G__get_linked_tagnum(&G__EmathDictLN_TObject), -1, 0, 2, 1, 1, 8, 
"i - - 0 - j i - - 0 - ientr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintStat",937,G__EmathDict_323_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EmathDict_323_0_27, 85, G__get_linked_tagnum(&G__EmathDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbCell2::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EmathDict_323_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbCell2::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EmathDict_323_0_29, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbCell2::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EmathDict_323_0_30, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbCell2::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EmathDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EmathDict_323_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EmathDict_323_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbCell2::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EmathDict_323_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbCell2::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EmathDict_323_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbCell2::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EmathDict_323_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbCell2::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~EdbCell2", 827, G__EmathDict_323_0_39, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EmathDict_323_0_40, (int) ('u'), G__get_linked_tagnum(&G__EmathDictLN_EdbCell2), -1, 1, 1, 1, 1, 0, "u 'EdbCell2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbMask(void) {
   /* EdbMask */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EmathDictLN_EdbMask));
   G__memfunc_setup("EdbMask",663,G__EmathDict_324_0_1, 105, G__get_linked_tagnum(&G__EmathDictLN_EdbMask), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbMask",663,G__EmathDict_324_0_2, 105, G__get_linked_tagnum(&G__EmathDictLN_EdbMask), -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__EmathDict_324_0_3, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAt",481,G__EmathDict_324_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i i - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__EmathDict_324_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EmathDict_324_0_6, 85, G__get_linked_tagnum(&G__EmathDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbMask::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EmathDict_324_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbMask::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EmathDict_324_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbMask::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EmathDict_324_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbMask::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EmathDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EmathDict_324_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EmathDict_324_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbMask::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EmathDict_324_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbMask::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EmathDict_324_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbMask::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EmathDict_324_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbMask::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EdbMask", 663, G__EmathDict_324_0_18, (int) ('i'), G__get_linked_tagnum(&G__EmathDictLN_EdbMask), -1, 0, 1, 1, 1, 0, "u 'EdbMask' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EdbMask", 789, G__EmathDict_324_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EmathDict_324_0_20, (int) ('u'), G__get_linked_tagnum(&G__EmathDictLN_EdbMask), -1, 1, 1, 1, 1, 0, "u 'EdbMask' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbCombGen(void) {
   /* EdbCombGen */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EmathDictLN_EdbCombGen));
   G__memfunc_setup("EdbCombGen",934,G__EmathDict_325_0_1, 105, G__get_linked_tagnum(&G__EmathDictLN_EdbCombGen), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbCombGen",934,G__EmathDict_325_0_2, 105, G__get_linked_tagnum(&G__EmathDictLN_EdbCombGen), -1, 0, 2, 1, 1, 0, 
"u 'TObjArray' - 1 - elements i - - 0 '-1' nitems", ":    // Number of items to choose", (void*) NULL, 0);
   G__memfunc_setup("NextCombination",1554,G__EmathDict_325_0_3, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'TObjArray' - 1 - selected u 'TObjArray' - 1 - regected", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EmathDict_325_0_4, 85, G__get_linked_tagnum(&G__EmathDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbCombGen::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EmathDict_325_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbCombGen::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EmathDict_325_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbCombGen::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EmathDict_325_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbCombGen::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EmathDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EmathDict_325_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EmathDict_325_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbCombGen::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EmathDict_325_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbCombGen::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EmathDict_325_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbCombGen::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EmathDict_325_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbCombGen::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~EdbCombGen", 1060, G__EmathDict_325_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncEmathDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalEmathDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcEmathDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__EmathDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__EmathDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__EmathDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__EmathDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__EmathDictLN_iteratorlErandom_access_iterator_tagcOcharcOlongcOcharmUcOcharaNgR = { "iterator<random_access_iterator_tag,char,long,char*,char&>" , 115 , -1 };
G__linked_taginfo G__EmathDictLN_vectorlEboolcOallocatorlEboolgRsPgR = { "vector<bool,allocator<bool> >" , 99 , -1 };
G__linked_taginfo G__EmathDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__EmathDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__EmathDictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR = { "iterator<random_access_iterator_tag,ROOT::TSchemaHelper,long,ROOT::TSchemaHelper*,ROOT::TSchemaHelper&>" , 115 , -1 };
G__linked_taginfo G__EmathDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLconst_iteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::const_iterator>" , 99 , -1 };
G__linked_taginfo G__EmathDictLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__EmathDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__EmathDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__EmathDictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR = { "iterator<random_access_iterator_tag,TVirtualArray*,long,TVirtualArray**,TVirtualArray*&>" , 115 , -1 };
G__linked_taginfo G__EmathDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLconst_iteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::const_iterator>" , 99 , -1 };
G__linked_taginfo G__EmathDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__EmathDictLN_TIndexCell = { "TIndexCell" , 99 , -1 };
G__linked_taginfo G__EmathDictLN_TIndexCellIter = { "TIndexCellIter" , 99 , -1 };
G__linked_taginfo G__EmathDictLN_TIndexCellIterV = { "TIndexCellIterV" , 99 , -1 };
G__linked_taginfo G__EmathDictLN_TArray = { "TArray" , 99 , -1 };
G__linked_taginfo G__EmathDictLN_TArrayI = { "TArrayI" , 99 , -1 };
G__linked_taginfo G__EmathDictLN_TArrayD = { "TArrayD" , 99 , -1 };
G__linked_taginfo G__EmathDictLN_EdbMath = { "EdbMath" , 99 , -1 };
G__linked_taginfo G__EmathDictLN_TIndex2 = { "TIndex2" , 99 , -1 };
G__linked_taginfo G__EmathDictLN_TArrayC = { "TArrayC" , 99 , -1 };
G__linked_taginfo G__EmathDictLN_TArrayF = { "TArrayF" , 99 , -1 };
G__linked_taginfo G__EmathDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__EmathDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__EmathDictLN_TH1I = { "TH1I" , 99 , -1 };
G__linked_taginfo G__EmathDictLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__EmathDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__EmathDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__EmathDictLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__EmathDictLN_EdbH1 = { "EdbH1" , 99 , -1 };
G__linked_taginfo G__EmathDictLN_EdbCell1 = { "EdbCell1" , 99 , -1 };
G__linked_taginfo G__EmathDictLN_EdbH2 = { "EdbH2" , 99 , -1 };
G__linked_taginfo G__EmathDictLN_EdbPeak2 = { "EdbPeak2" , 99 , -1 };
G__linked_taginfo G__EmathDictLN_EdbCell2 = { "EdbCell2" , 99 , -1 };
G__linked_taginfo G__EmathDictLN_EdbMask = { "EdbMask" , 99 , -1 };
G__linked_taginfo G__EmathDictLN_EdbCombGen = { "EdbCombGen" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableEmathDict() {
  G__EmathDictLN_TClass.tagnum = -1 ;
  G__EmathDictLN_TBuffer.tagnum = -1 ;
  G__EmathDictLN_TMemberInspector.tagnum = -1 ;
  G__EmathDictLN_TObject.tagnum = -1 ;
  G__EmathDictLN_iteratorlErandom_access_iterator_tagcOcharcOlongcOcharmUcOcharaNgR.tagnum = -1 ;
  G__EmathDictLN_vectorlEboolcOallocatorlEboolgRsPgR.tagnum = -1 ;
  G__EmathDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__EmathDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__EmathDictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR.tagnum = -1 ;
  G__EmathDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLconst_iteratorgR.tagnum = -1 ;
  G__EmathDictLN_TObjArray.tagnum = -1 ;
  G__EmathDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__EmathDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__EmathDictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR.tagnum = -1 ;
  G__EmathDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLconst_iteratorgR.tagnum = -1 ;
  G__EmathDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__EmathDictLN_TIndexCell.tagnum = -1 ;
  G__EmathDictLN_TIndexCellIter.tagnum = -1 ;
  G__EmathDictLN_TIndexCellIterV.tagnum = -1 ;
  G__EmathDictLN_TArray.tagnum = -1 ;
  G__EmathDictLN_TArrayI.tagnum = -1 ;
  G__EmathDictLN_TArrayD.tagnum = -1 ;
  G__EmathDictLN_EdbMath.tagnum = -1 ;
  G__EmathDictLN_TIndex2.tagnum = -1 ;
  G__EmathDictLN_TArrayC.tagnum = -1 ;
  G__EmathDictLN_TArrayF.tagnum = -1 ;
  G__EmathDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__EmathDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__EmathDictLN_TH1I.tagnum = -1 ;
  G__EmathDictLN_TH1F.tagnum = -1 ;
  G__EmathDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__EmathDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__EmathDictLN_TH2F.tagnum = -1 ;
  G__EmathDictLN_EdbH1.tagnum = -1 ;
  G__EmathDictLN_EdbCell1.tagnum = -1 ;
  G__EmathDictLN_EdbH2.tagnum = -1 ;
  G__EmathDictLN_EdbPeak2.tagnum = -1 ;
  G__EmathDictLN_EdbCell2.tagnum = -1 ;
  G__EmathDictLN_EdbMask.tagnum = -1 ;
  G__EmathDictLN_EdbCombGen.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableEmathDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__EmathDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__EmathDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__EmathDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__EmathDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__EmathDictLN_iteratorlErandom_access_iterator_tagcOcharcOlongcOcharmUcOcharaNgR);
   G__get_linked_tagnum_fwd(&G__EmathDictLN_vectorlEboolcOallocatorlEboolgRsPgR);
   G__get_linked_tagnum_fwd(&G__EmathDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__EmathDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__EmathDictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR);
   G__get_linked_tagnum_fwd(&G__EmathDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLconst_iteratorgR);
   G__get_linked_tagnum_fwd(&G__EmathDictLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__EmathDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__EmathDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__EmathDictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR);
   G__get_linked_tagnum_fwd(&G__EmathDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLconst_iteratorgR);
   G__get_linked_tagnum_fwd(&G__EmathDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EmathDictLN_TIndexCell),sizeof(TIndexCell),-1,63232,"sort collection with attributes",G__setup_memvarTIndexCell,G__setup_memfuncTIndexCell);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EmathDictLN_TIndexCellIter),sizeof(TIndexCellIter),-1,62720,"IndexCell iterator",G__setup_memvarTIndexCellIter,G__setup_memfuncTIndexCellIter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EmathDictLN_TIndexCellIterV),sizeof(TIndexCellIterV),-1,62720,"IndexCell volume iterator",G__setup_memvarTIndexCellIterV,G__setup_memfuncTIndexCellIterV);
   G__get_linked_tagnum_fwd(&G__EmathDictLN_TArray);
   G__get_linked_tagnum_fwd(&G__EmathDictLN_TArrayI);
   G__get_linked_tagnum_fwd(&G__EmathDictLN_TArrayD);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EmathDictLN_EdbMath),sizeof(EdbMath),-1,1280,"general matematical algorithms",G__setup_memvarEdbMath,G__setup_memfuncEdbMath);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EmathDictLN_TIndex2),sizeof(TIndex2),-1,34048,"simple index class for fast search in linear cases",G__setup_memvarTIndex2,G__setup_memfuncTIndex2);
   G__get_linked_tagnum_fwd(&G__EmathDictLN_TArrayC);
   G__get_linked_tagnum_fwd(&G__EmathDictLN_TArrayF);
   G__get_linked_tagnum_fwd(&G__EmathDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__EmathDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__EmathDictLN_TH1I);
   G__get_linked_tagnum_fwd(&G__EmathDictLN_TH1F);
   G__get_linked_tagnum_fwd(&G__EmathDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__EmathDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__EmathDictLN_TH2F);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EmathDictLN_EdbH1),sizeof(EdbH1),-1,63232,"fast 2-dim histogram class (used as a basis for EdbCell1)",G__setup_memvarEdbH1,G__setup_memfuncEdbH1);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EmathDictLN_EdbCell1),sizeof(EdbCell1),-1,62720,"class to group 2-dim objects",G__setup_memvarEdbCell1,G__setup_memfuncEdbCell1);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EmathDictLN_EdbH2),sizeof(EdbH2),-1,63232,"fast 2-dim histogram class (used as a basis for EdbCell2)",G__setup_memvarEdbH2,G__setup_memfuncEdbH2);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EmathDictLN_EdbPeak2),sizeof(EdbPeak2),-1,62720,"peak analyser for EdbH2",G__setup_memvarEdbPeak2,G__setup_memfuncEdbPeak2);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EmathDictLN_EdbCell2),sizeof(EdbCell2),-1,128768,"class to group 2-dim objects",G__setup_memvarEdbCell2,G__setup_memfuncEdbCell2);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EmathDictLN_EdbMask),sizeof(EdbMask),-1,62720,"mask service class",G__setup_memvarEdbMask,G__setup_memfuncEdbMask);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EmathDictLN_EdbCombGen),sizeof(EdbCombGen),-1,62720,"objects combinations generator",G__setup_memvarEdbCombGen,G__setup_memfuncEdbCombGen);
}
extern "C" void G__cpp_setupEmathDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupEmathDict()");
  G__set_cpp_environmentEmathDict();
  G__cpp_setup_tagtableEmathDict();

  G__cpp_setup_inheritanceEmathDict();

  G__cpp_setup_typetableEmathDict();

  G__cpp_setup_memvarEmathDict();

  G__cpp_setup_memfuncEmathDict();
  G__cpp_setup_globalEmathDict();
  G__cpp_setup_funcEmathDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncEmathDict();
  return;
}
class G__cpp_setup_initEmathDict {
  public:
    G__cpp_setup_initEmathDict() { G__add_setup_func("EmathDict",(G__incsetup)(&G__cpp_setupEmathDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initEmathDict() { G__remove_setup_func("EmathDict"); }
};
G__cpp_setup_initEmathDict G__cpp_setup_initializerEmathDict;

