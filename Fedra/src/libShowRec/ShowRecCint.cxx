//
// File generated by rootcint at Thu Dec 19 18:19:53 2019

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME ShowRecCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "ShowRecCint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void EdbShowerP_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbShowerP(void *p = 0);
   static void *newArray_EdbShowerP(Long_t size, void *p);
   static void delete_EdbShowerP(void *p);
   static void deleteArray_EdbShowerP(void *p);
   static void destruct_EdbShowerP(void *p);
   static void streamer_EdbShowerP(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbShowerP*)
   {
      ::EdbShowerP *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbShowerP >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbShowerP", ::EdbShowerP::Class_Version(), "./EdbShowerP.h", 28,
                  typeid(::EdbShowerP), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbShowerP::Dictionary, isa_proxy, 0,
                  sizeof(::EdbShowerP) );
      instance.SetNew(&new_EdbShowerP);
      instance.SetNewArray(&newArray_EdbShowerP);
      instance.SetDelete(&delete_EdbShowerP);
      instance.SetDeleteArray(&deleteArray_EdbShowerP);
      instance.SetDestructor(&destruct_EdbShowerP);
      instance.SetStreamerFunc(&streamer_EdbShowerP);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbShowerP*)
   {
      return GenerateInitInstanceLocal((::EdbShowerP*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbShowerP*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbShowerPcLcLPara_FJ_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbShowerPcLcLPara_FJ(void *p = 0);
   static void *newArray_EdbShowerPcLcLPara_FJ(Long_t size, void *p);
   static void delete_EdbShowerPcLcLPara_FJ(void *p);
   static void deleteArray_EdbShowerPcLcLPara_FJ(void *p);
   static void destruct_EdbShowerPcLcLPara_FJ(void *p);
   static void streamer_EdbShowerPcLcLPara_FJ(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbShowerP::Para_FJ*)
   {
      ::EdbShowerP::Para_FJ *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbShowerP::Para_FJ >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbShowerP::Para_FJ", ::EdbShowerP::Para_FJ::Class_Version(), "./EdbShowerP.h", 143,
                  typeid(::EdbShowerP::Para_FJ), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbShowerP::Para_FJ::Dictionary, isa_proxy, 0,
                  sizeof(::EdbShowerP::Para_FJ) );
      instance.SetNew(&new_EdbShowerPcLcLPara_FJ);
      instance.SetNewArray(&newArray_EdbShowerPcLcLPara_FJ);
      instance.SetDelete(&delete_EdbShowerPcLcLPara_FJ);
      instance.SetDeleteArray(&deleteArray_EdbShowerPcLcLPara_FJ);
      instance.SetDestructor(&destruct_EdbShowerPcLcLPara_FJ);
      instance.SetStreamerFunc(&streamer_EdbShowerPcLcLPara_FJ);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbShowerP::Para_FJ*)
   {
      return GenerateInitInstanceLocal((::EdbShowerP::Para_FJ*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbShowerP::Para_FJ*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbShowerPcLcLPara_LT_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbShowerPcLcLPara_LT(void *p = 0);
   static void *newArray_EdbShowerPcLcLPara_LT(Long_t size, void *p);
   static void delete_EdbShowerPcLcLPara_LT(void *p);
   static void deleteArray_EdbShowerPcLcLPara_LT(void *p);
   static void destruct_EdbShowerPcLcLPara_LT(void *p);
   static void streamer_EdbShowerPcLcLPara_LT(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbShowerP::Para_LT*)
   {
      ::EdbShowerP::Para_LT *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbShowerP::Para_LT >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbShowerP::Para_LT", ::EdbShowerP::Para_LT::Class_Version(), "./EdbShowerP.h", 155,
                  typeid(::EdbShowerP::Para_LT), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbShowerP::Para_LT::Dictionary, isa_proxy, 0,
                  sizeof(::EdbShowerP::Para_LT) );
      instance.SetNew(&new_EdbShowerPcLcLPara_LT);
      instance.SetNewArray(&newArray_EdbShowerPcLcLPara_LT);
      instance.SetDelete(&delete_EdbShowerPcLcLPara_LT);
      instance.SetDeleteArray(&deleteArray_EdbShowerPcLcLPara_LT);
      instance.SetDestructor(&destruct_EdbShowerPcLcLPara_LT);
      instance.SetStreamerFunc(&streamer_EdbShowerPcLcLPara_LT);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbShowerP::Para_LT*)
   {
      return GenerateInitInstanceLocal((::EdbShowerP::Para_LT*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbShowerP::Para_LT*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbShowerPcLcLPara_YC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbShowerPcLcLPara_YC(void *p = 0);
   static void *newArray_EdbShowerPcLcLPara_YC(Long_t size, void *p);
   static void delete_EdbShowerPcLcLPara_YC(void *p);
   static void deleteArray_EdbShowerPcLcLPara_YC(void *p);
   static void destruct_EdbShowerPcLcLPara_YC(void *p);
   static void streamer_EdbShowerPcLcLPara_YC(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbShowerP::Para_YC*)
   {
      ::EdbShowerP::Para_YC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbShowerP::Para_YC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbShowerP::Para_YC", ::EdbShowerP::Para_YC::Class_Version(), "./EdbShowerP.h", 169,
                  typeid(::EdbShowerP::Para_YC), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbShowerP::Para_YC::Dictionary, isa_proxy, 0,
                  sizeof(::EdbShowerP::Para_YC) );
      instance.SetNew(&new_EdbShowerPcLcLPara_YC);
      instance.SetNewArray(&newArray_EdbShowerPcLcLPara_YC);
      instance.SetDelete(&delete_EdbShowerPcLcLPara_YC);
      instance.SetDeleteArray(&deleteArray_EdbShowerPcLcLPara_YC);
      instance.SetDestructor(&destruct_EdbShowerPcLcLPara_YC);
      instance.SetStreamerFunc(&streamer_EdbShowerPcLcLPara_YC);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbShowerP::Para_YC*)
   {
      return GenerateInitInstanceLocal((::EdbShowerP::Para_YC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbShowerP::Para_YC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbShowerPcLcLPara_JC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbShowerPcLcLPara_JC(void *p = 0);
   static void *newArray_EdbShowerPcLcLPara_JC(Long_t size, void *p);
   static void delete_EdbShowerPcLcLPara_JC(void *p);
   static void deleteArray_EdbShowerPcLcLPara_JC(void *p);
   static void destruct_EdbShowerPcLcLPara_JC(void *p);
   static void streamer_EdbShowerPcLcLPara_JC(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbShowerP::Para_JC*)
   {
      ::EdbShowerP::Para_JC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbShowerP::Para_JC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbShowerP::Para_JC", ::EdbShowerP::Para_JC::Class_Version(), "./EdbShowerP.h", 180,
                  typeid(::EdbShowerP::Para_JC), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbShowerP::Para_JC::Dictionary, isa_proxy, 0,
                  sizeof(::EdbShowerP::Para_JC) );
      instance.SetNew(&new_EdbShowerPcLcLPara_JC);
      instance.SetNewArray(&newArray_EdbShowerPcLcLPara_JC);
      instance.SetDelete(&delete_EdbShowerPcLcLPara_JC);
      instance.SetDeleteArray(&deleteArray_EdbShowerPcLcLPara_JC);
      instance.SetDestructor(&destruct_EdbShowerPcLcLPara_JC);
      instance.SetStreamerFunc(&streamer_EdbShowerPcLcLPara_JC);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbShowerP::Para_JC*)
   {
      return GenerateInitInstanceLocal((::EdbShowerP::Para_JC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbShowerP::Para_JC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbShowerPcLcLPara_XX_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbShowerPcLcLPara_XX(void *p = 0);
   static void *newArray_EdbShowerPcLcLPara_XX(Long_t size, void *p);
   static void delete_EdbShowerPcLcLPara_XX(void *p);
   static void deleteArray_EdbShowerPcLcLPara_XX(void *p);
   static void destruct_EdbShowerPcLcLPara_XX(void *p);
   static void streamer_EdbShowerPcLcLPara_XX(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbShowerP::Para_XX*)
   {
      ::EdbShowerP::Para_XX *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbShowerP::Para_XX >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbShowerP::Para_XX", ::EdbShowerP::Para_XX::Class_Version(), "./EdbShowerP.h", 200,
                  typeid(::EdbShowerP::Para_XX), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbShowerP::Para_XX::Dictionary, isa_proxy, 0,
                  sizeof(::EdbShowerP::Para_XX) );
      instance.SetNew(&new_EdbShowerPcLcLPara_XX);
      instance.SetNewArray(&newArray_EdbShowerPcLcLPara_XX);
      instance.SetDelete(&delete_EdbShowerPcLcLPara_XX);
      instance.SetDeleteArray(&deleteArray_EdbShowerPcLcLPara_XX);
      instance.SetDestructor(&destruct_EdbShowerPcLcLPara_XX);
      instance.SetStreamerFunc(&streamer_EdbShowerPcLcLPara_XX);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbShowerP::Para_XX*)
   {
      return GenerateInitInstanceLocal((::EdbShowerP::Para_XX*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbShowerP::Para_XX*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbShowerPcLcLPara_YY_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbShowerPcLcLPara_YY(void *p = 0);
   static void *newArray_EdbShowerPcLcLPara_YY(Long_t size, void *p);
   static void delete_EdbShowerPcLcLPara_YY(void *p);
   static void deleteArray_EdbShowerPcLcLPara_YY(void *p);
   static void destruct_EdbShowerPcLcLPara_YY(void *p);
   static void streamer_EdbShowerPcLcLPara_YY(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbShowerP::Para_YY*)
   {
      ::EdbShowerP::Para_YY *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbShowerP::Para_YY >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbShowerP::Para_YY", ::EdbShowerP::Para_YY::Class_Version(), "./EdbShowerP.h", 215,
                  typeid(::EdbShowerP::Para_YY), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbShowerP::Para_YY::Dictionary, isa_proxy, 0,
                  sizeof(::EdbShowerP::Para_YY) );
      instance.SetNew(&new_EdbShowerPcLcLPara_YY);
      instance.SetNewArray(&newArray_EdbShowerPcLcLPara_YY);
      instance.SetDelete(&delete_EdbShowerPcLcLPara_YY);
      instance.SetDeleteArray(&deleteArray_EdbShowerPcLcLPara_YY);
      instance.SetDestructor(&destruct_EdbShowerPcLcLPara_YY);
      instance.SetStreamerFunc(&streamer_EdbShowerPcLcLPara_YY);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbShowerP::Para_YY*)
   {
      return GenerateInitInstanceLocal((::EdbShowerP::Para_YY*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbShowerP::Para_YY*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbShowerPcLcLPara_PP_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbShowerPcLcLPara_PP(void *p = 0);
   static void *newArray_EdbShowerPcLcLPara_PP(Long_t size, void *p);
   static void delete_EdbShowerPcLcLPara_PP(void *p);
   static void deleteArray_EdbShowerPcLcLPara_PP(void *p);
   static void destruct_EdbShowerPcLcLPara_PP(void *p);
   static void streamer_EdbShowerPcLcLPara_PP(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbShowerP::Para_PP*)
   {
      ::EdbShowerP::Para_PP *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbShowerP::Para_PP >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbShowerP::Para_PP", ::EdbShowerP::Para_PP::Class_Version(), "./EdbShowerP.h", 224,
                  typeid(::EdbShowerP::Para_PP), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbShowerP::Para_PP::Dictionary, isa_proxy, 0,
                  sizeof(::EdbShowerP::Para_PP) );
      instance.SetNew(&new_EdbShowerPcLcLPara_PP);
      instance.SetNewArray(&newArray_EdbShowerPcLcLPara_PP);
      instance.SetDelete(&delete_EdbShowerPcLcLPara_PP);
      instance.SetDeleteArray(&deleteArray_EdbShowerPcLcLPara_PP);
      instance.SetDestructor(&destruct_EdbShowerPcLcLPara_PP);
      instance.SetStreamerFunc(&streamer_EdbShowerPcLcLPara_PP);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbShowerP::Para_PP*)
   {
      return GenerateInitInstanceLocal((::EdbShowerP::Para_PP*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbShowerP::Para_PP*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbShowerPcLcLPara_AS_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbShowerPcLcLPara_AS(void *p = 0);
   static void *newArray_EdbShowerPcLcLPara_AS(Long_t size, void *p);
   static void delete_EdbShowerPcLcLPara_AS(void *p);
   static void deleteArray_EdbShowerPcLcLPara_AS(void *p);
   static void destruct_EdbShowerPcLcLPara_AS(void *p);
   static void streamer_EdbShowerPcLcLPara_AS(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbShowerP::Para_AS*)
   {
      ::EdbShowerP::Para_AS *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbShowerP::Para_AS >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbShowerP::Para_AS", ::EdbShowerP::Para_AS::Class_Version(), "./EdbShowerP.h", 235,
                  typeid(::EdbShowerP::Para_AS), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbShowerP::Para_AS::Dictionary, isa_proxy, 0,
                  sizeof(::EdbShowerP::Para_AS) );
      instance.SetNew(&new_EdbShowerPcLcLPara_AS);
      instance.SetNewArray(&newArray_EdbShowerPcLcLPara_AS);
      instance.SetDelete(&delete_EdbShowerPcLcLPara_AS);
      instance.SetDeleteArray(&deleteArray_EdbShowerPcLcLPara_AS);
      instance.SetDestructor(&destruct_EdbShowerPcLcLPara_AS);
      instance.SetStreamerFunc(&streamer_EdbShowerPcLcLPara_AS);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbShowerP::Para_AS*)
   {
      return GenerateInitInstanceLocal((::EdbShowerP::Para_AS*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbShowerP::Para_AS*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbShowerPcLcLPara_SE_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbShowerPcLcLPara_SE(void *p = 0);
   static void *newArray_EdbShowerPcLcLPara_SE(Long_t size, void *p);
   static void delete_EdbShowerPcLcLPara_SE(void *p);
   static void deleteArray_EdbShowerPcLcLPara_SE(void *p);
   static void destruct_EdbShowerPcLcLPara_SE(void *p);
   static void streamer_EdbShowerPcLcLPara_SE(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbShowerP::Para_SE*)
   {
      ::EdbShowerP::Para_SE *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbShowerP::Para_SE >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbShowerP::Para_SE", ::EdbShowerP::Para_SE::Class_Version(), "./EdbShowerP.h", 248,
                  typeid(::EdbShowerP::Para_SE), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbShowerP::Para_SE::Dictionary, isa_proxy, 0,
                  sizeof(::EdbShowerP::Para_SE) );
      instance.SetNew(&new_EdbShowerPcLcLPara_SE);
      instance.SetNewArray(&newArray_EdbShowerPcLcLPara_SE);
      instance.SetDelete(&delete_EdbShowerPcLcLPara_SE);
      instance.SetDeleteArray(&deleteArray_EdbShowerPcLcLPara_SE);
      instance.SetDestructor(&destruct_EdbShowerPcLcLPara_SE);
      instance.SetStreamerFunc(&streamer_EdbShowerPcLcLPara_SE);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbShowerP::Para_SE*)
   {
      return GenerateInitInstanceLocal((::EdbShowerP::Para_SE*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbShowerP::Para_SE*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbShowerPcLcLPara_ExtraInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbShowerPcLcLPara_ExtraInfo(void *p = 0);
   static void *newArray_EdbShowerPcLcLPara_ExtraInfo(Long_t size, void *p);
   static void delete_EdbShowerPcLcLPara_ExtraInfo(void *p);
   static void deleteArray_EdbShowerPcLcLPara_ExtraInfo(void *p);
   static void destruct_EdbShowerPcLcLPara_ExtraInfo(void *p);
   static void streamer_EdbShowerPcLcLPara_ExtraInfo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbShowerP::Para_ExtraInfo*)
   {
      ::EdbShowerP::Para_ExtraInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbShowerP::Para_ExtraInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbShowerP::Para_ExtraInfo", ::EdbShowerP::Para_ExtraInfo::Class_Version(), "./EdbShowerP.h", 257,
                  typeid(::EdbShowerP::Para_ExtraInfo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbShowerP::Para_ExtraInfo::Dictionary, isa_proxy, 0,
                  sizeof(::EdbShowerP::Para_ExtraInfo) );
      instance.SetNew(&new_EdbShowerPcLcLPara_ExtraInfo);
      instance.SetNewArray(&newArray_EdbShowerPcLcLPara_ExtraInfo);
      instance.SetDelete(&delete_EdbShowerPcLcLPara_ExtraInfo);
      instance.SetDeleteArray(&deleteArray_EdbShowerPcLcLPara_ExtraInfo);
      instance.SetDestructor(&destruct_EdbShowerPcLcLPara_ExtraInfo);
      instance.SetStreamerFunc(&streamer_EdbShowerPcLcLPara_ExtraInfo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbShowerP::Para_ExtraInfo*)
   {
      return GenerateInitInstanceLocal((::EdbShowerP::Para_ExtraInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbShowerP::Para_ExtraInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbShowerPcLcLMCInfo_PGun_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbShowerPcLcLMCInfo_PGun(void *p = 0);
   static void *newArray_EdbShowerPcLcLMCInfo_PGun(Long_t size, void *p);
   static void delete_EdbShowerPcLcLMCInfo_PGun(void *p);
   static void deleteArray_EdbShowerPcLcLMCInfo_PGun(void *p);
   static void destruct_EdbShowerPcLcLMCInfo_PGun(void *p);
   static void streamer_EdbShowerPcLcLMCInfo_PGun(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbShowerP::MCInfo_PGun*)
   {
      ::EdbShowerP::MCInfo_PGun *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbShowerP::MCInfo_PGun >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbShowerP::MCInfo_PGun", ::EdbShowerP::MCInfo_PGun::Class_Version(), "./EdbShowerP.h", 269,
                  typeid(::EdbShowerP::MCInfo_PGun), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbShowerP::MCInfo_PGun::Dictionary, isa_proxy, 0,
                  sizeof(::EdbShowerP::MCInfo_PGun) );
      instance.SetNew(&new_EdbShowerPcLcLMCInfo_PGun);
      instance.SetNewArray(&newArray_EdbShowerPcLcLMCInfo_PGun);
      instance.SetDelete(&delete_EdbShowerPcLcLMCInfo_PGun);
      instance.SetDeleteArray(&deleteArray_EdbShowerPcLcLMCInfo_PGun);
      instance.SetDestructor(&destruct_EdbShowerPcLcLMCInfo_PGun);
      instance.SetStreamerFunc(&streamer_EdbShowerPcLcLMCInfo_PGun);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbShowerP::MCInfo_PGun*)
   {
      return GenerateInitInstanceLocal((::EdbShowerP::MCInfo_PGun*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbShowerP::MCInfo_PGun*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbShowerPcLcLMCInfo_Event_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbShowerPcLcLMCInfo_Event(void *p = 0);
   static void *newArray_EdbShowerPcLcLMCInfo_Event(Long_t size, void *p);
   static void delete_EdbShowerPcLcLMCInfo_Event(void *p);
   static void deleteArray_EdbShowerPcLcLMCInfo_Event(void *p);
   static void destruct_EdbShowerPcLcLMCInfo_Event(void *p);
   static void streamer_EdbShowerPcLcLMCInfo_Event(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbShowerP::MCInfo_Event*)
   {
      ::EdbShowerP::MCInfo_Event *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbShowerP::MCInfo_Event >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbShowerP::MCInfo_Event", ::EdbShowerP::MCInfo_Event::Class_Version(), "./EdbShowerP.h", 295,
                  typeid(::EdbShowerP::MCInfo_Event), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbShowerP::MCInfo_Event::Dictionary, isa_proxy, 0,
                  sizeof(::EdbShowerP::MCInfo_Event) );
      instance.SetNew(&new_EdbShowerPcLcLMCInfo_Event);
      instance.SetNewArray(&newArray_EdbShowerPcLcLMCInfo_Event);
      instance.SetDelete(&delete_EdbShowerPcLcLMCInfo_Event);
      instance.SetDeleteArray(&deleteArray_EdbShowerPcLcLMCInfo_Event);
      instance.SetDestructor(&destruct_EdbShowerPcLcLMCInfo_Event);
      instance.SetStreamerFunc(&streamer_EdbShowerPcLcLMCInfo_Event);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbShowerP::MCInfo_Event*)
   {
      return GenerateInitInstanceLocal((::EdbShowerP::MCInfo_Event*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbShowerP::MCInfo_Event*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbShowerPcLcLReco_ID_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbShowerPcLcLReco_ID(void *p = 0);
   static void *newArray_EdbShowerPcLcLReco_ID(Long_t size, void *p);
   static void delete_EdbShowerPcLcLReco_ID(void *p);
   static void deleteArray_EdbShowerPcLcLReco_ID(void *p);
   static void destruct_EdbShowerPcLcLReco_ID(void *p);
   static void streamer_EdbShowerPcLcLReco_ID(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbShowerP::Reco_ID*)
   {
      ::EdbShowerP::Reco_ID *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbShowerP::Reco_ID >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbShowerP::Reco_ID", ::EdbShowerP::Reco_ID::Class_Version(), "./EdbShowerP.h", 309,
                  typeid(::EdbShowerP::Reco_ID), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbShowerP::Reco_ID::Dictionary, isa_proxy, 0,
                  sizeof(::EdbShowerP::Reco_ID) );
      instance.SetNew(&new_EdbShowerPcLcLReco_ID);
      instance.SetNewArray(&newArray_EdbShowerPcLcLReco_ID);
      instance.SetDelete(&delete_EdbShowerPcLcLReco_ID);
      instance.SetDeleteArray(&deleteArray_EdbShowerPcLcLReco_ID);
      instance.SetDestructor(&destruct_EdbShowerPcLcLReco_ID);
      instance.SetStreamerFunc(&streamer_EdbShowerPcLcLReco_ID);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbShowerP::Reco_ID*)
   {
      return GenerateInitInstanceLocal((::EdbShowerP::Reco_ID*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbShowerP::Reco_ID*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbShowerPcLcLReco_E_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbShowerPcLcLReco_E(void *p = 0);
   static void *newArray_EdbShowerPcLcLReco_E(Long_t size, void *p);
   static void delete_EdbShowerPcLcLReco_E(void *p);
   static void deleteArray_EdbShowerPcLcLReco_E(void *p);
   static void destruct_EdbShowerPcLcLReco_E(void *p);
   static void streamer_EdbShowerPcLcLReco_E(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbShowerP::Reco_E*)
   {
      ::EdbShowerP::Reco_E *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbShowerP::Reco_E >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbShowerP::Reco_E", ::EdbShowerP::Reco_E::Class_Version(), "./EdbShowerP.h", 327,
                  typeid(::EdbShowerP::Reco_E), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbShowerP::Reco_E::Dictionary, isa_proxy, 0,
                  sizeof(::EdbShowerP::Reco_E) );
      instance.SetNew(&new_EdbShowerPcLcLReco_E);
      instance.SetNewArray(&newArray_EdbShowerPcLcLReco_E);
      instance.SetDelete(&delete_EdbShowerPcLcLReco_E);
      instance.SetDeleteArray(&deleteArray_EdbShowerPcLcLReco_E);
      instance.SetDestructor(&destruct_EdbShowerPcLcLReco_E);
      instance.SetStreamerFunc(&streamer_EdbShowerPcLcLReco_E);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbShowerP::Reco_E*)
   {
      return GenerateInitInstanceLocal((::EdbShowerP::Reco_E*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbShowerP::Reco_E*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbShowerPcLcLReco_Vtx_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbShowerPcLcLReco_Vtx(void *p = 0);
   static void *newArray_EdbShowerPcLcLReco_Vtx(Long_t size, void *p);
   static void delete_EdbShowerPcLcLReco_Vtx(void *p);
   static void deleteArray_EdbShowerPcLcLReco_Vtx(void *p);
   static void destruct_EdbShowerPcLcLReco_Vtx(void *p);
   static void streamer_EdbShowerPcLcLReco_Vtx(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbShowerP::Reco_Vtx*)
   {
      ::EdbShowerP::Reco_Vtx *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbShowerP::Reco_Vtx >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbShowerP::Reco_Vtx", ::EdbShowerP::Reco_Vtx::Class_Version(), "./EdbShowerP.h", 340,
                  typeid(::EdbShowerP::Reco_Vtx), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbShowerP::Reco_Vtx::Dictionary, isa_proxy, 0,
                  sizeof(::EdbShowerP::Reco_Vtx) );
      instance.SetNew(&new_EdbShowerPcLcLReco_Vtx);
      instance.SetNewArray(&newArray_EdbShowerPcLcLReco_Vtx);
      instance.SetDelete(&delete_EdbShowerPcLcLReco_Vtx);
      instance.SetDeleteArray(&deleteArray_EdbShowerPcLcLReco_Vtx);
      instance.SetDestructor(&destruct_EdbShowerPcLcLReco_Vtx);
      instance.SetStreamerFunc(&streamer_EdbShowerPcLcLReco_Vtx);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbShowerP::Reco_Vtx*)
   {
      return GenerateInitInstanceLocal((::EdbShowerP::Reco_Vtx*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbShowerP::Reco_Vtx*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbShowAlg_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbShowAlg(void *p = 0);
   static void *newArray_EdbShowAlg(Long_t size, void *p);
   static void delete_EdbShowAlg(void *p);
   static void deleteArray_EdbShowAlg(void *p);
   static void destruct_EdbShowAlg(void *p);
   static void streamer_EdbShowAlg(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbShowAlg*)
   {
      ::EdbShowAlg *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbShowAlg >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbShowAlg", ::EdbShowAlg::Class_Version(), "./EdbShowAlg.h", 40,
                  typeid(::EdbShowAlg), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbShowAlg::Dictionary, isa_proxy, 0,
                  sizeof(::EdbShowAlg) );
      instance.SetNew(&new_EdbShowAlg);
      instance.SetNewArray(&newArray_EdbShowAlg);
      instance.SetDelete(&delete_EdbShowAlg);
      instance.SetDeleteArray(&deleteArray_EdbShowAlg);
      instance.SetDestructor(&destruct_EdbShowAlg);
      instance.SetStreamerFunc(&streamer_EdbShowAlg);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbShowAlg*)
   {
      return GenerateInitInstanceLocal((::EdbShowAlg*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbShowAlg*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbShowAlg_SA_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbShowAlg_SA(void *p = 0);
   static void *newArray_EdbShowAlg_SA(Long_t size, void *p);
   static void delete_EdbShowAlg_SA(void *p);
   static void deleteArray_EdbShowAlg_SA(void *p);
   static void destruct_EdbShowAlg_SA(void *p);
   static void streamer_EdbShowAlg_SA(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbShowAlg_SA*)
   {
      ::EdbShowAlg_SA *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbShowAlg_SA >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbShowAlg_SA", ::EdbShowAlg_SA::Class_Version(), "./EdbShowAlg.h", 196,
                  typeid(::EdbShowAlg_SA), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbShowAlg_SA::Dictionary, isa_proxy, 0,
                  sizeof(::EdbShowAlg_SA) );
      instance.SetNew(&new_EdbShowAlg_SA);
      instance.SetNewArray(&newArray_EdbShowAlg_SA);
      instance.SetDelete(&delete_EdbShowAlg_SA);
      instance.SetDeleteArray(&deleteArray_EdbShowAlg_SA);
      instance.SetDestructor(&destruct_EdbShowAlg_SA);
      instance.SetStreamerFunc(&streamer_EdbShowAlg_SA);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbShowAlg_SA*)
   {
      return GenerateInitInstanceLocal((::EdbShowAlg_SA*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbShowAlg_SA*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbShowAlg_CA_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbShowAlg_CA(void *p = 0);
   static void *newArray_EdbShowAlg_CA(Long_t size, void *p);
   static void delete_EdbShowAlg_CA(void *p);
   static void deleteArray_EdbShowAlg_CA(void *p);
   static void destruct_EdbShowAlg_CA(void *p);
   static void streamer_EdbShowAlg_CA(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbShowAlg_CA*)
   {
      ::EdbShowAlg_CA *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbShowAlg_CA >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbShowAlg_CA", ::EdbShowAlg_CA::Class_Version(), "./EdbShowAlg.h", 222,
                  typeid(::EdbShowAlg_CA), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbShowAlg_CA::Dictionary, isa_proxy, 0,
                  sizeof(::EdbShowAlg_CA) );
      instance.SetNew(&new_EdbShowAlg_CA);
      instance.SetNewArray(&newArray_EdbShowAlg_CA);
      instance.SetDelete(&delete_EdbShowAlg_CA);
      instance.SetDeleteArray(&deleteArray_EdbShowAlg_CA);
      instance.SetDestructor(&destruct_EdbShowAlg_CA);
      instance.SetStreamerFunc(&streamer_EdbShowAlg_CA);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbShowAlg_CA*)
   {
      return GenerateInitInstanceLocal((::EdbShowAlg_CA*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbShowAlg_CA*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbShowAlg_OI_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbShowAlg_OI(void *p = 0);
   static void *newArray_EdbShowAlg_OI(Long_t size, void *p);
   static void delete_EdbShowAlg_OI(void *p);
   static void deleteArray_EdbShowAlg_OI(void *p);
   static void destruct_EdbShowAlg_OI(void *p);
   static void streamer_EdbShowAlg_OI(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbShowAlg_OI*)
   {
      ::EdbShowAlg_OI *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbShowAlg_OI >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbShowAlg_OI", ::EdbShowAlg_OI::Class_Version(), "./EdbShowAlg.h", 252,
                  typeid(::EdbShowAlg_OI), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbShowAlg_OI::Dictionary, isa_proxy, 0,
                  sizeof(::EdbShowAlg_OI) );
      instance.SetNew(&new_EdbShowAlg_OI);
      instance.SetNewArray(&newArray_EdbShowAlg_OI);
      instance.SetDelete(&delete_EdbShowAlg_OI);
      instance.SetDeleteArray(&deleteArray_EdbShowAlg_OI);
      instance.SetDestructor(&destruct_EdbShowAlg_OI);
      instance.SetStreamerFunc(&streamer_EdbShowAlg_OI);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbShowAlg_OI*)
   {
      return GenerateInitInstanceLocal((::EdbShowAlg_OI*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbShowAlg_OI*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbShowAlg_RC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbShowAlg_RC(void *p = 0);
   static void *newArray_EdbShowAlg_RC(Long_t size, void *p);
   static void delete_EdbShowAlg_RC(void *p);
   static void deleteArray_EdbShowAlg_RC(void *p);
   static void destruct_EdbShowAlg_RC(void *p);
   static void streamer_EdbShowAlg_RC(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbShowAlg_RC*)
   {
      ::EdbShowAlg_RC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbShowAlg_RC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbShowAlg_RC", ::EdbShowAlg_RC::Class_Version(), "./EdbShowAlg.h", 279,
                  typeid(::EdbShowAlg_RC), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbShowAlg_RC::Dictionary, isa_proxy, 0,
                  sizeof(::EdbShowAlg_RC) );
      instance.SetNew(&new_EdbShowAlg_RC);
      instance.SetNewArray(&newArray_EdbShowAlg_RC);
      instance.SetDelete(&delete_EdbShowAlg_RC);
      instance.SetDeleteArray(&deleteArray_EdbShowAlg_RC);
      instance.SetDestructor(&destruct_EdbShowAlg_RC);
      instance.SetStreamerFunc(&streamer_EdbShowAlg_RC);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbShowAlg_RC*)
   {
      return GenerateInitInstanceLocal((::EdbShowAlg_RC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbShowAlg_RC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbShowAlg_GS_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbShowAlg_GS(void *p = 0);
   static void *newArray_EdbShowAlg_GS(Long_t size, void *p);
   static void delete_EdbShowAlg_GS(void *p);
   static void deleteArray_EdbShowAlg_GS(void *p);
   static void destruct_EdbShowAlg_GS(void *p);
   static void streamer_EdbShowAlg_GS(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbShowAlg_GS*)
   {
      ::EdbShowAlg_GS *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbShowAlg_GS >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbShowAlg_GS", ::EdbShowAlg_GS::Class_Version(), "./EdbShowAlg_GS.h", 38,
                  typeid(::EdbShowAlg_GS), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbShowAlg_GS::Dictionary, isa_proxy, 0,
                  sizeof(::EdbShowAlg_GS) );
      instance.SetNew(&new_EdbShowAlg_GS);
      instance.SetNewArray(&newArray_EdbShowAlg_GS);
      instance.SetDelete(&delete_EdbShowAlg_GS);
      instance.SetDeleteArray(&deleteArray_EdbShowAlg_GS);
      instance.SetDestructor(&destruct_EdbShowAlg_GS);
      instance.SetStreamerFunc(&streamer_EdbShowAlg_GS);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbShowAlg_GS*)
   {
      return GenerateInitInstanceLocal((::EdbShowAlg_GS*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbShowAlg_GS*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbShowAlg_NN_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbShowAlg_NN(void *p = 0);
   static void *newArray_EdbShowAlg_NN(Long_t size, void *p);
   static void delete_EdbShowAlg_NN(void *p);
   static void deleteArray_EdbShowAlg_NN(void *p);
   static void destruct_EdbShowAlg_NN(void *p);
   static void streamer_EdbShowAlg_NN(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbShowAlg_NN*)
   {
      ::EdbShowAlg_NN *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbShowAlg_NN >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbShowAlg_NN", ::EdbShowAlg_NN::Class_Version(), "./EdbShowAlg_NN.h", 42,
                  typeid(::EdbShowAlg_NN), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbShowAlg_NN::Dictionary, isa_proxy, 0,
                  sizeof(::EdbShowAlg_NN) );
      instance.SetNew(&new_EdbShowAlg_NN);
      instance.SetNewArray(&newArray_EdbShowAlg_NN);
      instance.SetDelete(&delete_EdbShowAlg_NN);
      instance.SetDeleteArray(&deleteArray_EdbShowAlg_NN);
      instance.SetDestructor(&destruct_EdbShowAlg_NN);
      instance.SetStreamerFunc(&streamer_EdbShowAlg_NN);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbShowAlg_NN*)
   {
      return GenerateInitInstanceLocal((::EdbShowAlg_NN*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbShowAlg_NN*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbShowAlgE_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbShowAlgE(void *p = 0);
   static void *newArray_EdbShowAlgE(Long_t size, void *p);
   static void delete_EdbShowAlgE(void *p);
   static void deleteArray_EdbShowAlgE(void *p);
   static void destruct_EdbShowAlgE(void *p);
   static void streamer_EdbShowAlgE(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbShowAlgE*)
   {
      ::EdbShowAlgE *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbShowAlgE >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbShowAlgE", ::EdbShowAlgE::Class_Version(), "./EdbShowAlgE.h", 42,
                  typeid(::EdbShowAlgE), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbShowAlgE::Dictionary, isa_proxy, 0,
                  sizeof(::EdbShowAlgE) );
      instance.SetNew(&new_EdbShowAlgE);
      instance.SetNewArray(&newArray_EdbShowAlgE);
      instance.SetDelete(&delete_EdbShowAlgE);
      instance.SetDeleteArray(&deleteArray_EdbShowAlgE);
      instance.SetDestructor(&destruct_EdbShowAlgE);
      instance.SetStreamerFunc(&streamer_EdbShowAlgE);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbShowAlgE*)
   {
      return GenerateInitInstanceLocal((::EdbShowAlgE*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbShowAlgE*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbShowRec_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbShowRec(void *p = 0);
   static void *newArray_EdbShowRec(Long_t size, void *p);
   static void delete_EdbShowRec(void *p);
   static void deleteArray_EdbShowRec(void *p);
   static void destruct_EdbShowRec(void *p);
   static void streamer_EdbShowRec(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbShowRec*)
   {
      ::EdbShowRec *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbShowRec >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbShowRec", ::EdbShowRec::Class_Version(), "./EdbShowRec.h", 38,
                  typeid(::EdbShowRec), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbShowRec::Dictionary, isa_proxy, 0,
                  sizeof(::EdbShowRec) );
      instance.SetNew(&new_EdbShowRec);
      instance.SetNewArray(&newArray_EdbShowRec);
      instance.SetDelete(&delete_EdbShowRec);
      instance.SetDeleteArray(&deleteArray_EdbShowRec);
      instance.SetDestructor(&destruct_EdbShowRec);
      instance.SetStreamerFunc(&streamer_EdbShowRec);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbShowRec*)
   {
      return GenerateInitInstanceLocal((::EdbShowRec*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbShowRec*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbShowAlgE_Simple_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbShowAlgE_Simple(void *p = 0);
   static void *newArray_EdbShowAlgE_Simple(Long_t size, void *p);
   static void delete_EdbShowAlgE_Simple(void *p);
   static void deleteArray_EdbShowAlgE_Simple(void *p);
   static void destruct_EdbShowAlgE_Simple(void *p);
   static void streamer_EdbShowAlgE_Simple(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbShowAlgE_Simple*)
   {
      ::EdbShowAlgE_Simple *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbShowAlgE_Simple >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbShowAlgE_Simple", ::EdbShowAlgE_Simple::Class_Version(), "./EdbShowAlgE_Simple.h", 32,
                  typeid(::EdbShowAlgE_Simple), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbShowAlgE_Simple::Dictionary, isa_proxy, 0,
                  sizeof(::EdbShowAlgE_Simple) );
      instance.SetNew(&new_EdbShowAlgE_Simple);
      instance.SetNewArray(&newArray_EdbShowAlgE_Simple);
      instance.SetDelete(&delete_EdbShowAlgE_Simple);
      instance.SetDeleteArray(&deleteArray_EdbShowAlgE_Simple);
      instance.SetDestructor(&destruct_EdbShowAlgE_Simple);
      instance.SetStreamerFunc(&streamer_EdbShowAlgE_Simple);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbShowAlgE_Simple*)
   {
      return GenerateInitInstanceLocal((::EdbShowAlgE_Simple*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbShowAlgE_Simple*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbShowAlgClean_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbShowAlgClean(void *p = 0);
   static void *newArray_EdbShowAlgClean(Long_t size, void *p);
   static void delete_EdbShowAlgClean(void *p);
   static void deleteArray_EdbShowAlgClean(void *p);
   static void destruct_EdbShowAlgClean(void *p);
   static void streamer_EdbShowAlgClean(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbShowAlgClean*)
   {
      ::EdbShowAlgClean *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbShowAlgClean >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbShowAlgClean", ::EdbShowAlgClean::Class_Version(), "./EdbShowAlgClean.h", 31,
                  typeid(::EdbShowAlgClean), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbShowAlgClean::Dictionary, isa_proxy, 0,
                  sizeof(::EdbShowAlgClean) );
      instance.SetNew(&new_EdbShowAlgClean);
      instance.SetNewArray(&newArray_EdbShowAlgClean);
      instance.SetDelete(&delete_EdbShowAlgClean);
      instance.SetDeleteArray(&deleteArray_EdbShowAlgClean);
      instance.SetDestructor(&destruct_EdbShowAlgClean);
      instance.SetStreamerFunc(&streamer_EdbShowAlgClean);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbShowAlgClean*)
   {
      return GenerateInitInstanceLocal((::EdbShowAlgClean*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbShowAlgClean*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbShowAlgID_E_G_Simple_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbShowAlgID_E_G_Simple(void *p = 0);
   static void *newArray_EdbShowAlgID_E_G_Simple(Long_t size, void *p);
   static void delete_EdbShowAlgID_E_G_Simple(void *p);
   static void deleteArray_EdbShowAlgID_E_G_Simple(void *p);
   static void destruct_EdbShowAlgID_E_G_Simple(void *p);
   static void streamer_EdbShowAlgID_E_G_Simple(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbShowAlgID_E_G_Simple*)
   {
      ::EdbShowAlgID_E_G_Simple *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbShowAlgID_E_G_Simple >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbShowAlgID_E_G_Simple", ::EdbShowAlgID_E_G_Simple::Class_Version(), "./EdbShowAlgID_E_G_Simple.h", 32,
                  typeid(::EdbShowAlgID_E_G_Simple), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbShowAlgID_E_G_Simple::Dictionary, isa_proxy, 0,
                  sizeof(::EdbShowAlgID_E_G_Simple) );
      instance.SetNew(&new_EdbShowAlgID_E_G_Simple);
      instance.SetNewArray(&newArray_EdbShowAlgID_E_G_Simple);
      instance.SetDelete(&delete_EdbShowAlgID_E_G_Simple);
      instance.SetDeleteArray(&deleteArray_EdbShowAlgID_E_G_Simple);
      instance.SetDestructor(&destruct_EdbShowAlgID_E_G_Simple);
      instance.SetStreamerFunc(&streamer_EdbShowAlgID_E_G_Simple);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbShowAlgID_E_G_Simple*)
   {
      return GenerateInitInstanceLocal((::EdbShowAlgID_E_G_Simple*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbShowAlgID_E_G_Simple*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbShowPVRQuality_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbShowPVRQuality(void *p = 0);
   static void *newArray_EdbShowPVRQuality(Long_t size, void *p);
   static void delete_EdbShowPVRQuality(void *p);
   static void deleteArray_EdbShowPVRQuality(void *p);
   static void destruct_EdbShowPVRQuality(void *p);
   static void streamer_EdbShowPVRQuality(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbShowPVRQuality*)
   {
      ::EdbShowPVRQuality *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbShowPVRQuality >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbShowPVRQuality", ::EdbShowPVRQuality::Class_Version(), "./EdbShowPVRQuality.h", 32,
                  typeid(::EdbShowPVRQuality), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbShowPVRQuality::Dictionary, isa_proxy, 0,
                  sizeof(::EdbShowPVRQuality) );
      instance.SetNew(&new_EdbShowPVRQuality);
      instance.SetNewArray(&newArray_EdbShowPVRQuality);
      instance.SetDelete(&delete_EdbShowPVRQuality);
      instance.SetDeleteArray(&deleteArray_EdbShowPVRQuality);
      instance.SetDestructor(&destruct_EdbShowPVRQuality);
      instance.SetStreamerFunc(&streamer_EdbShowPVRQuality);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbShowPVRQuality*)
   {
      return GenerateInitInstanceLocal((::EdbShowPVRQuality*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbShowPVRQuality*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr EdbShowerP::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbShowerP::Class_Name()
{
   return "EdbShowerP";
}

//______________________________________________________________________________
const char *EdbShowerP::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbShowerP::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbShowerP::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbShowerP::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbShowerP::Para_FJ::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbShowerP::Para_FJ::Class_Name()
{
   return "EdbShowerP::Para_FJ";
}

//______________________________________________________________________________
const char *EdbShowerP::Para_FJ::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_FJ*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbShowerP::Para_FJ::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_FJ*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbShowerP::Para_FJ::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_FJ*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbShowerP::Para_FJ::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_FJ*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbShowerP::Para_LT::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbShowerP::Para_LT::Class_Name()
{
   return "EdbShowerP::Para_LT";
}

//______________________________________________________________________________
const char *EdbShowerP::Para_LT::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_LT*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbShowerP::Para_LT::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_LT*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbShowerP::Para_LT::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_LT*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbShowerP::Para_LT::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_LT*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbShowerP::Para_YC::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbShowerP::Para_YC::Class_Name()
{
   return "EdbShowerP::Para_YC";
}

//______________________________________________________________________________
const char *EdbShowerP::Para_YC::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_YC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbShowerP::Para_YC::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_YC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbShowerP::Para_YC::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_YC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbShowerP::Para_YC::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_YC*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbShowerP::Para_JC::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbShowerP::Para_JC::Class_Name()
{
   return "EdbShowerP::Para_JC";
}

//______________________________________________________________________________
const char *EdbShowerP::Para_JC::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_JC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbShowerP::Para_JC::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_JC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbShowerP::Para_JC::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_JC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbShowerP::Para_JC::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_JC*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbShowerP::Para_XX::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbShowerP::Para_XX::Class_Name()
{
   return "EdbShowerP::Para_XX";
}

//______________________________________________________________________________
const char *EdbShowerP::Para_XX::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_XX*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbShowerP::Para_XX::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_XX*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbShowerP::Para_XX::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_XX*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbShowerP::Para_XX::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_XX*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbShowerP::Para_YY::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbShowerP::Para_YY::Class_Name()
{
   return "EdbShowerP::Para_YY";
}

//______________________________________________________________________________
const char *EdbShowerP::Para_YY::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_YY*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbShowerP::Para_YY::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_YY*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbShowerP::Para_YY::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_YY*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbShowerP::Para_YY::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_YY*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbShowerP::Para_PP::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbShowerP::Para_PP::Class_Name()
{
   return "EdbShowerP::Para_PP";
}

//______________________________________________________________________________
const char *EdbShowerP::Para_PP::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_PP*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbShowerP::Para_PP::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_PP*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbShowerP::Para_PP::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_PP*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbShowerP::Para_PP::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_PP*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbShowerP::Para_AS::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbShowerP::Para_AS::Class_Name()
{
   return "EdbShowerP::Para_AS";
}

//______________________________________________________________________________
const char *EdbShowerP::Para_AS::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_AS*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbShowerP::Para_AS::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_AS*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbShowerP::Para_AS::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_AS*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbShowerP::Para_AS::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_AS*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbShowerP::Para_SE::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbShowerP::Para_SE::Class_Name()
{
   return "EdbShowerP::Para_SE";
}

//______________________________________________________________________________
const char *EdbShowerP::Para_SE::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_SE*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbShowerP::Para_SE::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_SE*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbShowerP::Para_SE::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_SE*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbShowerP::Para_SE::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_SE*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbShowerP::Para_ExtraInfo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbShowerP::Para_ExtraInfo::Class_Name()
{
   return "EdbShowerP::Para_ExtraInfo";
}

//______________________________________________________________________________
const char *EdbShowerP::Para_ExtraInfo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_ExtraInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbShowerP::Para_ExtraInfo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_ExtraInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbShowerP::Para_ExtraInfo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_ExtraInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbShowerP::Para_ExtraInfo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Para_ExtraInfo*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbShowerP::MCInfo_PGun::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbShowerP::MCInfo_PGun::Class_Name()
{
   return "EdbShowerP::MCInfo_PGun";
}

//______________________________________________________________________________
const char *EdbShowerP::MCInfo_PGun::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::MCInfo_PGun*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbShowerP::MCInfo_PGun::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::MCInfo_PGun*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbShowerP::MCInfo_PGun::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::MCInfo_PGun*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbShowerP::MCInfo_PGun::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::MCInfo_PGun*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbShowerP::MCInfo_Event::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbShowerP::MCInfo_Event::Class_Name()
{
   return "EdbShowerP::MCInfo_Event";
}

//______________________________________________________________________________
const char *EdbShowerP::MCInfo_Event::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::MCInfo_Event*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbShowerP::MCInfo_Event::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::MCInfo_Event*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbShowerP::MCInfo_Event::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::MCInfo_Event*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbShowerP::MCInfo_Event::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::MCInfo_Event*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbShowerP::Reco_ID::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbShowerP::Reco_ID::Class_Name()
{
   return "EdbShowerP::Reco_ID";
}

//______________________________________________________________________________
const char *EdbShowerP::Reco_ID::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Reco_ID*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbShowerP::Reco_ID::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Reco_ID*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbShowerP::Reco_ID::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Reco_ID*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbShowerP::Reco_ID::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Reco_ID*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbShowerP::Reco_E::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbShowerP::Reco_E::Class_Name()
{
   return "EdbShowerP::Reco_E";
}

//______________________________________________________________________________
const char *EdbShowerP::Reco_E::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Reco_E*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbShowerP::Reco_E::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Reco_E*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbShowerP::Reco_E::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Reco_E*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbShowerP::Reco_E::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Reco_E*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbShowerP::Reco_Vtx::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbShowerP::Reco_Vtx::Class_Name()
{
   return "EdbShowerP::Reco_Vtx";
}

//______________________________________________________________________________
const char *EdbShowerP::Reco_Vtx::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Reco_Vtx*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbShowerP::Reco_Vtx::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Reco_Vtx*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbShowerP::Reco_Vtx::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Reco_Vtx*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbShowerP::Reco_Vtx::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerP::Reco_Vtx*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbShowAlg::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbShowAlg::Class_Name()
{
   return "EdbShowAlg";
}

//______________________________________________________________________________
const char *EdbShowAlg::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlg*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbShowAlg::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlg*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbShowAlg::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlg*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbShowAlg::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlg*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbShowAlg_SA::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbShowAlg_SA::Class_Name()
{
   return "EdbShowAlg_SA";
}

//______________________________________________________________________________
const char *EdbShowAlg_SA::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlg_SA*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbShowAlg_SA::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlg_SA*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbShowAlg_SA::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlg_SA*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbShowAlg_SA::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlg_SA*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbShowAlg_CA::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbShowAlg_CA::Class_Name()
{
   return "EdbShowAlg_CA";
}

//______________________________________________________________________________
const char *EdbShowAlg_CA::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlg_CA*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbShowAlg_CA::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlg_CA*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbShowAlg_CA::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlg_CA*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbShowAlg_CA::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlg_CA*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbShowAlg_OI::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbShowAlg_OI::Class_Name()
{
   return "EdbShowAlg_OI";
}

//______________________________________________________________________________
const char *EdbShowAlg_OI::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlg_OI*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbShowAlg_OI::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlg_OI*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbShowAlg_OI::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlg_OI*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbShowAlg_OI::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlg_OI*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbShowAlg_RC::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbShowAlg_RC::Class_Name()
{
   return "EdbShowAlg_RC";
}

//______________________________________________________________________________
const char *EdbShowAlg_RC::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlg_RC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbShowAlg_RC::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlg_RC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbShowAlg_RC::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlg_RC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbShowAlg_RC::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlg_RC*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbShowAlg_GS::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbShowAlg_GS::Class_Name()
{
   return "EdbShowAlg_GS";
}

//______________________________________________________________________________
const char *EdbShowAlg_GS::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlg_GS*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbShowAlg_GS::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlg_GS*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbShowAlg_GS::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlg_GS*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbShowAlg_GS::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlg_GS*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbShowAlg_NN::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbShowAlg_NN::Class_Name()
{
   return "EdbShowAlg_NN";
}

//______________________________________________________________________________
const char *EdbShowAlg_NN::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlg_NN*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbShowAlg_NN::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlg_NN*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbShowAlg_NN::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlg_NN*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbShowAlg_NN::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlg_NN*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbShowAlgE::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbShowAlgE::Class_Name()
{
   return "EdbShowAlgE";
}

//______________________________________________________________________________
const char *EdbShowAlgE::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlgE*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbShowAlgE::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlgE*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbShowAlgE::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlgE*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbShowAlgE::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlgE*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbShowRec::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbShowRec::Class_Name()
{
   return "EdbShowRec";
}

//______________________________________________________________________________
const char *EdbShowRec::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowRec*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbShowRec::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowRec*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbShowRec::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowRec*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbShowRec::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowRec*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbShowAlgE_Simple::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbShowAlgE_Simple::Class_Name()
{
   return "EdbShowAlgE_Simple";
}

//______________________________________________________________________________
const char *EdbShowAlgE_Simple::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlgE_Simple*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbShowAlgE_Simple::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlgE_Simple*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbShowAlgE_Simple::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlgE_Simple*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbShowAlgE_Simple::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlgE_Simple*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbShowAlgClean::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbShowAlgClean::Class_Name()
{
   return "EdbShowAlgClean";
}

//______________________________________________________________________________
const char *EdbShowAlgClean::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlgClean*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbShowAlgClean::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlgClean*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbShowAlgClean::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlgClean*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbShowAlgClean::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlgClean*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbShowAlgID_E_G_Simple::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbShowAlgID_E_G_Simple::Class_Name()
{
   return "EdbShowAlgID_E_G_Simple";
}

//______________________________________________________________________________
const char *EdbShowAlgID_E_G_Simple::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlgID_E_G_Simple*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbShowAlgID_E_G_Simple::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlgID_E_G_Simple*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbShowAlgID_E_G_Simple::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlgID_E_G_Simple*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbShowAlgID_E_G_Simple::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowAlgID_E_G_Simple*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbShowPVRQuality::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbShowPVRQuality::Class_Name()
{
   return "EdbShowPVRQuality";
}

//______________________________________________________________________________
const char *EdbShowPVRQuality::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowPVRQuality*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbShowPVRQuality::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowPVRQuality*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbShowPVRQuality::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowPVRQuality*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbShowPVRQuality::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowPVRQuality*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void EdbShowRec::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbShowRec.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> eDoReconstruction;
      R__b >> eDoParametrization;
      R__b >> eDoId;
      R__b >> eDoEnergy;
      R__b >> eDoVtxAttach;
      R__b >> eAli;
      R__b >> eAliNpat;
      R__b >> eAliLoaded;
      R__b >> eInBTArray;
      R__b >> eInBTArrayN;
      R__b >> eInBTArrayLoaded;
      R__b >> eInBTArrayMaxSize;
      R__b >> eShowAlgArray;
      R__b >> eShowAlgArrayN;
      R__b.ReadStaticArray((int*)eShowAlgArraySingleN);
      R__b >> eShowAlgArrayLoaded;
      R__b >> eShowAlgArrayMaxSize;
      R__b >> eRecoShowerArray;
      R__b >> eRecoShowerArrayN;
      R__b >> eRecoShowerTreetreebranch;
      R__b >> eFirstPlate;
      R__b >> eLastPlate;
      R__b >> eMiddlePlate;
      R__b >> eNumberPlate;
      R__b >> eFirstPlate_eAliPID;
      R__b >> eLastPlate_eAliPID;
      R__b >> eMiddlePlate_eAliPID;
      R__b >> eNumberPlate_eAliPID;
      R__b >> eProposedFirstPlate;
      R__b >> eProposedLastPlate;
      R__b >> eProposedMiddlePlate;
      R__b >> eProposedNumberPlate;
      R__b >> eAliZMax;
      R__b >> eAliZMin;
      R__b >> eAliZMaxPID;
      R__b >> eAliZMinPID;
      eAliStreamType.Streamer(R__b);
      R__b >> eAliStreamTypeStep;
      R__b >> IsPlateValuesLabel;
      R__b >> eActualAlg;
      R__b.ReadStaticArray((int*)eActualAlgParameterset);
      R__b.ReadStaticArray((int*)eParaTypes);
      int R__i;
      for (R__i = 0; R__i < 8; R__i++)
         eParaNames[R__i].Streamer(R__b);
      eFilename_LnkDef.Streamer(R__b);
      eFilename_LinkedTracks.Streamer(R__b);
      eFilename_EdbPVRecObject.Streamer(R__b);
      eFilename_In_shower.Streamer(R__b);
      eFilename_In_treebranch.Streamer(R__b);
      R__b >> eReadFileShower;
      R__b >> eReadFileTreebranch;
      R__b >> eFile_In_shower;
      R__b >> eFile_In_treebranch;
      eFilename_Out_shower.Streamer(R__b);
      eFilename_Out_treebranch.Streamer(R__b);
      R__b >> eWriteFileShower;
      R__b >> eWriteFileTreebranch;
      R__b >> eFile_Out_shower;
      R__b >> eFile_Out_treebranch;
      eName_Out_shower.Streamer(R__b);
      eName_Out_treebranch.Streamer(R__b);
      R__b >> eUse_LT;
      R__b >> eUse_PVREC;
      R__b >> eUse_AliBT;
      R__b >> eUse_AliLT;
      R__b >> eUse_ROOTInBT;
      R__b >> eUse_InBTelse;
      R__b >> eUseNr;
      R__b >> eInBTTree;
      R__b >> eInBTArrayFraction;
      R__b >> eUseAliSub;
      R__b.CheckByteCount(R__s, R__c, EdbShowRec::IsA());
   } else {
      R__c = R__b.WriteVersion(EdbShowRec::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << eDoReconstruction;
      R__b << eDoParametrization;
      R__b << eDoId;
      R__b << eDoEnergy;
      R__b << eDoVtxAttach;
      R__b << eAli;
      R__b << eAliNpat;
      R__b << eAliLoaded;
      R__b << eInBTArray;
      R__b << eInBTArrayN;
      R__b << eInBTArrayLoaded;
      R__b << eInBTArrayMaxSize;
      R__b << eShowAlgArray;
      R__b << eShowAlgArrayN;
      R__b.WriteArray(eShowAlgArraySingleN, 10);
      R__b << eShowAlgArrayLoaded;
      R__b << eShowAlgArrayMaxSize;
      R__b << eRecoShowerArray;
      R__b << eRecoShowerArrayN;
      R__b << eRecoShowerTreetreebranch;
      R__b << eFirstPlate;
      R__b << eLastPlate;
      R__b << eMiddlePlate;
      R__b << eNumberPlate;
      R__b << eFirstPlate_eAliPID;
      R__b << eLastPlate_eAliPID;
      R__b << eMiddlePlate_eAliPID;
      R__b << eNumberPlate_eAliPID;
      R__b << eProposedFirstPlate;
      R__b << eProposedLastPlate;
      R__b << eProposedMiddlePlate;
      R__b << eProposedNumberPlate;
      R__b << eAliZMax;
      R__b << eAliZMin;
      R__b << eAliZMaxPID;
      R__b << eAliZMinPID;
      eAliStreamType.Streamer(R__b);
      R__b << eAliStreamTypeStep;
      R__b << IsPlateValuesLabel;
      R__b << eActualAlg;
      R__b.WriteArray(eActualAlgParameterset, 10);
      R__b.WriteArray(eParaTypes, 8);
      int R__i;
      for (R__i = 0; R__i < 8; R__i++)
         eParaNames[R__i].Streamer(R__b);
      eFilename_LnkDef.Streamer(R__b);
      eFilename_LinkedTracks.Streamer(R__b);
      eFilename_EdbPVRecObject.Streamer(R__b);
      eFilename_In_shower.Streamer(R__b);
      eFilename_In_treebranch.Streamer(R__b);
      R__b << eReadFileShower;
      R__b << eReadFileTreebranch;
      R__b << eFile_In_shower;
      R__b << eFile_In_treebranch;
      eFilename_Out_shower.Streamer(R__b);
      eFilename_Out_treebranch.Streamer(R__b);
      R__b << eWriteFileShower;
      R__b << eWriteFileTreebranch;
      R__b << eFile_Out_shower;
      R__b << eFile_Out_treebranch;
      eName_Out_shower.Streamer(R__b);
      eName_Out_treebranch.Streamer(R__b);
      R__b << eUse_LT;
      R__b << eUse_PVREC;
      R__b << eUse_AliBT;
      R__b << eUse_AliLT;
      R__b << eUse_ROOTInBT;
      R__b << eUse_InBTelse;
      R__b << eUseNr;
      R__b << eInBTTree;
      R__b << eInBTArrayFraction;
      R__b << eUseAliSub;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbShowRec::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbShowRec.
      TClass *R__cl = ::EdbShowRec::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eDoReconstruction", &eDoReconstruction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eDoParametrization", &eDoParametrization);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eDoId", &eDoId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eDoEnergy", &eDoEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eDoVtxAttach", &eDoVtxAttach);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eAli", &eAli);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAliNpat", &eAliNpat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAliLoaded", &eAliLoaded);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eInBTArray", &eInBTArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eInBTArrayN", &eInBTArrayN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eInBTArrayLoaded", &eInBTArrayLoaded);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eInBTArrayMaxSize", &eInBTArrayMaxSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eShowAlgArray", &eShowAlgArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eShowAlgArrayN", &eShowAlgArrayN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eShowAlgArraySingleN[10]", eShowAlgArraySingleN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eShowAlgArrayLoaded", &eShowAlgArrayLoaded);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eShowAlgArrayMaxSize", &eShowAlgArrayMaxSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eRecoShowerArray", &eRecoShowerArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eRecoShowerArrayN", &eRecoShowerArrayN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eRecoShowerTreetreebranch", &eRecoShowerTreetreebranch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eFirstPlate", &eFirstPlate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eLastPlate", &eLastPlate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eMiddlePlate", &eMiddlePlate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eNumberPlate", &eNumberPlate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eFirstPlate_eAliPID", &eFirstPlate_eAliPID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eLastPlate_eAliPID", &eLastPlate_eAliPID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eMiddlePlate_eAliPID", &eMiddlePlate_eAliPID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eNumberPlate_eAliPID", &eNumberPlate_eAliPID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eProposedFirstPlate", &eProposedFirstPlate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eProposedLastPlate", &eProposedLastPlate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eProposedMiddlePlate", &eProposedMiddlePlate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eProposedNumberPlate", &eProposedNumberPlate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAliZMax", &eAliZMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAliZMin", &eAliZMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAliZMaxPID", &eAliZMaxPID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAliZMinPID", &eAliZMinPID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAliStreamType", &eAliStreamType);
      R__insp.InspectMember(eAliStreamType, "eAliStreamType.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAliStreamTypeStep", &eAliStreamTypeStep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsPlateValuesLabel", &IsPlateValuesLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eActualAlg", &eActualAlg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eActualAlgParameterset[10]", eActualAlgParameterset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eParaTypes[8]", eParaTypes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eParaNames[8]", eParaNames);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eFilename_LnkDef", &eFilename_LnkDef);
      R__insp.InspectMember(eFilename_LnkDef, "eFilename_LnkDef.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eFilename_LinkedTracks", &eFilename_LinkedTracks);
      R__insp.InspectMember(eFilename_LinkedTracks, "eFilename_LinkedTracks.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eFilename_EdbPVRecObject", &eFilename_EdbPVRecObject);
      R__insp.InspectMember(eFilename_EdbPVRecObject, "eFilename_EdbPVRecObject.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eFilename_In_shower", &eFilename_In_shower);
      R__insp.InspectMember(eFilename_In_shower, "eFilename_In_shower.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eFilename_In_treebranch", &eFilename_In_treebranch);
      R__insp.InspectMember(eFilename_In_treebranch, "eFilename_In_treebranch.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eReadFileShower", &eReadFileShower);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eReadFileTreebranch", &eReadFileTreebranch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eFile_In_shower", &eFile_In_shower);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eFile_In_treebranch", &eFile_In_treebranch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eFilename_Out_shower", &eFilename_Out_shower);
      R__insp.InspectMember(eFilename_Out_shower, "eFilename_Out_shower.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eFilename_Out_treebranch", &eFilename_Out_treebranch);
      R__insp.InspectMember(eFilename_Out_treebranch, "eFilename_Out_treebranch.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eWriteFileShower", &eWriteFileShower);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eWriteFileTreebranch", &eWriteFileTreebranch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eFile_Out_shower", &eFile_Out_shower);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eFile_Out_treebranch", &eFile_Out_treebranch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eName_Out_shower", &eName_Out_shower);
      R__insp.InspectMember(eName_Out_shower, "eName_Out_shower.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eName_Out_treebranch", &eName_Out_treebranch);
      R__insp.InspectMember(eName_Out_treebranch, "eName_Out_treebranch.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eUse_LT", &eUse_LT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eUse_PVREC", &eUse_PVREC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eUse_AliBT", &eUse_AliBT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eUse_AliLT", &eUse_AliLT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eUse_ROOTInBT", &eUse_ROOTInBT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eUse_InBTelse", &eUse_InBTelse);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eUseNr", &eUseNr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eInBTCuts[3]", &eInBTCuts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eInBTTree", &eInBTTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eInBTArrayFraction", &eInBTArrayFraction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eUseAliSub", &eUseAliSub);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbShowRec(void *p) {
      return  p ? new(p) ::EdbShowRec : new ::EdbShowRec;
   }
   static void *newArray_EdbShowRec(Long_t nElements, void *p) {
      return p ? new(p) ::EdbShowRec[nElements] : new ::EdbShowRec[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbShowRec(void *p) {
      delete ((::EdbShowRec*)p);
   }
   static void deleteArray_EdbShowRec(void *p) {
      delete [] ((::EdbShowRec*)p);
   }
   static void destruct_EdbShowRec(void *p) {
      typedef ::EdbShowRec current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbShowRec(TBuffer &buf, void *obj) {
      ((::EdbShowRec*)obj)->::EdbShowRec::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbShowRec

//______________________________________________________________________________
void EdbShowerP::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbShowerP.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      EdbSegP::Streamer(R__b);
      eLongitudinalProfileName.Streamer(R__b);
      eTransversalProfileName.Streamer(R__b);
      eAlgName.Streamer(R__b);
      R__b >> eAlgValue;
      R__b.ReadStaticArray((float*)eParaValue);
      int R__i;
      for (R__i = 0; R__i < 10; R__i++)
         eParaString[R__i].Streamer(R__b);
      R__b.ReadStaticArray((bool*)eParametrisationIsDone);
      R__b.ReadStaticArray((bool*)eExtraInfoIsDone);
      R__b.ReadStaticArray((bool*)eMCInfoIsDone);
      R__b >> eFirstPlate;
      R__b >> eLastPlate;
      R__b >> eFirstPlatePID;
      R__b >> eLastPlatePID;
      R__b >> eFirstPlateZ;
      R__b >> eLastPlateZ;
      R__b >> eFirstZ;
      R__b >> eLastZ;
      R__b >> eS;
      R__b >> eNpl;
      R__b >> eN0;
      R__b >> eM;
      R__b >> ePDG;
      R__b >> eNBT;
      R__b >> eNBTMC;
      R__b.ReadStaticArray((int*)eNBTMCFlag);
      R__b.ReadStaticArray((int*)eNBTPlate);
      R__b.ReadStaticArray((int*)eNBTMCPlate);
      R__b.ReadStaticArray((int*)eNBTMCFlagPlate);
      R__b >> eN00;
      R__b >> ePurity;
      R__b >> eEnergyMC;
      R__b >> eMC;
      R__b >> eSphericity;
      R__b >> eProfileLongitudinal;
      R__b >> eProfileTransversal;
      R__b >> eShowerAxisAngle;
      R__b >> eShowerAxisCenterGravityBT;
      R__b >> eShowerAngularDeviationTXDistribution_mean;
      R__b >> eShowerAngularDeviationTXDistribution_sigma;
      R__b >> eShowerAngularDeviationTYDistribution_mean;
      R__b >> eShowerAngularDeviationTYDistribution_sigma;
      R__b >> eId;
      R__b >> ePDGId;
      R__b >> eEnergy;
      R__b >> eEnergyUncorrected;
      R__b >> eEnergyCorrected;
      ePara_FJ.Streamer(R__b);
      ePara_LT.Streamer(R__b);
      ePara_YC.Streamer(R__b);
      ePara_JC.Streamer(R__b);
      ePara_XX.Streamer(R__b);
      ePara_YY.Streamer(R__b);
      ePara_PP.Streamer(R__b);
      ePara_AS.Streamer(R__b);
      ePara_SE.Streamer(R__b);
      R__b >> ePara_N;
      ePara_ExtraInfo.Streamer(R__b);
      eMCInfo_PGun.Streamer(R__b);
      eMCInfo_Event.Streamer(R__b);
      eReco_E.Streamer(R__b);
      eReco_Vtx.Streamer(R__b);
      R__b >> eReco_ID_Array;
      R__b >> eReco_E_Array;
      R__b >> eReco_Vtx_Array;
      R__b.CheckByteCount(R__s, R__c, EdbShowerP::IsA());
   } else {
      R__c = R__b.WriteVersion(EdbShowerP::IsA(), kTRUE);
      EdbSegP::Streamer(R__b);
      eLongitudinalProfileName.Streamer(R__b);
      eTransversalProfileName.Streamer(R__b);
      eAlgName.Streamer(R__b);
      R__b << eAlgValue;
      R__b.WriteArray(eParaValue, 10);
      int R__i;
      for (R__i = 0; R__i < 10; R__i++)
         eParaString[R__i].Streamer(R__b);
      R__b.WriteArray(eParametrisationIsDone, 10);
      R__b.WriteArray(eExtraInfoIsDone, 2);
      R__b.WriteArray(eMCInfoIsDone, 2);
      R__b << eFirstPlate;
      R__b << eLastPlate;
      R__b << eFirstPlatePID;
      R__b << eLastPlatePID;
      R__b << eFirstPlateZ;
      R__b << eLastPlateZ;
      R__b << eFirstZ;
      R__b << eLastZ;
      R__b << eS;
      R__b << eNpl;
      R__b << eN0;
      R__b << eM;
      R__b << ePDG;
      R__b << eNBT;
      R__b << eNBTMC;
      R__b.WriteArray(eNBTMCFlag, 99);
      R__b.WriteArray(eNBTPlate, 57);
      R__b.WriteArray(eNBTMCPlate, 57);
      R__b.WriteArray((int*)eNBTMCFlagPlate, 5643);
      R__b << eN00;
      R__b << ePurity;
      R__b << eEnergyMC;
      R__b << eMC;
      R__b << eSphericity;
      R__b << (TObject*)eProfileLongitudinal;
      R__b << (TObject*)eProfileTransversal;
      R__b << eShowerAxisAngle;
      R__b << eShowerAxisCenterGravityBT;
      R__b << eShowerAngularDeviationTXDistribution_mean;
      R__b << eShowerAngularDeviationTXDistribution_sigma;
      R__b << eShowerAngularDeviationTYDistribution_mean;
      R__b << eShowerAngularDeviationTYDistribution_sigma;
      R__b << eId;
      R__b << ePDGId;
      R__b << eEnergy;
      R__b << eEnergyUncorrected;
      R__b << eEnergyCorrected;
      ePara_FJ.Streamer(R__b);
      ePara_LT.Streamer(R__b);
      ePara_YC.Streamer(R__b);
      ePara_JC.Streamer(R__b);
      ePara_XX.Streamer(R__b);
      ePara_YY.Streamer(R__b);
      ePara_PP.Streamer(R__b);
      ePara_AS.Streamer(R__b);
      ePara_SE.Streamer(R__b);
      R__b << ePara_N;
      ePara_ExtraInfo.Streamer(R__b);
      eMCInfo_PGun.Streamer(R__b);
      eMCInfo_Event.Streamer(R__b);
      eReco_E.Streamer(R__b);
      eReco_Vtx.Streamer(R__b);
      R__b << eReco_ID_Array;
      R__b << eReco_E_Array;
      R__b << eReco_Vtx_Array;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbShowerP::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbShowerP.
      TClass *R__cl = ::EdbShowerP::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eLongitudinalProfileName", &eLongitudinalProfileName);
      R__insp.InspectMember(eLongitudinalProfileName, "eLongitudinalProfileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eTransversalProfileName", &eTransversalProfileName);
      R__insp.InspectMember(eTransversalProfileName, "eTransversalProfileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAlgName", &eAlgName);
      R__insp.InspectMember(eAlgName, "eAlgName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAlgValue", &eAlgValue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eParaValue[10]", eParaValue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eParaString[10]", eParaString);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eParametrisationIsDone[10]", eParametrisationIsDone);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eExtraInfoIsDone[2]", eExtraInfoIsDone);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eMCInfoIsDone[2]", eMCInfoIsDone);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eFirstPlate", &eFirstPlate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eLastPlate", &eLastPlate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eFirstPlatePID", &eFirstPlatePID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eLastPlatePID", &eLastPlatePID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eFirstPlateZ", &eFirstPlateZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eLastPlateZ", &eLastPlateZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eFirstZ", &eFirstZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eLastZ", &eLastZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eS", &eS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eNpl", &eNpl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eN0", &eN0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eTrackAS", &eTrackAS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eVTAS", &eVTAS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eM", &eM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePDG", &ePDG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eNBT", &eNBT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eNBTMC", &eNBTMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eNBTMCFlag[99]", eNBTMCFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eNBTPlate[57]", eNBTPlate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eNBTMCPlate[57]", eNBTMCPlate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eNBTMCFlagPlate[57][99]", eNBTMCFlagPlate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eN00", &eN00);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePurity", &ePurity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eEnergyMC", &eEnergyMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eMC", &eMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eSphericity", &eSphericity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eProfileLongitudinal", &eProfileLongitudinal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eProfileTransversal", &eProfileTransversal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eShowerAxisAngle", &eShowerAxisAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eShowerAxisCenterGravityBT", &eShowerAxisCenterGravityBT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eShowerAngularDeviationTXDistribution_mean", &eShowerAngularDeviationTXDistribution_mean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eShowerAngularDeviationTXDistribution_sigma", &eShowerAngularDeviationTXDistribution_sigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eShowerAngularDeviationTYDistribution_mean", &eShowerAngularDeviationTYDistribution_mean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eShowerAngularDeviationTYDistribution_sigma", &eShowerAngularDeviationTYDistribution_sigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eId", &eId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePDGId", &ePDGId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eEnergy", &eEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eEnergyUncorrected", &eEnergyUncorrected);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eEnergyCorrected", &eEnergyCorrected);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePara_FJ", &ePara_FJ);
      R__insp.InspectMember(ePara_FJ, "ePara_FJ.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePara_LT", &ePara_LT);
      R__insp.InspectMember(ePara_LT, "ePara_LT.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePara_YC", &ePara_YC);
      R__insp.InspectMember(ePara_YC, "ePara_YC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePara_JC", &ePara_JC);
      R__insp.InspectMember(ePara_JC, "ePara_JC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePara_XX", &ePara_XX);
      R__insp.InspectMember(ePara_XX, "ePara_XX.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePara_YY", &ePara_YY);
      R__insp.InspectMember(ePara_YY, "ePara_YY.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePara_PP", &ePara_PP);
      R__insp.InspectMember(ePara_PP, "ePara_PP.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePara_AS", &ePara_AS);
      R__insp.InspectMember(ePara_AS, "ePara_AS.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePara_SE", &ePara_SE);
      R__insp.InspectMember(ePara_SE, "ePara_SE.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePara_N", &ePara_N);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePara_ExtraInfo", &ePara_ExtraInfo);
      R__insp.InspectMember(ePara_ExtraInfo, "ePara_ExtraInfo.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eMCInfo_PGun", &eMCInfo_PGun);
      R__insp.InspectMember(eMCInfo_PGun, "eMCInfo_PGun.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eMCInfo_Event", &eMCInfo_Event);
      R__insp.InspectMember(eMCInfo_Event, "eMCInfo_Event.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eReco_E", &eReco_E);
      R__insp.InspectMember(eReco_E, "eReco_E.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eReco_Vtx", &eReco_Vtx);
      R__insp.InspectMember(eReco_Vtx, "eReco_Vtx.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eReco_ID_Array", &eReco_ID_Array);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eReco_E_Array", &eReco_E_Array);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eReco_Vtx_Array", &eReco_Vtx_Array);
      EdbSegP::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbShowerP(void *p) {
      return  p ? new(p) ::EdbShowerP : new ::EdbShowerP;
   }
   static void *newArray_EdbShowerP(Long_t nElements, void *p) {
      return p ? new(p) ::EdbShowerP[nElements] : new ::EdbShowerP[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbShowerP(void *p) {
      delete ((::EdbShowerP*)p);
   }
   static void deleteArray_EdbShowerP(void *p) {
      delete [] ((::EdbShowerP*)p);
   }
   static void destruct_EdbShowerP(void *p) {
      typedef ::EdbShowerP current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbShowerP(TBuffer &buf, void *obj) {
      ((::EdbShowerP*)obj)->::EdbShowerP::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbShowerP

//______________________________________________________________________________
void EdbShowerP::Para_FJ::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbShowerP::Para_FJ.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::EdbShowerP::Para_FJ thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> ShowerAxisAngle;
      R__b >> nseg;
      R__b >> BT_deltaR_mean;
      R__b >> BT_deltaR_rms;
      R__b >> BT_deltaT_mean;
      R__b >> BT_deltaT_rms;
      R__b.ReadStaticArray((int*)longprofile);
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      R__b << ShowerAxisAngle;
      R__b << nseg;
      R__b << BT_deltaR_mean;
      R__b << BT_deltaR_rms;
      R__b << BT_deltaT_mean;
      R__b << BT_deltaT_rms;
      R__b.WriteArray(longprofile, 57);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbShowerP::Para_FJ::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbShowerP::Para_FJ.
      TClass *R__cl = ::EdbShowerP::Para_FJ::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ShowerAxisAngle", &ShowerAxisAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nseg", &nseg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BT_deltaR_mean", &BT_deltaR_mean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BT_deltaR_rms", &BT_deltaR_rms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BT_deltaT_mean", &BT_deltaT_mean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BT_deltaT_rms", &BT_deltaT_rms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "longprofile[57]", longprofile);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbShowerPcLcLPara_FJ(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EdbShowerP::Para_FJ : new ::EdbShowerP::Para_FJ;
   }
   static void *newArray_EdbShowerPcLcLPara_FJ(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EdbShowerP::Para_FJ[nElements] : new ::EdbShowerP::Para_FJ[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbShowerPcLcLPara_FJ(void *p) {
      delete ((::EdbShowerP::Para_FJ*)p);
   }
   static void deleteArray_EdbShowerPcLcLPara_FJ(void *p) {
      delete [] ((::EdbShowerP::Para_FJ*)p);
   }
   static void destruct_EdbShowerPcLcLPara_FJ(void *p) {
      typedef ::EdbShowerP::Para_FJ current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbShowerPcLcLPara_FJ(TBuffer &buf, void *obj) {
      ((::EdbShowerP::Para_FJ*)obj)->::EdbShowerP::Para_FJ::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbShowerP::Para_FJ

//______________________________________________________________________________
void EdbShowerP::Para_LT::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbShowerP::Para_LT.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::EdbShowerP::Para_LT thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> ShowerAxisAngle;
      R__b >> nseg;
      R__b >> BT_deltaR_mean;
      R__b >> BT_deltaR_rms;
      R__b >> BT_deltaT_mean;
      R__b >> BT_deltaT_rms;
      R__b.ReadStaticArray((int*)transprofile);
      R__b.ReadStaticArray((int*)longprofile);
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      R__b << ShowerAxisAngle;
      R__b << nseg;
      R__b << BT_deltaR_mean;
      R__b << BT_deltaR_rms;
      R__b << BT_deltaT_mean;
      R__b << BT_deltaT_rms;
      R__b.WriteArray(transprofile, 8);
      R__b.WriteArray(longprofile, 57);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbShowerP::Para_LT::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbShowerP::Para_LT.
      TClass *R__cl = ::EdbShowerP::Para_LT::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ShowerAxisAngle", &ShowerAxisAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nseg", &nseg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BT_deltaR_mean", &BT_deltaR_mean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BT_deltaR_rms", &BT_deltaR_rms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BT_deltaT_mean", &BT_deltaT_mean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BT_deltaT_rms", &BT_deltaT_rms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "transprofile[8]", transprofile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "longprofile[57]", longprofile);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbShowerPcLcLPara_LT(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EdbShowerP::Para_LT : new ::EdbShowerP::Para_LT;
   }
   static void *newArray_EdbShowerPcLcLPara_LT(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EdbShowerP::Para_LT[nElements] : new ::EdbShowerP::Para_LT[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbShowerPcLcLPara_LT(void *p) {
      delete ((::EdbShowerP::Para_LT*)p);
   }
   static void deleteArray_EdbShowerPcLcLPara_LT(void *p) {
      delete [] ((::EdbShowerP::Para_LT*)p);
   }
   static void destruct_EdbShowerPcLcLPara_LT(void *p) {
      typedef ::EdbShowerP::Para_LT current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbShowerPcLcLPara_LT(TBuffer &buf, void *obj) {
      ((::EdbShowerP::Para_LT*)obj)->::EdbShowerP::Para_LT::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbShowerP::Para_LT

//______________________________________________________________________________
void EdbShowerP::Para_YC::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbShowerP::Para_YC.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::EdbShowerP::Para_YC thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> ShowerAxisAngle;
      R__b >> nseg;
      R__b >> C1;
      R__b >> a1;
      R__b >> alpha;
      R__b >> nmax;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      R__b << ShowerAxisAngle;
      R__b << nseg;
      R__b << C1;
      R__b << a1;
      R__b << alpha;
      R__b << nmax;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbShowerP::Para_YC::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbShowerP::Para_YC.
      TClass *R__cl = ::EdbShowerP::Para_YC::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ShowerAxisAngle", &ShowerAxisAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nseg", &nseg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "C1", &C1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1", &a1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alpha", &alpha);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nmax", &nmax);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbShowerPcLcLPara_YC(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EdbShowerP::Para_YC : new ::EdbShowerP::Para_YC;
   }
   static void *newArray_EdbShowerPcLcLPara_YC(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EdbShowerP::Para_YC[nElements] : new ::EdbShowerP::Para_YC[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbShowerPcLcLPara_YC(void *p) {
      delete ((::EdbShowerP::Para_YC*)p);
   }
   static void deleteArray_EdbShowerPcLcLPara_YC(void *p) {
      delete [] ((::EdbShowerP::Para_YC*)p);
   }
   static void destruct_EdbShowerPcLcLPara_YC(void *p) {
      typedef ::EdbShowerP::Para_YC current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbShowerPcLcLPara_YC(TBuffer &buf, void *obj) {
      ((::EdbShowerP::Para_YC*)obj)->::EdbShowerP::Para_YC::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbShowerP::Para_YC

//______________________________________________________________________________
void EdbShowerP::Para_JC::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbShowerP::Para_JC.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::EdbShowerP::Para_JC thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> ShowerAxisAngle;
      R__b >> nseg;
      R__b >> C1;
      R__b >> a1;
      R__b >> alpha;
      R__b >> nmax;
      R__b >> BT_deltaR_mean;
      R__b >> BT_deltaR_rms;
      R__b >> BT_deltaT_mean;
      R__b >> BT_deltaT_rms;
      R__b.ReadStaticArray((int*)longprofile);
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      R__b << ShowerAxisAngle;
      R__b << nseg;
      R__b << C1;
      R__b << a1;
      R__b << alpha;
      R__b << nmax;
      R__b << BT_deltaR_mean;
      R__b << BT_deltaR_rms;
      R__b << BT_deltaT_mean;
      R__b << BT_deltaT_rms;
      R__b.WriteArray(longprofile, 57);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbShowerP::Para_JC::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbShowerP::Para_JC.
      TClass *R__cl = ::EdbShowerP::Para_JC::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ShowerAxisAngle", &ShowerAxisAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nseg", &nseg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "C1", &C1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1", &a1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alpha", &alpha);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nmax", &nmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BT_deltaR_mean", &BT_deltaR_mean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BT_deltaR_rms", &BT_deltaR_rms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BT_deltaT_mean", &BT_deltaT_mean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BT_deltaT_rms", &BT_deltaT_rms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "longprofile[57]", longprofile);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbShowerPcLcLPara_JC(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EdbShowerP::Para_JC : new ::EdbShowerP::Para_JC;
   }
   static void *newArray_EdbShowerPcLcLPara_JC(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EdbShowerP::Para_JC[nElements] : new ::EdbShowerP::Para_JC[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbShowerPcLcLPara_JC(void *p) {
      delete ((::EdbShowerP::Para_JC*)p);
   }
   static void deleteArray_EdbShowerPcLcLPara_JC(void *p) {
      delete [] ((::EdbShowerP::Para_JC*)p);
   }
   static void destruct_EdbShowerPcLcLPara_JC(void *p) {
      typedef ::EdbShowerP::Para_JC current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbShowerPcLcLPara_JC(TBuffer &buf, void *obj) {
      ((::EdbShowerP::Para_JC*)obj)->::EdbShowerP::Para_JC::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbShowerP::Para_JC

//______________________________________________________________________________
void EdbShowerP::Para_XX::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbShowerP::Para_XX.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::EdbShowerP::Para_XX thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> ShowerAxisAngle;
      R__b >> nseg;
      R__b >> Mean_ProfileLongitudinal;
      R__b >> RMS_ProfileLongitudinal;
      R__b >> Max_ProfileLongitudinal;
      R__b >> Mean_ProfileTransversal;
      R__b >> RMS_ProfileTransversal;
      R__b >> Max_ProfileTransversal;
      R__b >> Last_ProfileLongitudinal;
      R__b >> Last_ProfileTransversal;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      R__b << ShowerAxisAngle;
      R__b << nseg;
      R__b << Mean_ProfileLongitudinal;
      R__b << RMS_ProfileLongitudinal;
      R__b << Max_ProfileLongitudinal;
      R__b << Mean_ProfileTransversal;
      R__b << RMS_ProfileTransversal;
      R__b << Max_ProfileTransversal;
      R__b << Last_ProfileLongitudinal;
      R__b << Last_ProfileTransversal;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbShowerP::Para_XX::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbShowerP::Para_XX.
      TClass *R__cl = ::EdbShowerP::Para_XX::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ShowerAxisAngle", &ShowerAxisAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nseg", &nseg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mean_ProfileLongitudinal", &Mean_ProfileLongitudinal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RMS_ProfileLongitudinal", &RMS_ProfileLongitudinal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Max_ProfileLongitudinal", &Max_ProfileLongitudinal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mean_ProfileTransversal", &Mean_ProfileTransversal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RMS_ProfileTransversal", &RMS_ProfileTransversal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Max_ProfileTransversal", &Max_ProfileTransversal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Last_ProfileLongitudinal", &Last_ProfileLongitudinal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Last_ProfileTransversal", &Last_ProfileTransversal);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbShowerPcLcLPara_XX(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EdbShowerP::Para_XX : new ::EdbShowerP::Para_XX;
   }
   static void *newArray_EdbShowerPcLcLPara_XX(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EdbShowerP::Para_XX[nElements] : new ::EdbShowerP::Para_XX[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbShowerPcLcLPara_XX(void *p) {
      delete ((::EdbShowerP::Para_XX*)p);
   }
   static void deleteArray_EdbShowerPcLcLPara_XX(void *p) {
      delete [] ((::EdbShowerP::Para_XX*)p);
   }
   static void destruct_EdbShowerPcLcLPara_XX(void *p) {
      typedef ::EdbShowerP::Para_XX current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbShowerPcLcLPara_XX(TBuffer &buf, void *obj) {
      ((::EdbShowerP::Para_XX*)obj)->::EdbShowerP::Para_XX::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbShowerP::Para_XX

//______________________________________________________________________________
void EdbShowerP::Para_YY::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbShowerP::Para_YY.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::EdbShowerP::Para_YY thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> ShowerAxisAngle;
      R__b >> nseg;
      R__b.ReadStaticArray((int*)ProfileLongitudinalBincontent);
      R__b.ReadStaticArray((int*)ProfileTransversalBincontent);
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      R__b << ShowerAxisAngle;
      R__b << nseg;
      R__b.WriteArray(ProfileLongitudinalBincontent, 57);
      R__b.WriteArray(ProfileTransversalBincontent, 8);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbShowerP::Para_YY::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbShowerP::Para_YY.
      TClass *R__cl = ::EdbShowerP::Para_YY::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ShowerAxisAngle", &ShowerAxisAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nseg", &nseg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ProfileLongitudinalBincontent[57]", ProfileLongitudinalBincontent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ProfileTransversalBincontent[8]", ProfileTransversalBincontent);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbShowerPcLcLPara_YY(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EdbShowerP::Para_YY : new ::EdbShowerP::Para_YY;
   }
   static void *newArray_EdbShowerPcLcLPara_YY(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EdbShowerP::Para_YY[nElements] : new ::EdbShowerP::Para_YY[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbShowerPcLcLPara_YY(void *p) {
      delete ((::EdbShowerP::Para_YY*)p);
   }
   static void deleteArray_EdbShowerPcLcLPara_YY(void *p) {
      delete [] ((::EdbShowerP::Para_YY*)p);
   }
   static void destruct_EdbShowerPcLcLPara_YY(void *p) {
      typedef ::EdbShowerP::Para_YY current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbShowerPcLcLPara_YY(TBuffer &buf, void *obj) {
      ((::EdbShowerP::Para_YY*)obj)->::EdbShowerP::Para_YY::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbShowerP::Para_YY

//______________________________________________________________________________
void EdbShowerP::Para_PP::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbShowerP::Para_PP.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::EdbShowerP::Para_PP thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> ShowerAxisAngle;
      R__b >> nseg;
      R__b >> ePairOpeningAngle;
      R__b >> ePairOpeningDist_dMin;
      R__b >> ePairOpeningDist_dR;
      R__b >> ePairChi2;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      R__b << ShowerAxisAngle;
      R__b << nseg;
      R__b << ePairOpeningAngle;
      R__b << ePairOpeningDist_dMin;
      R__b << ePairOpeningDist_dR;
      R__b << ePairChi2;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbShowerP::Para_PP::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbShowerP::Para_PP.
      TClass *R__cl = ::EdbShowerP::Para_PP::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ShowerAxisAngle", &ShowerAxisAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nseg", &nseg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePairOpeningAngle", &ePairOpeningAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePairOpeningDist_dMin", &ePairOpeningDist_dMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePairOpeningDist_dR", &ePairOpeningDist_dR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePairChi2", &ePairChi2);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbShowerPcLcLPara_PP(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EdbShowerP::Para_PP : new ::EdbShowerP::Para_PP;
   }
   static void *newArray_EdbShowerPcLcLPara_PP(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EdbShowerP::Para_PP[nElements] : new ::EdbShowerP::Para_PP[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbShowerPcLcLPara_PP(void *p) {
      delete ((::EdbShowerP::Para_PP*)p);
   }
   static void deleteArray_EdbShowerPcLcLPara_PP(void *p) {
      delete [] ((::EdbShowerP::Para_PP*)p);
   }
   static void destruct_EdbShowerPcLcLPara_PP(void *p) {
      typedef ::EdbShowerP::Para_PP current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbShowerPcLcLPara_PP(TBuffer &buf, void *obj) {
      ((::EdbShowerP::Para_PP*)obj)->::EdbShowerP::Para_PP::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbShowerP::Para_PP

//______________________________________________________________________________
void EdbShowerP::Para_AS::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbShowerP::Para_AS.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::EdbShowerP::Para_AS thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> nseg;
      R__b.ReadStaticArray((double*)edIP);
      R__b.ReadStaticArray((double*)edMin);
      R__b.ReadStaticArray((double*)edRLong);
      R__b.ReadStaticArray((double*)edRTrans);
      R__b.ReadStaticArray((double*)edeltarb);
      R__b.ReadStaticArray((double*)edeltathetab);
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      R__b << nseg;
      R__b.WriteArray(edIP, 50);
      R__b.WriteArray(edMin, 50);
      R__b.WriteArray(edRLong, 50);
      R__b.WriteArray(edRTrans, 50);
      R__b.WriteArray(edeltarb, 50);
      R__b.WriteArray(edeltathetab, 50);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbShowerP::Para_AS::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbShowerP::Para_AS.
      TClass *R__cl = ::EdbShowerP::Para_AS::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nseg", &nseg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "edIP[50]", edIP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "edMin[50]", edMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "edRLong[50]", edRLong);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "edRTrans[50]", edRTrans);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "edeltarb[50]", edeltarb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "edeltathetab[50]", edeltathetab);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbShowerPcLcLPara_AS(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EdbShowerP::Para_AS : new ::EdbShowerP::Para_AS;
   }
   static void *newArray_EdbShowerPcLcLPara_AS(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EdbShowerP::Para_AS[nElements] : new ::EdbShowerP::Para_AS[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbShowerPcLcLPara_AS(void *p) {
      delete ((::EdbShowerP::Para_AS*)p);
   }
   static void deleteArray_EdbShowerPcLcLPara_AS(void *p) {
      delete [] ((::EdbShowerP::Para_AS*)p);
   }
   static void destruct_EdbShowerPcLcLPara_AS(void *p) {
      typedef ::EdbShowerP::Para_AS current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbShowerPcLcLPara_AS(TBuffer &buf, void *obj) {
      ((::EdbShowerP::Para_AS*)obj)->::EdbShowerP::Para_AS::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbShowerP::Para_AS

//______________________________________________________________________________
void EdbShowerP::Para_SE::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbShowerP::Para_SE.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::EdbShowerP::Para_SE thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> ShowerAxisAngle;
      R__b >> nseg;
      R__b >> npl;
      R__b >> efficiencyAtShowerAxisAngle;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      R__b << ShowerAxisAngle;
      R__b << nseg;
      R__b << npl;
      R__b << efficiencyAtShowerAxisAngle;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbShowerP::Para_SE::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbShowerP::Para_SE.
      TClass *R__cl = ::EdbShowerP::Para_SE::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ShowerAxisAngle", &ShowerAxisAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nseg", &nseg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "npl", &npl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "efficiencyAtShowerAxisAngle", &efficiencyAtShowerAxisAngle);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbShowerPcLcLPara_SE(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EdbShowerP::Para_SE : new ::EdbShowerP::Para_SE;
   }
   static void *newArray_EdbShowerPcLcLPara_SE(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EdbShowerP::Para_SE[nElements] : new ::EdbShowerP::Para_SE[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbShowerPcLcLPara_SE(void *p) {
      delete ((::EdbShowerP::Para_SE*)p);
   }
   static void deleteArray_EdbShowerPcLcLPara_SE(void *p) {
      delete [] ((::EdbShowerP::Para_SE*)p);
   }
   static void destruct_EdbShowerPcLcLPara_SE(void *p) {
      typedef ::EdbShowerP::Para_SE current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbShowerPcLcLPara_SE(TBuffer &buf, void *obj) {
      ((::EdbShowerP::Para_SE*)obj)->::EdbShowerP::Para_SE::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbShowerP::Para_SE

//______________________________________________________________________________
void EdbShowerP::Para_ExtraInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbShowerP::Para_ExtraInfo.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::EdbShowerP::Para_ExtraInfo thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> InBT_E;
      R__b >> InBT_Flag;
      R__b >> InPairBT_E;
      R__b >> ShowerLength;
      R__b >> InBT_IPToVtx;
      R__b >> InBT_DeltaZToVtx;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      R__b << InBT_E;
      R__b << InBT_Flag;
      R__b << InPairBT_E;
      R__b << ShowerLength;
      R__b << InBT_IPToVtx;
      R__b << InBT_DeltaZToVtx;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbShowerP::Para_ExtraInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbShowerP::Para_ExtraInfo.
      TClass *R__cl = ::EdbShowerP::Para_ExtraInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "InBT_E", &InBT_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "InBT_Flag", &InBT_Flag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "InPairBT_E", &InPairBT_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ShowerLength", &ShowerLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "InBT_IPToVtx", &InBT_IPToVtx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "InBT_DeltaZToVtx", &InBT_DeltaZToVtx);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbShowerPcLcLPara_ExtraInfo(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EdbShowerP::Para_ExtraInfo : new ::EdbShowerP::Para_ExtraInfo;
   }
   static void *newArray_EdbShowerPcLcLPara_ExtraInfo(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EdbShowerP::Para_ExtraInfo[nElements] : new ::EdbShowerP::Para_ExtraInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbShowerPcLcLPara_ExtraInfo(void *p) {
      delete ((::EdbShowerP::Para_ExtraInfo*)p);
   }
   static void deleteArray_EdbShowerPcLcLPara_ExtraInfo(void *p) {
      delete [] ((::EdbShowerP::Para_ExtraInfo*)p);
   }
   static void destruct_EdbShowerPcLcLPara_ExtraInfo(void *p) {
      typedef ::EdbShowerP::Para_ExtraInfo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbShowerPcLcLPara_ExtraInfo(TBuffer &buf, void *obj) {
      ((::EdbShowerP::Para_ExtraInfo*)obj)->::EdbShowerP::Para_ExtraInfo::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbShowerP::Para_ExtraInfo

//______________________________________________________________________________
void EdbShowerP::MCInfo_PGun::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbShowerP::MCInfo_PGun.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::EdbShowerP::MCInfo_PGun thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> MCEvt;
      R__b >> PDGId;
      R__b >> energy;
      R__b >> tantheta;
      R__b >> dirx;
      R__b >> diry;
      R__b >> dirz;
      R__b >> vtxposx;
      R__b >> vtxposy;
      R__b >> vtxposz;
      R__b >> TX;
      R__b >> TY;
      R__b >> Y;
      R__b >> X;
      R__b >> Z;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      R__b << MCEvt;
      R__b << PDGId;
      R__b << energy;
      R__b << tantheta;
      R__b << dirx;
      R__b << diry;
      R__b << dirz;
      R__b << vtxposx;
      R__b << vtxposy;
      R__b << vtxposz;
      R__b << TX;
      R__b << TY;
      R__b << Y;
      R__b << X;
      R__b << Z;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbShowerP::MCInfo_PGun::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbShowerP::MCInfo_PGun.
      TClass *R__cl = ::EdbShowerP::MCInfo_PGun::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MCEvt", &MCEvt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PDGId", &PDGId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy", &energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tantheta", &tantheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dirx", &dirx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "diry", &diry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dirz", &dirz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vtxposx", &vtxposx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vtxposy", &vtxposy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vtxposz", &vtxposz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TX", &TX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TY", &TY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Y", &Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "X", &X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Z", &Z);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbShowerPcLcLMCInfo_PGun(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EdbShowerP::MCInfo_PGun : new ::EdbShowerP::MCInfo_PGun;
   }
   static void *newArray_EdbShowerPcLcLMCInfo_PGun(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EdbShowerP::MCInfo_PGun[nElements] : new ::EdbShowerP::MCInfo_PGun[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbShowerPcLcLMCInfo_PGun(void *p) {
      delete ((::EdbShowerP::MCInfo_PGun*)p);
   }
   static void deleteArray_EdbShowerPcLcLMCInfo_PGun(void *p) {
      delete [] ((::EdbShowerP::MCInfo_PGun*)p);
   }
   static void destruct_EdbShowerPcLcLMCInfo_PGun(void *p) {
      typedef ::EdbShowerP::MCInfo_PGun current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbShowerPcLcLMCInfo_PGun(TBuffer &buf, void *obj) {
      ((::EdbShowerP::MCInfo_PGun*)obj)->::EdbShowerP::MCInfo_PGun::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbShowerP::MCInfo_PGun

//______________________________________________________________________________
void EdbShowerP::MCInfo_Event::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbShowerP::MCInfo_Event.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::EdbShowerP::MCInfo_Event thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> eDUMMYVARIABLE;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      R__b << eDUMMYVARIABLE;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbShowerP::MCInfo_Event::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbShowerP::MCInfo_Event.
      TClass *R__cl = ::EdbShowerP::MCInfo_Event::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eDUMMYVARIABLE", &eDUMMYVARIABLE);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbShowerPcLcLMCInfo_Event(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EdbShowerP::MCInfo_Event : new ::EdbShowerP::MCInfo_Event;
   }
   static void *newArray_EdbShowerPcLcLMCInfo_Event(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EdbShowerP::MCInfo_Event[nElements] : new ::EdbShowerP::MCInfo_Event[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbShowerPcLcLMCInfo_Event(void *p) {
      delete ((::EdbShowerP::MCInfo_Event*)p);
   }
   static void deleteArray_EdbShowerPcLcLMCInfo_Event(void *p) {
      delete [] ((::EdbShowerP::MCInfo_Event*)p);
   }
   static void destruct_EdbShowerPcLcLMCInfo_Event(void *p) {
      typedef ::EdbShowerP::MCInfo_Event current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbShowerPcLcLMCInfo_Event(TBuffer &buf, void *obj) {
      ((::EdbShowerP::MCInfo_Event*)obj)->::EdbShowerP::MCInfo_Event::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbShowerP::MCInfo_Event

//______________________________________________________________________________
void EdbShowerP::Reco_ID::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbShowerP::Reco_ID.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::EdbShowerP::Reco_ID thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> eProb90;
      R__b >> eProb5;
      eReco_ID_Name.Streamer(R__b);
      R__b >> eReco_ID_Nr;
      R__b >> eParaNr;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      R__b << eProb90;
      R__b << eProb5;
      eReco_ID_Name.Streamer(R__b);
      R__b << eReco_ID_Nr;
      R__b << eParaNr;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbShowerP::Reco_ID::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbShowerP::Reco_ID.
      TClass *R__cl = ::EdbShowerP::Reco_ID::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eProb90", &eProb90);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eProb5", &eProb5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eReco_ID_Name", &eReco_ID_Name);
      R__insp.InspectMember(eReco_ID_Name, "eReco_ID_Name.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eReco_ID_Nr", &eReco_ID_Nr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eParaNr", &eParaNr);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbShowerPcLcLReco_ID(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EdbShowerP::Reco_ID : new ::EdbShowerP::Reco_ID;
   }
   static void *newArray_EdbShowerPcLcLReco_ID(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EdbShowerP::Reco_ID[nElements] : new ::EdbShowerP::Reco_ID[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbShowerPcLcLReco_ID(void *p) {
      delete ((::EdbShowerP::Reco_ID*)p);
   }
   static void deleteArray_EdbShowerPcLcLReco_ID(void *p) {
      delete [] ((::EdbShowerP::Reco_ID*)p);
   }
   static void destruct_EdbShowerPcLcLReco_ID(void *p) {
      typedef ::EdbShowerP::Reco_ID current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbShowerPcLcLReco_ID(TBuffer &buf, void *obj) {
      ((::EdbShowerP::Reco_ID*)obj)->::EdbShowerP::Reco_ID::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbShowerP::Reco_ID

//______________________________________________________________________________
void EdbShowerP::Reco_E::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbShowerP::Reco_E.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::EdbShowerP::Reco_E thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> eId;
      R__b >> ePDGId;
      R__b >> eEnergy;
      R__b >> eEnergyUncorrected;
      R__b >> eEnergyCorrected;
      R__b >> eParaNr;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      R__b << eId;
      R__b << ePDGId;
      R__b << eEnergy;
      R__b << eEnergyUncorrected;
      R__b << eEnergyCorrected;
      R__b << eParaNr;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbShowerP::Reco_E::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbShowerP::Reco_E.
      TClass *R__cl = ::EdbShowerP::Reco_E::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eId", &eId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePDGId", &ePDGId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eEnergy", &eEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eEnergyUncorrected", &eEnergyUncorrected);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eEnergyCorrected", &eEnergyCorrected);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eParaNr", &eParaNr);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbShowerPcLcLReco_E(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EdbShowerP::Reco_E : new ::EdbShowerP::Reco_E;
   }
   static void *newArray_EdbShowerPcLcLReco_E(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EdbShowerP::Reco_E[nElements] : new ::EdbShowerP::Reco_E[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbShowerPcLcLReco_E(void *p) {
      delete ((::EdbShowerP::Reco_E*)p);
   }
   static void deleteArray_EdbShowerPcLcLReco_E(void *p) {
      delete [] ((::EdbShowerP::Reco_E*)p);
   }
   static void destruct_EdbShowerPcLcLReco_E(void *p) {
      typedef ::EdbShowerP::Reco_E current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbShowerPcLcLReco_E(TBuffer &buf, void *obj) {
      ((::EdbShowerP::Reco_E*)obj)->::EdbShowerP::Reco_E::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbShowerP::Reco_E

//______________________________________________________________________________
void EdbShowerP::Reco_Vtx::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbShowerP::Reco_Vtx.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::EdbShowerP::Reco_Vtx thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> eDUMMYVARIABLE;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      R__b << eDUMMYVARIABLE;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbShowerP::Reco_Vtx::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbShowerP::Reco_Vtx.
      TClass *R__cl = ::EdbShowerP::Reco_Vtx::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eDUMMYVARIABLE", &eDUMMYVARIABLE);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbShowerPcLcLReco_Vtx(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EdbShowerP::Reco_Vtx : new ::EdbShowerP::Reco_Vtx;
   }
   static void *newArray_EdbShowerPcLcLReco_Vtx(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EdbShowerP::Reco_Vtx[nElements] : new ::EdbShowerP::Reco_Vtx[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbShowerPcLcLReco_Vtx(void *p) {
      delete ((::EdbShowerP::Reco_Vtx*)p);
   }
   static void deleteArray_EdbShowerPcLcLReco_Vtx(void *p) {
      delete [] ((::EdbShowerP::Reco_Vtx*)p);
   }
   static void destruct_EdbShowerPcLcLReco_Vtx(void *p) {
      typedef ::EdbShowerP::Reco_Vtx current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbShowerPcLcLReco_Vtx(TBuffer &buf, void *obj) {
      ((::EdbShowerP::Reco_Vtx*)obj)->::EdbShowerP::Reco_Vtx::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbShowerP::Reco_Vtx

//______________________________________________________________________________
void EdbShowAlg::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbShowAlg.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      eAlgName.Streamer(R__b);
      R__b >> eAlgValue;
      R__b >> eParaN;
      R__b.ReadStaticArray((float*)eParaValue);
      int R__i;
      for (R__i = 0; R__i < 10; R__i++)
         eParaString[R__i].Streamer(R__b);
      R__b >> eActualAlgParametersetNr;
      R__b >> eAli;
      R__b >> eAliNpat;
      R__b >> eInBTArray;
      R__b >> eInBTArrayN;
      R__b >> eFirstPlate_eAliPID;
      R__b >> eLastPlate_eAliPID;
      R__b >> eMiddlePlate_eAliPID;
      R__b >> eNumberPlate_eAliPID;
      R__b >> eRecoShowerArray;
      R__b >> eRecoShowerArrayN;
      R__b >> eAli_Sub;
      R__b >> eAli_SubNpat;
      R__b >> eUseAliSub;
      R__b >> eRecoShower;
      R__b.CheckByteCount(R__s, R__c, EdbShowAlg::IsA());
   } else {
      R__c = R__b.WriteVersion(EdbShowAlg::IsA(), kTRUE);
      TObject::Streamer(R__b);
      eAlgName.Streamer(R__b);
      R__b << eAlgValue;
      R__b << eParaN;
      R__b.WriteArray(eParaValue, 10);
      int R__i;
      for (R__i = 0; R__i < 10; R__i++)
         eParaString[R__i].Streamer(R__b);
      R__b << eActualAlgParametersetNr;
      R__b << eAli;
      R__b << eAliNpat;
      R__b << eInBTArray;
      R__b << eInBTArrayN;
      R__b << eFirstPlate_eAliPID;
      R__b << eLastPlate_eAliPID;
      R__b << eMiddlePlate_eAliPID;
      R__b << eNumberPlate_eAliPID;
      R__b << eRecoShowerArray;
      R__b << eRecoShowerArrayN;
      R__b << eAli_Sub;
      R__b << eAli_SubNpat;
      R__b << eUseAliSub;
      R__b << eRecoShower;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbShowAlg::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbShowAlg.
      TClass *R__cl = ::EdbShowAlg::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAlgName", &eAlgName);
      R__insp.InspectMember(eAlgName, "eAlgName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAlgValue", &eAlgValue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eParaN", &eParaN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eParaValue[10]", eParaValue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eParaString[10]", eParaString);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eActualAlgParametersetNr", &eActualAlgParametersetNr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eAli", &eAli);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAliNpat", &eAliNpat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eInBTArray", &eInBTArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eInBTArrayN", &eInBTArrayN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eFirstPlate_eAliPID", &eFirstPlate_eAliPID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eLastPlate_eAliPID", &eLastPlate_eAliPID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eMiddlePlate_eAliPID", &eMiddlePlate_eAliPID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eNumberPlate_eAliPID", &eNumberPlate_eAliPID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eRecoShowerArray", &eRecoShowerArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eRecoShowerArrayN", &eRecoShowerArrayN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eAli_Sub", &eAli_Sub);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAli_SubNpat", &eAli_SubNpat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eUseAliSub", &eUseAliSub);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eRecoShower", &eRecoShower);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbShowAlg(void *p) {
      return  p ? new(p) ::EdbShowAlg : new ::EdbShowAlg;
   }
   static void *newArray_EdbShowAlg(Long_t nElements, void *p) {
      return p ? new(p) ::EdbShowAlg[nElements] : new ::EdbShowAlg[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbShowAlg(void *p) {
      delete ((::EdbShowAlg*)p);
   }
   static void deleteArray_EdbShowAlg(void *p) {
      delete [] ((::EdbShowAlg*)p);
   }
   static void destruct_EdbShowAlg(void *p) {
      typedef ::EdbShowAlg current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbShowAlg(TBuffer &buf, void *obj) {
      ((::EdbShowAlg*)obj)->::EdbShowAlg::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbShowAlg

//______________________________________________________________________________
void EdbShowAlg_SA::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbShowAlg_SA.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      EdbShowAlg::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, EdbShowAlg_SA::IsA());
   } else {
      R__c = R__b.WriteVersion(EdbShowAlg_SA::IsA(), kTRUE);
      EdbShowAlg::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbShowAlg_SA::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbShowAlg_SA.
      TClass *R__cl = ::EdbShowAlg_SA::IsA();
      if (R__cl || R__insp.IsA()) { }
      EdbShowAlg::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbShowAlg_SA(void *p) {
      return  p ? new(p) ::EdbShowAlg_SA : new ::EdbShowAlg_SA;
   }
   static void *newArray_EdbShowAlg_SA(Long_t nElements, void *p) {
      return p ? new(p) ::EdbShowAlg_SA[nElements] : new ::EdbShowAlg_SA[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbShowAlg_SA(void *p) {
      delete ((::EdbShowAlg_SA*)p);
   }
   static void deleteArray_EdbShowAlg_SA(void *p) {
      delete [] ((::EdbShowAlg_SA*)p);
   }
   static void destruct_EdbShowAlg_SA(void *p) {
      typedef ::EdbShowAlg_SA current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbShowAlg_SA(TBuffer &buf, void *obj) {
      ((::EdbShowAlg_SA*)obj)->::EdbShowAlg_SA::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbShowAlg_SA

//______________________________________________________________________________
void EdbShowAlg_CA::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbShowAlg_CA.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      EdbShowAlg::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, EdbShowAlg_CA::IsA());
   } else {
      R__c = R__b.WriteVersion(EdbShowAlg_CA::IsA(), kTRUE);
      EdbShowAlg::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbShowAlg_CA::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbShowAlg_CA.
      TClass *R__cl = ::EdbShowAlg_CA::IsA();
      if (R__cl || R__insp.IsA()) { }
      EdbShowAlg::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbShowAlg_CA(void *p) {
      return  p ? new(p) ::EdbShowAlg_CA : new ::EdbShowAlg_CA;
   }
   static void *newArray_EdbShowAlg_CA(Long_t nElements, void *p) {
      return p ? new(p) ::EdbShowAlg_CA[nElements] : new ::EdbShowAlg_CA[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbShowAlg_CA(void *p) {
      delete ((::EdbShowAlg_CA*)p);
   }
   static void deleteArray_EdbShowAlg_CA(void *p) {
      delete [] ((::EdbShowAlg_CA*)p);
   }
   static void destruct_EdbShowAlg_CA(void *p) {
      typedef ::EdbShowAlg_CA current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbShowAlg_CA(TBuffer &buf, void *obj) {
      ((::EdbShowAlg_CA*)obj)->::EdbShowAlg_CA::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbShowAlg_CA

//______________________________________________________________________________
void EdbShowAlg_OI::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbShowAlg_OI.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      EdbShowAlg::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, EdbShowAlg_OI::IsA());
   } else {
      R__c = R__b.WriteVersion(EdbShowAlg_OI::IsA(), kTRUE);
      EdbShowAlg::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbShowAlg_OI::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbShowAlg_OI.
      TClass *R__cl = ::EdbShowAlg_OI::IsA();
      if (R__cl || R__insp.IsA()) { }
      EdbShowAlg::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbShowAlg_OI(void *p) {
      return  p ? new(p) ::EdbShowAlg_OI : new ::EdbShowAlg_OI;
   }
   static void *newArray_EdbShowAlg_OI(Long_t nElements, void *p) {
      return p ? new(p) ::EdbShowAlg_OI[nElements] : new ::EdbShowAlg_OI[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbShowAlg_OI(void *p) {
      delete ((::EdbShowAlg_OI*)p);
   }
   static void deleteArray_EdbShowAlg_OI(void *p) {
      delete [] ((::EdbShowAlg_OI*)p);
   }
   static void destruct_EdbShowAlg_OI(void *p) {
      typedef ::EdbShowAlg_OI current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbShowAlg_OI(TBuffer &buf, void *obj) {
      ((::EdbShowAlg_OI*)obj)->::EdbShowAlg_OI::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbShowAlg_OI

//______________________________________________________________________________
void EdbShowAlg_NN::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbShowAlg_NN.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      EdbShowAlg::Streamer(R__b);
      eWeightFileString.Streamer(R__b);
      eWeightFileLayoutString.Streamer(R__b);
      R__b >> eANNTree;
      R__b >> eTMlpANN;
      R__b >> eANN_var_InBT_To_TestBT;
      R__b >> eANN_var_dT_InBT_To_TestBT;
      R__b >> eANN_var_dR_InBT_To_TestBT;
      R__b >> eANN_var_dR_TestBT_To_InBT;
      R__b >> eANN_var_zDist_TestBT_To_InBT;
      R__b >> eANN_var_SpatialDist_TestBT_To_InBT;
      R__b >> eANN_var_zDiff_TestBT_To_InBT;
      R__b >> eANN_var_dT_NextBT_To_TestBT;
      R__b >> eANN_var_dR_NextBT_To_TestBT;
      R__b >> eANN_var_mean_dT_2before;
      R__b >> eANN_var_mean_dR_2before;
      R__b >> eANN_var_mean_dT_before;
      R__b >> eANN_var_mean_dR_before;
      R__b >> eANN_var_mean_dT_same;
      R__b >> eANN_var_mean_dR_same;
      R__b >> eANN_var_mean_dT_after;
      R__b >> eANN_var_mean_dR_after;
      R__b >> eANN_var_mean_dT_2after;
      R__b >> eANN_var_mean_dR_2after;
      R__b >> eANN_var_min_dT_2before;
      R__b >> eANN_var_min_dR_2before;
      R__b >> eANN_var_min_dT_before;
      R__b >> eANN_var_min_dR_before;
      R__b >> eANN_var_min_dT_same;
      R__b >> eANN_var_min_dR_same;
      R__b >> eANN_var_min_dT_after;
      R__b >> eANN_var_min_dR_after;
      R__b >> eANN_var_min_dT_2after;
      R__b >> eANN_var_min_dR_2after;
      R__b >> eANN_var_nseg_1before;
      R__b >> eANN_var_nseg_2before;
      R__b >> eANN_var_nseg_3before;
      R__b >> eANN_var_nseg_1after;
      R__b >> eANN_var_nseg_2after;
      R__b >> eANN_var_nseg_3after;
      R__b >> eANN_var_nseg_same;
      R__b >> eANN_var_type;
      R__b.CheckByteCount(R__s, R__c, EdbShowAlg_NN::IsA());
   } else {
      R__c = R__b.WriteVersion(EdbShowAlg_NN::IsA(), kTRUE);
      EdbShowAlg::Streamer(R__b);
      eWeightFileString.Streamer(R__b);
      eWeightFileLayoutString.Streamer(R__b);
      R__b << eANNTree;
      R__b << eTMlpANN;
      R__b << eANN_var_InBT_To_TestBT;
      R__b << eANN_var_dT_InBT_To_TestBT;
      R__b << eANN_var_dR_InBT_To_TestBT;
      R__b << eANN_var_dR_TestBT_To_InBT;
      R__b << eANN_var_zDist_TestBT_To_InBT;
      R__b << eANN_var_SpatialDist_TestBT_To_InBT;
      R__b << eANN_var_zDiff_TestBT_To_InBT;
      R__b << eANN_var_dT_NextBT_To_TestBT;
      R__b << eANN_var_dR_NextBT_To_TestBT;
      R__b << eANN_var_mean_dT_2before;
      R__b << eANN_var_mean_dR_2before;
      R__b << eANN_var_mean_dT_before;
      R__b << eANN_var_mean_dR_before;
      R__b << eANN_var_mean_dT_same;
      R__b << eANN_var_mean_dR_same;
      R__b << eANN_var_mean_dT_after;
      R__b << eANN_var_mean_dR_after;
      R__b << eANN_var_mean_dT_2after;
      R__b << eANN_var_mean_dR_2after;
      R__b << eANN_var_min_dT_2before;
      R__b << eANN_var_min_dR_2before;
      R__b << eANN_var_min_dT_before;
      R__b << eANN_var_min_dR_before;
      R__b << eANN_var_min_dT_same;
      R__b << eANN_var_min_dR_same;
      R__b << eANN_var_min_dT_after;
      R__b << eANN_var_min_dR_after;
      R__b << eANN_var_min_dT_2after;
      R__b << eANN_var_min_dR_2after;
      R__b << eANN_var_nseg_1before;
      R__b << eANN_var_nseg_2before;
      R__b << eANN_var_nseg_3before;
      R__b << eANN_var_nseg_1after;
      R__b << eANN_var_nseg_2after;
      R__b << eANN_var_nseg_3after;
      R__b << eANN_var_nseg_same;
      R__b << eANN_var_type;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbShowAlg_NN::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbShowAlg_NN.
      TClass *R__cl = ::EdbShowAlg_NN::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eWeightFileString", &eWeightFileString);
      R__insp.InspectMember(eWeightFileString, "eWeightFileString.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eWeightFileLayoutString", &eWeightFileLayoutString);
      R__insp.InspectMember(eWeightFileLayoutString, "eWeightFileLayoutString.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eANNTree", &eANNTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eTMlpANN", &eTMlpANN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_InBT_To_TestBT", &eANN_var_InBT_To_TestBT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_dT_InBT_To_TestBT", &eANN_var_dT_InBT_To_TestBT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_dR_InBT_To_TestBT", &eANN_var_dR_InBT_To_TestBT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_dR_TestBT_To_InBT", &eANN_var_dR_TestBT_To_InBT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_zDist_TestBT_To_InBT", &eANN_var_zDist_TestBT_To_InBT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_SpatialDist_TestBT_To_InBT", &eANN_var_SpatialDist_TestBT_To_InBT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_zDiff_TestBT_To_InBT", &eANN_var_zDiff_TestBT_To_InBT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_dT_NextBT_To_TestBT", &eANN_var_dT_NextBT_To_TestBT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_dR_NextBT_To_TestBT", &eANN_var_dR_NextBT_To_TestBT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_mean_dT_2before", &eANN_var_mean_dT_2before);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_mean_dR_2before", &eANN_var_mean_dR_2before);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_mean_dT_before", &eANN_var_mean_dT_before);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_mean_dR_before", &eANN_var_mean_dR_before);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_mean_dT_same", &eANN_var_mean_dT_same);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_mean_dR_same", &eANN_var_mean_dR_same);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_mean_dT_after", &eANN_var_mean_dT_after);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_mean_dR_after", &eANN_var_mean_dR_after);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_mean_dT_2after", &eANN_var_mean_dT_2after);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_mean_dR_2after", &eANN_var_mean_dR_2after);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_min_dT_2before", &eANN_var_min_dT_2before);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_min_dR_2before", &eANN_var_min_dR_2before);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_min_dT_before", &eANN_var_min_dT_before);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_min_dR_before", &eANN_var_min_dR_before);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_min_dT_same", &eANN_var_min_dT_same);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_min_dR_same", &eANN_var_min_dR_same);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_min_dT_after", &eANN_var_min_dT_after);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_min_dR_after", &eANN_var_min_dR_after);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_min_dT_2after", &eANN_var_min_dT_2after);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_min_dR_2after", &eANN_var_min_dR_2after);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_nseg_1before", &eANN_var_nseg_1before);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_nseg_2before", &eANN_var_nseg_2before);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_nseg_3before", &eANN_var_nseg_3before);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_nseg_1after", &eANN_var_nseg_1after);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_nseg_2after", &eANN_var_nseg_2after);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_nseg_3after", &eANN_var_nseg_3after);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_nseg_same", &eANN_var_nseg_same);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_var_type", &eANN_var_type);
      EdbShowAlg::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbShowAlg_NN(void *p) {
      return  p ? new(p) ::EdbShowAlg_NN : new ::EdbShowAlg_NN;
   }
   static void *newArray_EdbShowAlg_NN(Long_t nElements, void *p) {
      return p ? new(p) ::EdbShowAlg_NN[nElements] : new ::EdbShowAlg_NN[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbShowAlg_NN(void *p) {
      delete ((::EdbShowAlg_NN*)p);
   }
   static void deleteArray_EdbShowAlg_NN(void *p) {
      delete [] ((::EdbShowAlg_NN*)p);
   }
   static void destruct_EdbShowAlg_NN(void *p) {
      typedef ::EdbShowAlg_NN current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbShowAlg_NN(TBuffer &buf, void *obj) {
      ((::EdbShowAlg_NN*)obj)->::EdbShowAlg_NN::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbShowAlg_NN

//______________________________________________________________________________
void EdbShowAlg_RC::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbShowAlg_RC.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      EdbShowAlg::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, EdbShowAlg_RC::IsA());
   } else {
      R__c = R__b.WriteVersion(EdbShowAlg_RC::IsA(), kTRUE);
      EdbShowAlg::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbShowAlg_RC::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbShowAlg_RC.
      TClass *R__cl = ::EdbShowAlg_RC::IsA();
      if (R__cl || R__insp.IsA()) { }
      EdbShowAlg::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbShowAlg_RC(void *p) {
      return  p ? new(p) ::EdbShowAlg_RC : new ::EdbShowAlg_RC;
   }
   static void *newArray_EdbShowAlg_RC(Long_t nElements, void *p) {
      return p ? new(p) ::EdbShowAlg_RC[nElements] : new ::EdbShowAlg_RC[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbShowAlg_RC(void *p) {
      delete ((::EdbShowAlg_RC*)p);
   }
   static void deleteArray_EdbShowAlg_RC(void *p) {
      delete [] ((::EdbShowAlg_RC*)p);
   }
   static void destruct_EdbShowAlg_RC(void *p) {
      typedef ::EdbShowAlg_RC current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbShowAlg_RC(TBuffer &buf, void *obj) {
      ((::EdbShowAlg_RC*)obj)->::EdbShowAlg_RC::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbShowAlg_RC

//______________________________________________________________________________
void EdbShowAlg_GS::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbShowAlg_GS.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      EdbShowAlg::Streamer(R__b);
      R__b >> eInVtxArray;
      R__b >> eInVtxArrayN;
      R__b >> h_GammaChi2;
      R__b.CheckByteCount(R__s, R__c, EdbShowAlg_GS::IsA());
   } else {
      R__c = R__b.WriteVersion(EdbShowAlg_GS::IsA(), kTRUE);
      EdbShowAlg::Streamer(R__b);
      R__b << eInVtxArray;
      R__b << eInVtxArrayN;
      R__b << (TObject*)h_GammaChi2;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbShowAlg_GS::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbShowAlg_GS.
      TClass *R__cl = ::EdbShowAlg_GS::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eInVtxArray", &eInVtxArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eInVtxArrayN", &eInVtxArrayN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_GammaChi2", &h_GammaChi2);
      EdbShowAlg::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbShowAlg_GS(void *p) {
      return  p ? new(p) ::EdbShowAlg_GS : new ::EdbShowAlg_GS;
   }
   static void *newArray_EdbShowAlg_GS(Long_t nElements, void *p) {
      return p ? new(p) ::EdbShowAlg_GS[nElements] : new ::EdbShowAlg_GS[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbShowAlg_GS(void *p) {
      delete ((::EdbShowAlg_GS*)p);
   }
   static void deleteArray_EdbShowAlg_GS(void *p) {
      delete [] ((::EdbShowAlg_GS*)p);
   }
   static void destruct_EdbShowAlg_GS(void *p) {
      typedef ::EdbShowAlg_GS current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbShowAlg_GS(TBuffer &buf, void *obj) {
      ((::EdbShowAlg_GS*)obj)->::EdbShowAlg_GS::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbShowAlg_GS

//______________________________________________________________________________
void EdbShowAlgE::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbShowAlgE.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      eShowAlgEParaName.Streamer(R__b);
      R__b >> eShowAlgEParaNr;
      R__b >> eShowAlgEPlatesN;
      R__b >> eShowAlgEPlateBinning;
      R__b >> eRecoShowerArray;
      R__b >> eRecoShowerArrayN;
      R__b >> eMLPArray;
      R__b >> eMLPArrayN;
      R__b >> eDoANNTrain;
      R__b >> eDoANNRun;
      //R__b.ReadArray(eInANN);
      R__b >> eOutANN;
      //R__b.ReadArray(eInfoANN);
      int R__i;
      for (R__i = 0; R__i < 70; R__i++)
         R__b >> eInANN_Hist[R__i];
      R__b >> eMLP_Simple;
      R__b >> eMLP_SimpleIsDone;
      R__b >> eMLP_SimpleTree;
      eMLP_Layout.Streamer(R__b);
      R__b >> eMLP_LayoutArray;
      R__b >> eMLP_LayoutArrayIsDone;
      R__b >> eMLP_WriteWeightFile;
      eMLP_WeightFileName.Streamer(R__b);
      for (R__i = 0; R__i < 10; R__i++)
         eMLP_WeightFileNameArray[R__i].Streamer(R__b);
      R__b >> eMLP_TrainEpochs;
      R__b >> eMLP_InputNeurons;
      R__b >> eMLP_InputNeuronsArray;
      R__b >> eMLP_InputNeuronsArrayN;
      eMLP_InputFileName.Streamer(R__b);
      R__b >> eMLP_WriteMLPInputFile;
      R__b >> eMLP_ReadMLPInputFile;
      R__b.CheckByteCount(R__s, R__c, EdbShowAlgE::IsA());
   } else {
      R__c = R__b.WriteVersion(EdbShowAlgE::IsA(), kTRUE);
      TObject::Streamer(R__b);
      eShowAlgEParaName.Streamer(R__b);
      R__b << eShowAlgEParaNr;
      R__b << eShowAlgEPlatesN;
      R__b << eShowAlgEPlateBinning;
      R__b << eRecoShowerArray;
      R__b << eRecoShowerArrayN;
      R__b << eMLPArray;
      R__b << eMLPArrayN;
      R__b << eDoANNTrain;
      R__b << eDoANNRun;
      //R__b.WriteArray(eInANN, __COUNTER__);
      R__b << eOutANN;
      //R__b.WriteArray(eInfoANN, __COUNTER__);
      int R__i;
      for (R__i = 0; R__i < 70; R__i++)
         R__b << (TObject*)eInANN_Hist[R__i];
      R__b << eMLP_Simple;
      R__b << eMLP_SimpleIsDone;
      R__b << eMLP_SimpleTree;
      eMLP_Layout.Streamer(R__b);
      R__b << eMLP_LayoutArray;
      R__b << eMLP_LayoutArrayIsDone;
      R__b << eMLP_WriteWeightFile;
      eMLP_WeightFileName.Streamer(R__b);
      for (R__i = 0; R__i < 10; R__i++)
         eMLP_WeightFileNameArray[R__i].Streamer(R__b);
      R__b << eMLP_TrainEpochs;
      R__b << eMLP_InputNeurons;
      R__b << eMLP_InputNeuronsArray;
      R__b << eMLP_InputNeuronsArrayN;
      eMLP_InputFileName.Streamer(R__b);
      R__b << eMLP_WriteMLPInputFile;
      R__b << eMLP_ReadMLPInputFile;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbShowAlgE::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbShowAlgE.
      TClass *R__cl = ::EdbShowAlgE::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eShowAlgEParaName", &eShowAlgEParaName);
      R__insp.InspectMember(eShowAlgEParaName, "eShowAlgEParaName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eShowAlgEParaNr", &eShowAlgEParaNr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eShowAlgEPlatesN", &eShowAlgEPlatesN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eShowAlgEPlateBinning", &eShowAlgEPlateBinning);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eRecoShowerArray", &eRecoShowerArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eRecoShowerArrayN", &eRecoShowerArrayN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eMLPArray", &eMLPArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eMLPArrayN", &eMLPArrayN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eDoANNTrain", &eDoANNTrain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eDoANNRun", &eDoANNRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eInANN", &eInANN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eOutANN", &eOutANN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eInfoANN", &eInfoANN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eInANN_Hist[70]", &eInANN_Hist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eMLP_Simple", &eMLP_Simple);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eMLP_SimpleIsDone", &eMLP_SimpleIsDone);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eMLP_SimpleTree", &eMLP_SimpleTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eMLP_Layout", &eMLP_Layout);
      R__insp.InspectMember(eMLP_Layout, "eMLP_Layout.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eMLP_LayoutArray", &eMLP_LayoutArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eMLP_LayoutArrayIsDone", &eMLP_LayoutArrayIsDone);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eMLP_WriteWeightFile", &eMLP_WriteWeightFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eMLP_WeightFileName", &eMLP_WeightFileName);
      R__insp.InspectMember(eMLP_WeightFileName, "eMLP_WeightFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eMLP_WeightFileNameArray[10]", eMLP_WeightFileNameArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eMLP_TrainEpochs", &eMLP_TrainEpochs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eMLP_InputNeurons", &eMLP_InputNeurons);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eMLP_InputNeuronsArray", &eMLP_InputNeuronsArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eMLP_InputNeuronsArrayN", &eMLP_InputNeuronsArrayN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eMLP_InputFileName", &eMLP_InputFileName);
      R__insp.InspectMember(eMLP_InputFileName, "eMLP_InputFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eMLP_WriteMLPInputFile", &eMLP_WriteMLPInputFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eMLP_ReadMLPInputFile", &eMLP_ReadMLPInputFile);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbShowAlgE(void *p) {
      return  p ? new(p) ::EdbShowAlgE : new ::EdbShowAlgE;
   }
   static void *newArray_EdbShowAlgE(Long_t nElements, void *p) {
      return p ? new(p) ::EdbShowAlgE[nElements] : new ::EdbShowAlgE[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbShowAlgE(void *p) {
      delete ((::EdbShowAlgE*)p);
   }
   static void deleteArray_EdbShowAlgE(void *p) {
      delete [] ((::EdbShowAlgE*)p);
   }
   static void destruct_EdbShowAlgE(void *p) {
      typedef ::EdbShowAlgE current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbShowAlgE(TBuffer &buf, void *obj) {
      ((::EdbShowAlgE*)obj)->::EdbShowAlgE::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbShowAlgE

//______________________________________________________________________________
void EdbShowAlgE_Simple::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbShowAlgE_Simple.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> eRecoShowerArray;
      R__b >> eRecoShowerArrayN;
      R__b >> eParaName;
      R__b >> eCalibrationOffset;
      R__b >> eCalibrationSlope;
      R__b >> ePlateNumberType;
      R__b >> ePlateNumber;
      eWeightFileString.Streamer(R__b);
      R__b.ReadStaticArray((int*)eSpecificationType);
      int R__i;
      for (R__i = 0; R__i < 6; R__i++)
         eSpecificationTypeString[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 36; R__i++)
         eSpecificationTypeStringArray[0][R__i].Streamer(R__b);
      R__b >> eSpecificationIsChanged;
      R__b.ReadStaticArray((int*)ePlateBinning);
      R__b >> ANN_MLP;
      for (R__i = 0; R__i < 15; R__i++)
         R__b >> ANN_MLP_ARRAY[R__i];
      R__b >> ANNTree;
      R__b.ReadStaticArray((double*)inANN);
      R__b >> outANN;
      R__b.ReadStaticArray((int*)ANN_nPlates_ARRAY);
      R__b.ReadStaticArray((int*)ANN_n_InputNeurons_ARRAY);
      R__b >> ANN_n_InputNeurons;
      ANN_Layout.Streamer(R__b);
      for (R__i = 0; R__i < 15; R__i++)
         ANN_WeightFile_ARRAY[R__i].Streamer(R__b);
      R__b.ReadStaticArray((float*)eANN_MLP_CORR_0);
      R__b.ReadStaticArray((float*)eANN_MLP_CORR_1);
      R__b >> eParaShowerAxisAngle;
      R__b >> eParanseg;
      R__b >> eParaBT_deltaR_mean;
      R__b >> eParaBT_deltaR_rms;
      R__b >> eParaBT_deltaT_mean;
      R__b >> eParaBT_deltaT_rms;
      R__b.ReadStaticArray((int*)eParalongprofile);
      R__b >> eHisto_nbtk_av;
      R__b >> eHisto_longprofile_av;
      R__b >> eHisto_transprofile_av;
      R__b >> eHisto_deltaR_mean;
      R__b >> eHisto_deltaT_mean;
      R__b >> eHisto_deltaR_rms;
      R__b >> eHisto_deltaT_rms;
      R__b >> eHisto_nbtk;
      R__b >> eHisto_longprofile;
      R__b >> eHisto_transprofile;
      R__b >> eHisto_deltaR;
      R__b >> eHisto_deltaT;
      R__b >> EffFunc_all;
      R__b >> EffFunc_edefault;
      R__b >> EffFunc_elletroni;
      R__b >> EffFunc_neuchmicro;
      R__b >> EffFunc_MiddleFix;
      R__b >> EffFunc_LowEff;
      R__b >> EffFunc_UserEfficiency;
      R__b >> eEfficiencyParametrisation;
      R__b >> eEnergyArray;
      R__b >> eEnergyArrayUnCorrected;
      R__b >> eEnergyArraySigmaCorrected;
      R__b >> eEnergy;
      R__b >> eEnergyCorr;
      R__b >> eEnergyUnCorr;
      R__b >> eEnergySigmaCorr;
      R__b >> eEnergyArrayCount;
      R__b >> eSplineArray_Energy_Stat_Electron;
      R__b >> eSplineArray_Energy_Stat_Gamma;
      R__b >> eSplineArray_Energy_Sys_Electron;
      R__b >> eSplineArray_Energy_Sys_Gamma;
      R__b >> eSplineCurrent;
      R__b.CheckByteCount(R__s, R__c, EdbShowAlgE_Simple::IsA());
   } else {
      R__c = R__b.WriteVersion(EdbShowAlgE_Simple::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << eRecoShowerArray;
      R__b << eRecoShowerArrayN;
      R__b << eParaName;
      R__b << eCalibrationOffset;
      R__b << eCalibrationSlope;
      R__b << ePlateNumberType;
      R__b << ePlateNumber;
      eWeightFileString.Streamer(R__b);
      R__b.WriteArray(eSpecificationType, 6);
      int R__i;
      for (R__i = 0; R__i < 6; R__i++)
         eSpecificationTypeString[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 36; R__i++)
         eSpecificationTypeStringArray[0][R__i].Streamer(R__b);
      R__b << eSpecificationIsChanged;
      R__b.WriteArray(ePlateBinning, 15);
      R__b << ANN_MLP;
      for (R__i = 0; R__i < 15; R__i++)
         R__b << ANN_MLP_ARRAY[R__i];
      R__b << ANNTree;
      R__b.WriteArray(inANN, 70);
      R__b << outANN;
      R__b.WriteArray(ANN_nPlates_ARRAY, 15);
      R__b.WriteArray(ANN_n_InputNeurons_ARRAY, 15);
      R__b << ANN_n_InputNeurons;
      ANN_Layout.Streamer(R__b);
      for (R__i = 0; R__i < 15; R__i++)
         ANN_WeightFile_ARRAY[R__i].Streamer(R__b);
      R__b.WriteArray(eANN_MLP_CORR_0, 15);
      R__b.WriteArray(eANN_MLP_CORR_1, 15);
      R__b << eParaShowerAxisAngle;
      R__b << eParanseg;
      R__b << eParaBT_deltaR_mean;
      R__b << eParaBT_deltaR_rms;
      R__b << eParaBT_deltaT_mean;
      R__b << eParaBT_deltaT_rms;
      R__b.WriteArray(eParalongprofile, 57);
      R__b << (TObject*)eHisto_nbtk_av;
      R__b << (TObject*)eHisto_longprofile_av;
      R__b << (TObject*)eHisto_transprofile_av;
      R__b << (TObject*)eHisto_deltaR_mean;
      R__b << (TObject*)eHisto_deltaT_mean;
      R__b << (TObject*)eHisto_deltaR_rms;
      R__b << (TObject*)eHisto_deltaT_rms;
      R__b << (TObject*)eHisto_nbtk;
      R__b << (TObject*)eHisto_longprofile;
      R__b << (TObject*)eHisto_transprofile;
      R__b << (TObject*)eHisto_deltaR;
      R__b << (TObject*)eHisto_deltaT;
      R__b << EffFunc_all;
      R__b << EffFunc_edefault;
      R__b << EffFunc_elletroni;
      R__b << EffFunc_neuchmicro;
      R__b << EffFunc_MiddleFix;
      R__b << EffFunc_LowEff;
      R__b << EffFunc_UserEfficiency;
      R__b << eEfficiencyParametrisation;
      R__b << eEnergyArray;
      R__b << eEnergyArrayUnCorrected;
      R__b << eEnergyArraySigmaCorrected;
      R__b << eEnergy;
      R__b << eEnergyCorr;
      R__b << eEnergyUnCorr;
      R__b << eEnergySigmaCorr;
      R__b << eEnergyArrayCount;
      R__b << eSplineArray_Energy_Stat_Electron;
      R__b << eSplineArray_Energy_Stat_Gamma;
      R__b << eSplineArray_Energy_Sys_Electron;
      R__b << eSplineArray_Energy_Sys_Gamma;
      R__b << eSplineCurrent;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbShowAlgE_Simple::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbShowAlgE_Simple.
      TClass *R__cl = ::EdbShowAlgE_Simple::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eRecoShowerArray", &eRecoShowerArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eRecoShowerArrayN", &eRecoShowerArrayN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eParaName", &eParaName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCalibrationOffset", &eCalibrationOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCalibrationSlope", &eCalibrationSlope);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePlateNumberType", &ePlateNumberType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePlateNumber", &ePlateNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eWeightFileString", &eWeightFileString);
      R__insp.InspectMember(eWeightFileString, "eWeightFileString.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eSpecificationType[6]", eSpecificationType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eSpecificationTypeString[6]", eSpecificationTypeString);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eSpecificationTypeStringArray[6][6]", eSpecificationTypeStringArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eSpecificationIsChanged", &eSpecificationIsChanged);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePlateBinning[15]", ePlateBinning);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ANN_MLP", &ANN_MLP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ANN_MLP_ARRAY[15]", &ANN_MLP_ARRAY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ANNTree", &ANNTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inANN[70]", inANN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outANN", &outANN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ANN_nPlates_ARRAY[15]", ANN_nPlates_ARRAY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ANN_n_InputNeurons_ARRAY[15]", ANN_n_InputNeurons_ARRAY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ANN_n_InputNeurons", &ANN_n_InputNeurons);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ANN_Layout", &ANN_Layout);
      R__insp.InspectMember(ANN_Layout, "ANN_Layout.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ANN_WeightFile_ARRAY[15]", ANN_WeightFile_ARRAY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_MLP_CORR_0[15]", eANN_MLP_CORR_0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_MLP_CORR_1[15]", eANN_MLP_CORR_1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eParaShowerAxisAngle", &eParaShowerAxisAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eParanseg", &eParanseg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eParaBT_deltaR_mean", &eParaBT_deltaR_mean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eParaBT_deltaR_rms", &eParaBT_deltaR_rms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eParaBT_deltaT_mean", &eParaBT_deltaT_mean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eParaBT_deltaT_rms", &eParaBT_deltaT_rms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eParalongprofile[57]", eParalongprofile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eHisto_nbtk_av", &eHisto_nbtk_av);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eHisto_longprofile_av", &eHisto_longprofile_av);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eHisto_transprofile_av", &eHisto_transprofile_av);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eHisto_deltaR_mean", &eHisto_deltaR_mean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eHisto_deltaT_mean", &eHisto_deltaT_mean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eHisto_deltaR_rms", &eHisto_deltaR_rms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eHisto_deltaT_rms", &eHisto_deltaT_rms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eHisto_nbtk", &eHisto_nbtk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eHisto_longprofile", &eHisto_longprofile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eHisto_transprofile", &eHisto_transprofile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eHisto_deltaR", &eHisto_deltaR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eHisto_deltaT", &eHisto_deltaT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EffFunc_all", &EffFunc_all);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EffFunc_edefault", &EffFunc_edefault);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EffFunc_elletroni", &EffFunc_elletroni);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EffFunc_neuchmicro", &EffFunc_neuchmicro);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EffFunc_MiddleFix", &EffFunc_MiddleFix);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EffFunc_LowEff", &EffFunc_LowEff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EffFunc_UserEfficiency", &EffFunc_UserEfficiency);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eEfficiencyParametrisation", &eEfficiencyParametrisation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eEnergyArray", &eEnergyArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eEnergyArrayUnCorrected", &eEnergyArrayUnCorrected);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eEnergyArraySigmaCorrected", &eEnergyArraySigmaCorrected);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eEnergy", &eEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eEnergyCorr", &eEnergyCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eEnergyUnCorr", &eEnergyUnCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eEnergySigmaCorr", &eEnergySigmaCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eEnergyArrayCount", &eEnergyArrayCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eSplineArray_Energy_Stat_Electron", &eSplineArray_Energy_Stat_Electron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eSplineArray_Energy_Stat_Gamma", &eSplineArray_Energy_Stat_Gamma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eSplineArray_Energy_Sys_Electron", &eSplineArray_Energy_Sys_Electron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eSplineArray_Energy_Sys_Gamma", &eSplineArray_Energy_Sys_Gamma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eSplineCurrent", &eSplineCurrent);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbShowAlgE_Simple(void *p) {
      return  p ? new(p) ::EdbShowAlgE_Simple : new ::EdbShowAlgE_Simple;
   }
   static void *newArray_EdbShowAlgE_Simple(Long_t nElements, void *p) {
      return p ? new(p) ::EdbShowAlgE_Simple[nElements] : new ::EdbShowAlgE_Simple[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbShowAlgE_Simple(void *p) {
      delete ((::EdbShowAlgE_Simple*)p);
   }
   static void deleteArray_EdbShowAlgE_Simple(void *p) {
      delete [] ((::EdbShowAlgE_Simple*)p);
   }
   static void destruct_EdbShowAlgE_Simple(void *p) {
      typedef ::EdbShowAlgE_Simple current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbShowAlgE_Simple(TBuffer &buf, void *obj) {
      ((::EdbShowAlgE_Simple*)obj)->::EdbShowAlgE_Simple::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbShowAlgE_Simple

//______________________________________________________________________________
void EdbShowAlgID_E_G_Simple::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbShowAlgID_E_G_Simple.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> eRecoShowerArray;
      R__b >> eRecoShowerArrayN;
      R__b >> eParaName;
      R__b >> eCalibrationOffset;
      R__b >> eCalibrationSlope;
      eWeightFileString.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, EdbShowAlgID_E_G_Simple::IsA());
   } else {
      R__c = R__b.WriteVersion(EdbShowAlgID_E_G_Simple::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << eRecoShowerArray;
      R__b << eRecoShowerArrayN;
      R__b << eParaName;
      R__b << eCalibrationOffset;
      R__b << eCalibrationSlope;
      eWeightFileString.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbShowAlgID_E_G_Simple::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbShowAlgID_E_G_Simple.
      TClass *R__cl = ::EdbShowAlgID_E_G_Simple::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eRecoShowerArray", &eRecoShowerArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eRecoShowerArrayN", &eRecoShowerArrayN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eParaName", &eParaName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCalibrationOffset", &eCalibrationOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCalibrationSlope", &eCalibrationSlope);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eWeightFileString", &eWeightFileString);
      R__insp.InspectMember(eWeightFileString, "eWeightFileString.");
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbShowAlgID_E_G_Simple(void *p) {
      return  p ? new(p) ::EdbShowAlgID_E_G_Simple : new ::EdbShowAlgID_E_G_Simple;
   }
   static void *newArray_EdbShowAlgID_E_G_Simple(Long_t nElements, void *p) {
      return p ? new(p) ::EdbShowAlgID_E_G_Simple[nElements] : new ::EdbShowAlgID_E_G_Simple[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbShowAlgID_E_G_Simple(void *p) {
      delete ((::EdbShowAlgID_E_G_Simple*)p);
   }
   static void deleteArray_EdbShowAlgID_E_G_Simple(void *p) {
      delete [] ((::EdbShowAlgID_E_G_Simple*)p);
   }
   static void destruct_EdbShowAlgID_E_G_Simple(void *p) {
      typedef ::EdbShowAlgID_E_G_Simple current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbShowAlgID_E_G_Simple(TBuffer &buf, void *obj) {
      ((::EdbShowAlgID_E_G_Simple*)obj)->::EdbShowAlgID_E_G_Simple::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbShowAlgID_E_G_Simple

//______________________________________________________________________________
void EdbShowAlgClean::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbShowAlgClean.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> eSource;
      R__b >> eSourceClassType;
      R__b >> eDirt;
      R__b >> eDirtClassType;
      R__b >> eTarget;
      R__b >> eTargetClassType;
      R__b >> eCleaningType;
      R__b.ReadStaticArray((bool*)eIsSet);
      R__b.CheckByteCount(R__s, R__c, EdbShowAlgClean::IsA());
   } else {
      R__c = R__b.WriteVersion(EdbShowAlgClean::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << eSource;
      R__b << eSourceClassType;
      R__b << eDirt;
      R__b << eDirtClassType;
      R__b << eTarget;
      R__b << eTargetClassType;
      R__b << eCleaningType;
      R__b.WriteArray(eIsSet, 3);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbShowAlgClean::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbShowAlgClean.
      TClass *R__cl = ::EdbShowAlgClean::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eSource", &eSource);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eSourceClassType", &eSourceClassType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eDirt", &eDirt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eDirtClassType", &eDirtClassType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eTarget", &eTarget);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eTargetClassType", &eTargetClassType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eCleaningType", &eCleaningType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eIsSet[3]", eIsSet);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbShowAlgClean(void *p) {
      return  p ? new(p) ::EdbShowAlgClean : new ::EdbShowAlgClean;
   }
   static void *newArray_EdbShowAlgClean(Long_t nElements, void *p) {
      return p ? new(p) ::EdbShowAlgClean[nElements] : new ::EdbShowAlgClean[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbShowAlgClean(void *p) {
      delete ((::EdbShowAlgClean*)p);
   }
   static void deleteArray_EdbShowAlgClean(void *p) {
      delete [] ((::EdbShowAlgClean*)p);
   }
   static void destruct_EdbShowAlgClean(void *p) {
      typedef ::EdbShowAlgClean current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbShowAlgClean(TBuffer &buf, void *obj) {
      ((::EdbShowAlgClean*)obj)->::EdbShowAlgClean::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbShowAlgClean

//______________________________________________________________________________
void EdbShowPVRQuality::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbShowPVRQuality.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> eAli_orig;
      R__b >> eAli_modified;
      R__b >> eNeedModified;
      R__b >> eIsSource;
      R__b >> eIsTarget;
      R__b >> eHistGeometry;
      R__b >> eAli_maxNpatterns;
      R__b >> eCutMethod;
      R__b >> eBTDensityLevel;
      R__b.ReadStaticArray((bool*)eCutMethodIsDone);
      R__b >> eBTDensityLevelCalcMethodMC;
      R__b >> eBTDensityLevelCalcMethodMCConfirmationNumber;
      R__b.ReadStaticArray((float*)ePatternBTDensity_orig);
      R__b.ReadStaticArray((float*)ePatternBTDensity_modified);
      R__b >> eHistChi2W;
      R__b >> eHistYX;
      R__b >> NbinsX;
      R__b >> NbinsY;
      R__b >> minX;
      R__b >> maxX;
      R__b >> minY;
      R__b >> maxY;
      R__b >> eProfileBTdens_vs_PID_source;
      R__b >> eProfileBTdens_vs_PID_source_meanX;
      R__b >> eProfileBTdens_vs_PID_source_meanY;
      R__b >> eProfileBTdens_vs_PID_source_rmsX;
      R__b >> eProfileBTdens_vs_PID_source_rmsY;
      R__b >> eProfileBTdens_vs_PID_target;
      R__b >> eProfileBTdens_vs_PID_target_meanX;
      R__b >> eProfileBTdens_vs_PID_target_meanY;
      R__b >> eProfileBTdens_vs_PID_target_rmsX;
      R__b >> eProfileBTdens_vs_PID_target_rmsY;
      R__b.ReadStaticArray((float*)eCutp0);
      R__b.ReadStaticArray((float*)eCutp1);
      R__b.ReadStaticArray((float*)eCutDistChi2);
      R__b.ReadStaticArray((float*)eCutDistW);
      R__b.ReadStaticArray((float*)eAgreementChi2WDistCut);
      R__b >> eAgreementChi2CutMeanChi2;
      R__b >> eAgreementChi2CutRMSChi2;
      R__b >> eAgreementChi2CutMeanW;
      R__b >> eAgreementChi2CutRMSW;
      R__b.CheckByteCount(R__s, R__c, EdbShowPVRQuality::IsA());
   } else {
      R__c = R__b.WriteVersion(EdbShowPVRQuality::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << eAli_orig;
      R__b << eAli_modified;
      R__b << eNeedModified;
      R__b << eIsSource;
      R__b << eIsTarget;
      R__b << eHistGeometry;
      R__b << eAli_maxNpatterns;
      R__b << eCutMethod;
      R__b << eBTDensityLevel;
      R__b.WriteArray(eCutMethodIsDone, 2);
      R__b << eBTDensityLevelCalcMethodMC;
      R__b << eBTDensityLevelCalcMethodMCConfirmationNumber;
      R__b.WriteArray(ePatternBTDensity_orig, 114);
      R__b.WriteArray(ePatternBTDensity_modified, 114);
      R__b << (TObject*)eHistChi2W;
      R__b << (TObject*)eHistYX;
      R__b << NbinsX;
      R__b << NbinsY;
      R__b << minX;
      R__b << maxX;
      R__b << minY;
      R__b << maxY;
      R__b << (TObject*)eProfileBTdens_vs_PID_source;
      R__b << eProfileBTdens_vs_PID_source_meanX;
      R__b << eProfileBTdens_vs_PID_source_meanY;
      R__b << eProfileBTdens_vs_PID_source_rmsX;
      R__b << eProfileBTdens_vs_PID_source_rmsY;
      R__b << (TObject*)eProfileBTdens_vs_PID_target;
      R__b << eProfileBTdens_vs_PID_target_meanX;
      R__b << eProfileBTdens_vs_PID_target_meanY;
      R__b << eProfileBTdens_vs_PID_target_rmsX;
      R__b << eProfileBTdens_vs_PID_target_rmsY;
      R__b.WriteArray(eCutp0, 114);
      R__b.WriteArray(eCutp1, 114);
      R__b.WriteArray(eCutDistChi2, 114);
      R__b.WriteArray(eCutDistW, 114);
      R__b.WriteArray(eAgreementChi2WDistCut, 114);
      R__b << eAgreementChi2CutMeanChi2;
      R__b << eAgreementChi2CutRMSChi2;
      R__b << eAgreementChi2CutMeanW;
      R__b << eAgreementChi2CutRMSW;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbShowPVRQuality::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbShowPVRQuality.
      TClass *R__cl = ::EdbShowPVRQuality::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eAli_orig", &eAli_orig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eAli_modified", &eAli_modified);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eNeedModified", &eNeedModified);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eIsSource", &eIsSource);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eIsTarget", &eIsTarget);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eHistGeometry", &eHistGeometry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAli_maxNpatterns", &eAli_maxNpatterns);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCutMethod", &eCutMethod);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eBTDensityLevel", &eBTDensityLevel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCutMethodIsDone[2]", eCutMethodIsDone);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eBTDensityLevelCalcMethodMC", &eBTDensityLevelCalcMethodMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eBTDensityLevelCalcMethodMCConfirmationNumber", &eBTDensityLevelCalcMethodMCConfirmationNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePatternBTDensity_orig[114]", ePatternBTDensity_orig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePatternBTDensity_modified[114]", ePatternBTDensity_modified);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eHistChi2W", &eHistChi2W);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eHistYX", &eHistYX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NbinsX", &NbinsX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NbinsY", &NbinsY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "minX", &minX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxX", &maxX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "minY", &minY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxY", &maxY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eProfileBTdens_vs_PID_source", &eProfileBTdens_vs_PID_source);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eProfileBTdens_vs_PID_source_meanX", &eProfileBTdens_vs_PID_source_meanX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eProfileBTdens_vs_PID_source_meanY", &eProfileBTdens_vs_PID_source_meanY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eProfileBTdens_vs_PID_source_rmsX", &eProfileBTdens_vs_PID_source_rmsX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eProfileBTdens_vs_PID_source_rmsY", &eProfileBTdens_vs_PID_source_rmsY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eProfileBTdens_vs_PID_target", &eProfileBTdens_vs_PID_target);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eProfileBTdens_vs_PID_target_meanX", &eProfileBTdens_vs_PID_target_meanX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eProfileBTdens_vs_PID_target_meanY", &eProfileBTdens_vs_PID_target_meanY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eProfileBTdens_vs_PID_target_rmsX", &eProfileBTdens_vs_PID_target_rmsX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eProfileBTdens_vs_PID_target_rmsY", &eProfileBTdens_vs_PID_target_rmsY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCutp0[114]", eCutp0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCutp1[114]", eCutp1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCutDistChi2[114]", eCutDistChi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCutDistW[114]", eCutDistW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAgreementChi2WDistCut[114]", eAgreementChi2WDistCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAgreementChi2CutMeanChi2", &eAgreementChi2CutMeanChi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAgreementChi2CutRMSChi2", &eAgreementChi2CutRMSChi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAgreementChi2CutMeanW", &eAgreementChi2CutMeanW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAgreementChi2CutRMSW", &eAgreementChi2CutRMSW);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbShowPVRQuality(void *p) {
      return  p ? new(p) ::EdbShowPVRQuality : new ::EdbShowPVRQuality;
   }
   static void *newArray_EdbShowPVRQuality(Long_t nElements, void *p) {
      return p ? new(p) ::EdbShowPVRQuality[nElements] : new ::EdbShowPVRQuality[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbShowPVRQuality(void *p) {
      delete ((::EdbShowPVRQuality*)p);
   }
   static void deleteArray_EdbShowPVRQuality(void *p) {
      delete [] ((::EdbShowPVRQuality*)p);
   }
   static void destruct_EdbShowPVRQuality(void *p) {
      typedef ::EdbShowPVRQuality current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbShowPVRQuality(TBuffer &buf, void *obj) {
      ((::EdbShowPVRQuality*)obj)->::EdbShowPVRQuality::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbShowPVRQuality

/********************************************************
* ShowRecCint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableShowRecCint();

extern "C" void G__set_cpp_environmentShowRecCint() {
  G__cpp_reset_tagtableShowRecCint();
}
#include <new>
extern "C" int G__cpp_dllrevShowRecCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* EdbShowerP */
static int G__ShowRecCint_857_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerP* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerP((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) EdbShowerP((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new EdbShowerP[n];
       } else {
         p = new((void*) gvp) EdbShowerP[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new EdbShowerP;
       } else {
         p = new((void*) gvp) EdbShowerP;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerP));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerP* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerP(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) EdbShowerP(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerP(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) EdbShowerP(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerP));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->Set0();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->Set0Parametrizations();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowerP*) G__getstructoffset())->TrackAS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowerP*) G__getstructoffset())->VTAS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->SetCounters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->SetN0((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->SetN0();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerP*) G__getstructoffset())->N0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->SetNpl((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->SetNpl();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerP*) G__getstructoffset())->Npl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerP*) G__getstructoffset())->N());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->SetN00((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->SetN00();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerP*) G__getstructoffset())->N00());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowerP*) G__getstructoffset())->GetSegmentArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowerP*) G__getstructoffset())->GetSegmentFirst());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowerP*) G__getstructoffset())->GetSegmentLast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowerP*) G__getstructoffset())->GetSegment((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbShowerP*) G__getstructoffset())->GetSegmentFirstZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbShowerP*) G__getstructoffset())->GetSegmentLastZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbShowerP*) G__getstructoffset())->GetFirstZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbShowerP*) G__getstructoffset())->GetLastZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->SetPDG((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerP*) G__getstructoffset())->PDG());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerP*) G__getstructoffset())->GetPDG());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->SetM((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbShowerP*) G__getstructoffset())->M());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerP*) G__getstructoffset())->GetM());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowerP*) G__getstructoffset())->GetSegmentGravity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbShowerP*) G__getstructoffset())->GetSegmentAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->AddSegment((EdbSegP*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->AddSegmentAndUpdate((EdbSegP*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((EdbShowerP*) G__getstructoffset())->RemoveSegment((EdbSegP*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((EdbShowerP*) G__getstructoffset())->RemoveSegment((EdbSegP*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->SetSegmentArray((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->Sort();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((EdbShowerP*) G__getstructoffset())->IsSorted());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->ClearAll();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->ClearProfileLongitudinalHisto();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->ClearProfileTransversalHisto();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerP*) G__getstructoffset())->GetNBT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerP*) G__getstructoffset())->GetNBTMC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerP*) G__getstructoffset())->GetNBTMCFlag((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerP*) G__getstructoffset())->GetNBTPlate((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerP*) G__getstructoffset())->GetNBTMCPlate((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerP*) G__getstructoffset())->GetNBTMCFlagPlate((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbShowerP*) G__getstructoffset())->GetPurity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbShowerP*) G__getstructoffset())->GetSphericity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowerP*) G__getstructoffset())->GetProfileLongitudinal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowerP*) G__getstructoffset())->GetProfileTransversal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowerP*) G__getstructoffset())->GetProfileLongitudinalPlate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const EdbShowerP*) G__getstructoffset())->GetParametrisationIsDone((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbShowerP*) G__getstructoffset())->GetParaVariable((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const EdbShowerP::Para_FJ* pobj;
         const EdbShowerP::Para_FJ xobj = ((const EdbShowerP*) G__getstructoffset())->GetPara_FJ();
         pobj = new EdbShowerP::Para_FJ(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const EdbShowerP::Para_LT* pobj;
         const EdbShowerP::Para_LT xobj = ((const EdbShowerP*) G__getstructoffset())->GetPara_LT();
         pobj = new EdbShowerP::Para_LT(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const EdbShowerP::Para_YC* pobj;
         const EdbShowerP::Para_YC xobj = ((const EdbShowerP*) G__getstructoffset())->GetPara_YC();
         pobj = new EdbShowerP::Para_YC(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const EdbShowerP::Para_JC* pobj;
         const EdbShowerP::Para_JC xobj = ((const EdbShowerP*) G__getstructoffset())->GetPara_JC();
         pobj = new EdbShowerP::Para_JC(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const EdbShowerP::Para_XX* pobj;
         const EdbShowerP::Para_XX xobj = ((const EdbShowerP*) G__getstructoffset())->GetPara_XX();
         pobj = new EdbShowerP::Para_XX(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const EdbShowerP::Para_YY* pobj;
         const EdbShowerP::Para_YY xobj = ((const EdbShowerP*) G__getstructoffset())->GetPara_YY();
         pobj = new EdbShowerP::Para_YY(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const EdbShowerP::Para_PP* pobj;
         const EdbShowerP::Para_PP xobj = ((const EdbShowerP*) G__getstructoffset())->GetPara_PP();
         pobj = new EdbShowerP::Para_PP(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const EdbShowerP::Para_AS* pobj;
         const EdbShowerP::Para_AS xobj = ((const EdbShowerP*) G__getstructoffset())->GetPara_AS();
         pobj = new EdbShowerP::Para_AS(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const EdbShowerP::Para_SE* pobj;
         const EdbShowerP::Para_SE xobj = ((const EdbShowerP*) G__getstructoffset())->GetPara_SE();
         pobj = new EdbShowerP::Para_SE(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const EdbShowerP::Para_ExtraInfo* pobj;
         const EdbShowerP::Para_ExtraInfo xobj = ((const EdbShowerP*) G__getstructoffset())->GetPara_ExtraInfo();
         pobj = new EdbShowerP::Para_ExtraInfo(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->SetParaVariable((Float_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const EdbShowerP*) G__getstructoffset())->GetMCInfoIsDone((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const EdbShowerP*) G__getstructoffset())->GetExtraInfoIsDone((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const EdbShowerP::MCInfo_PGun* pobj;
         const EdbShowerP::MCInfo_PGun xobj = ((const EdbShowerP*) G__getstructoffset())->GetMCInfo_PGun();
         pobj = new EdbShowerP::MCInfo_PGun(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const EdbShowerP::MCInfo_Event* pobj;
         const EdbShowerP::MCInfo_Event xobj = ((const EdbShowerP*) G__getstructoffset())->GetMCInfo_Event();
         pobj = new EdbShowerP::MCInfo_Event(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->SetMCInfoIsDone((Int_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->SetExtraInfoIsDone((Int_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->SetMCInfo_PGun(*((EdbShowerP::MCInfo_PGun*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->SetMCInfo_Event(*((EdbShowerP::MCInfo_Event*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->SetAlgName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->SetAlgValue((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->SetAlgParaValue((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->SetAlgParaString((Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->BuildNplN0();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->BuildNMC();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->BuildProfiles();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->BuildPlateProfile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->BuildShowerAxis();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->BuildParametrisation((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->BuildParametrisation_FJ();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->BuildParametrisation_LT();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->BuildParametrisation_YC();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->BuildParametrisation_JC();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->BuildParametrisation_XX();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->BuildParametrisation_YY();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->BuildParametrisation_PP();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->BuildParametrisation_AS();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->BuildParametrisation_SE();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->BuildParametrisation_ExtraInfo();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->CalcPurity();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->CalcSphericity();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->CalcShowerAngularDeviationDistribution();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbShowerP*) G__getstructoffset())->CalcOpenAngle((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbShowerP*) G__getstructoffset())->CalcOpenAngleSimple());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((EdbShowerP*) G__getstructoffset())->CalcIP((EdbSegP*) G__int(libp->para[0]), (EdbVertex*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((EdbShowerP*) G__getstructoffset())->CalcIP((EdbSegP*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((EdbShowerP*) G__getstructoffset())->CalcDistLongitudinal((EdbSegP*) G__int(libp->para[0]), (EdbSegP*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((EdbShowerP*) G__getstructoffset())->CalcDistTransversal((EdbSegP*) G__int(libp->para[0]), (EdbSegP*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->Update();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->UpdateX();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((EdbShowerP*) G__getstructoffset())->MergeFromShower((EdbShowerP*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((EdbShowerP*) G__getstructoffset())->MergeFromShower((EdbShowerP*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->MergeFromShowerByAddress((EdbShowerP*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->MergeFromShowerByPosition((EdbShowerP*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->AddShower((EdbShowerP*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->Finalize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_118(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->PrintNice();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_119(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->PrintBasics();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_120(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->PrintMetaData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_121(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->PrintSegments();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_122(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((EdbShowerP*) G__getstructoffset())->PrintParametrisation((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((EdbShowerP*) G__getstructoffset())->PrintParametrisation();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_123(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->PrintParametrisation_FJ();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_124(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->PrintParametrisation_LT();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_125(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->PrintParametrisation_YC();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_126(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->PrintParametrisation_JC();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_127(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->PrintParametrisation_XX();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_128(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->PrintParametrisation_YY();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_129(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->PrintParametrisation_PP();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_130(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->PrintParametrisation_AS();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_131(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->PrintParametrisation_SE();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_132(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->PrintParametrisation_ExtraInfo();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_133(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->PrintMCInfo_PGun();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_134(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->PrintAll();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_135(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->Help();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_136(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbShowerP::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_137(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_138(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbShowerP::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_139(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbShowerP::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_143(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_144(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_145(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerP::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_146(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_857_0_147(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerP::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowRecCint_857_0_148(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbShowerP* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbShowerP(*(EdbShowerP*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerP));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbShowerP G__TEdbShowerP;
static int G__ShowRecCint_857_0_149(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbShowerP*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbShowerP*) (soff+(sizeof(EdbShowerP)*i)))->~G__TEdbShowerP();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbShowerP*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbShowerP*) (soff))->~G__TEdbShowerP();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowRecCint_857_0_150(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerP* dest = (EdbShowerP*) G__getstructoffset();
   *dest = *(EdbShowerP*) libp->para[0].ref;
   const EdbShowerP& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbShowerP::Para_FJ */
static int G__ShowRecCint_858_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbShowerP::Para_FJ::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_858_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Para_FJ::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_858_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbShowerP::Para_FJ::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_858_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbShowerP::Para_FJ::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_858_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowerP::Para_FJ*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_858_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Para_FJ*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_858_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Para_FJ*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_858_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Para_FJ*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_858_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Para_FJ::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_858_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerP::Para_FJ::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_858_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Para_FJ::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_858_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerP::Para_FJ::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__ShowRecCint_858_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerP::Para_FJ *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerP::Para_FJ[n];
     } else {
       p = new((void*) gvp) EdbShowerP::Para_FJ[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerP::Para_FJ;
     } else {
       p = new((void*) gvp) EdbShowerP::Para_FJ;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_FJ));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowRecCint_858_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbShowerP::Para_FJ* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbShowerP::Para_FJ(*(EdbShowerP::Para_FJ*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_FJ));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbShowerP::Para_FJ G__TEdbShowerPcLcLPara_FJ;
static int G__ShowRecCint_858_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbShowerP::Para_FJ*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbShowerP::Para_FJ*) (soff+(sizeof(EdbShowerP::Para_FJ)*i)))->~G__TEdbShowerPcLcLPara_FJ();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbShowerP::Para_FJ*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbShowerP::Para_FJ*) (soff))->~G__TEdbShowerPcLcLPara_FJ();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowRecCint_858_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerP::Para_FJ* dest = (EdbShowerP::Para_FJ*) G__getstructoffset();
   *dest = *(EdbShowerP::Para_FJ*) libp->para[0].ref;
   const EdbShowerP::Para_FJ& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbShowerP::Para_LT */
static int G__ShowRecCint_859_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbShowerP::Para_LT::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_859_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Para_LT::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_859_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbShowerP::Para_LT::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_859_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbShowerP::Para_LT::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_859_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowerP::Para_LT*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_859_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Para_LT*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_859_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Para_LT*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_859_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Para_LT*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_859_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Para_LT::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_859_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerP::Para_LT::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_859_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Para_LT::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_859_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerP::Para_LT::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__ShowRecCint_859_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerP::Para_LT *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerP::Para_LT[n];
     } else {
       p = new((void*) gvp) EdbShowerP::Para_LT[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerP::Para_LT;
     } else {
       p = new((void*) gvp) EdbShowerP::Para_LT;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_LT));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowRecCint_859_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbShowerP::Para_LT* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbShowerP::Para_LT(*(EdbShowerP::Para_LT*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_LT));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbShowerP::Para_LT G__TEdbShowerPcLcLPara_LT;
static int G__ShowRecCint_859_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbShowerP::Para_LT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbShowerP::Para_LT*) (soff+(sizeof(EdbShowerP::Para_LT)*i)))->~G__TEdbShowerPcLcLPara_LT();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbShowerP::Para_LT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbShowerP::Para_LT*) (soff))->~G__TEdbShowerPcLcLPara_LT();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowRecCint_859_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerP::Para_LT* dest = (EdbShowerP::Para_LT*) G__getstructoffset();
   *dest = *(EdbShowerP::Para_LT*) libp->para[0].ref;
   const EdbShowerP::Para_LT& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbShowerP::Para_YC */
static int G__ShowRecCint_860_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbShowerP::Para_YC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_860_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Para_YC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_860_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbShowerP::Para_YC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_860_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbShowerP::Para_YC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_860_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowerP::Para_YC*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_860_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Para_YC*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_860_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Para_YC*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_860_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Para_YC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_860_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Para_YC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_860_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerP::Para_YC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_860_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Para_YC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_860_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerP::Para_YC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__ShowRecCint_860_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerP::Para_YC *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerP::Para_YC[n];
     } else {
       p = new((void*) gvp) EdbShowerP::Para_YC[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerP::Para_YC;
     } else {
       p = new((void*) gvp) EdbShowerP::Para_YC;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_YC));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowRecCint_860_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbShowerP::Para_YC* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbShowerP::Para_YC(*(EdbShowerP::Para_YC*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_YC));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbShowerP::Para_YC G__TEdbShowerPcLcLPara_YC;
static int G__ShowRecCint_860_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbShowerP::Para_YC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbShowerP::Para_YC*) (soff+(sizeof(EdbShowerP::Para_YC)*i)))->~G__TEdbShowerPcLcLPara_YC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbShowerP::Para_YC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbShowerP::Para_YC*) (soff))->~G__TEdbShowerPcLcLPara_YC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowRecCint_860_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerP::Para_YC* dest = (EdbShowerP::Para_YC*) G__getstructoffset();
   *dest = *(EdbShowerP::Para_YC*) libp->para[0].ref;
   const EdbShowerP::Para_YC& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbShowerP::Para_JC */
static int G__ShowRecCint_861_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbShowerP::Para_JC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_861_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Para_JC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_861_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbShowerP::Para_JC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_861_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbShowerP::Para_JC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_861_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowerP::Para_JC*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_861_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Para_JC*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_861_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Para_JC*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_861_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Para_JC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_861_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Para_JC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_861_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerP::Para_JC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_861_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Para_JC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_861_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerP::Para_JC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__ShowRecCint_861_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerP::Para_JC *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerP::Para_JC[n];
     } else {
       p = new((void*) gvp) EdbShowerP::Para_JC[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerP::Para_JC;
     } else {
       p = new((void*) gvp) EdbShowerP::Para_JC;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_JC));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowRecCint_861_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbShowerP::Para_JC* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbShowerP::Para_JC(*(EdbShowerP::Para_JC*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_JC));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbShowerP::Para_JC G__TEdbShowerPcLcLPara_JC;
static int G__ShowRecCint_861_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbShowerP::Para_JC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbShowerP::Para_JC*) (soff+(sizeof(EdbShowerP::Para_JC)*i)))->~G__TEdbShowerPcLcLPara_JC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbShowerP::Para_JC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbShowerP::Para_JC*) (soff))->~G__TEdbShowerPcLcLPara_JC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowRecCint_861_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerP::Para_JC* dest = (EdbShowerP::Para_JC*) G__getstructoffset();
   *dest = *(EdbShowerP::Para_JC*) libp->para[0].ref;
   const EdbShowerP::Para_JC& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbShowerP::Para_XX */
static int G__ShowRecCint_862_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbShowerP::Para_XX::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_862_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Para_XX::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_862_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbShowerP::Para_XX::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_862_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbShowerP::Para_XX::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_862_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowerP::Para_XX*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_862_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Para_XX*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_862_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Para_XX*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_862_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Para_XX*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_862_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Para_XX::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_862_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerP::Para_XX::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_862_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Para_XX::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_862_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerP::Para_XX::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__ShowRecCint_862_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerP::Para_XX *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerP::Para_XX[n];
     } else {
       p = new((void*) gvp) EdbShowerP::Para_XX[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerP::Para_XX;
     } else {
       p = new((void*) gvp) EdbShowerP::Para_XX;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_XX));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowRecCint_862_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbShowerP::Para_XX* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbShowerP::Para_XX(*(EdbShowerP::Para_XX*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_XX));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbShowerP::Para_XX G__TEdbShowerPcLcLPara_XX;
static int G__ShowRecCint_862_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbShowerP::Para_XX*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbShowerP::Para_XX*) (soff+(sizeof(EdbShowerP::Para_XX)*i)))->~G__TEdbShowerPcLcLPara_XX();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbShowerP::Para_XX*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbShowerP::Para_XX*) (soff))->~G__TEdbShowerPcLcLPara_XX();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowRecCint_862_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerP::Para_XX* dest = (EdbShowerP::Para_XX*) G__getstructoffset();
   *dest = *(EdbShowerP::Para_XX*) libp->para[0].ref;
   const EdbShowerP::Para_XX& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbShowerP::Para_YY */
static int G__ShowRecCint_863_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbShowerP::Para_YY::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_863_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Para_YY::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_863_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbShowerP::Para_YY::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_863_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbShowerP::Para_YY::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_863_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowerP::Para_YY*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_863_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Para_YY*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_863_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Para_YY*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_863_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Para_YY*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_863_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Para_YY::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_863_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerP::Para_YY::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_863_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Para_YY::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_863_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerP::Para_YY::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__ShowRecCint_863_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerP::Para_YY *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerP::Para_YY[n];
     } else {
       p = new((void*) gvp) EdbShowerP::Para_YY[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerP::Para_YY;
     } else {
       p = new((void*) gvp) EdbShowerP::Para_YY;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_YY));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowRecCint_863_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbShowerP::Para_YY* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbShowerP::Para_YY(*(EdbShowerP::Para_YY*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_YY));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbShowerP::Para_YY G__TEdbShowerPcLcLPara_YY;
static int G__ShowRecCint_863_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbShowerP::Para_YY*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbShowerP::Para_YY*) (soff+(sizeof(EdbShowerP::Para_YY)*i)))->~G__TEdbShowerPcLcLPara_YY();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbShowerP::Para_YY*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbShowerP::Para_YY*) (soff))->~G__TEdbShowerPcLcLPara_YY();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowRecCint_863_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerP::Para_YY* dest = (EdbShowerP::Para_YY*) G__getstructoffset();
   *dest = *(EdbShowerP::Para_YY*) libp->para[0].ref;
   const EdbShowerP::Para_YY& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbShowerP::Para_PP */
static int G__ShowRecCint_864_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbShowerP::Para_PP::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_864_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Para_PP::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_864_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbShowerP::Para_PP::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_864_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbShowerP::Para_PP::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_864_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowerP::Para_PP*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_864_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Para_PP*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_864_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Para_PP*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_864_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Para_PP*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_864_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Para_PP::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_864_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerP::Para_PP::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_864_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Para_PP::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_864_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerP::Para_PP::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__ShowRecCint_864_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerP::Para_PP *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerP::Para_PP[n];
     } else {
       p = new((void*) gvp) EdbShowerP::Para_PP[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerP::Para_PP;
     } else {
       p = new((void*) gvp) EdbShowerP::Para_PP;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_PP));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowRecCint_864_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbShowerP::Para_PP* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbShowerP::Para_PP(*(EdbShowerP::Para_PP*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_PP));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbShowerP::Para_PP G__TEdbShowerPcLcLPara_PP;
static int G__ShowRecCint_864_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbShowerP::Para_PP*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbShowerP::Para_PP*) (soff+(sizeof(EdbShowerP::Para_PP)*i)))->~G__TEdbShowerPcLcLPara_PP();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbShowerP::Para_PP*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbShowerP::Para_PP*) (soff))->~G__TEdbShowerPcLcLPara_PP();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowRecCint_864_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerP::Para_PP* dest = (EdbShowerP::Para_PP*) G__getstructoffset();
   *dest = *(EdbShowerP::Para_PP*) libp->para[0].ref;
   const EdbShowerP::Para_PP& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbShowerP::Para_AS */
static int G__ShowRecCint_865_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbShowerP::Para_AS::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_865_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Para_AS::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_865_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbShowerP::Para_AS::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_865_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbShowerP::Para_AS::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_865_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowerP::Para_AS*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_865_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Para_AS*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_865_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Para_AS*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_865_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Para_AS*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_865_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Para_AS::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_865_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerP::Para_AS::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_865_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Para_AS::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_865_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerP::Para_AS::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__ShowRecCint_865_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerP::Para_AS *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerP::Para_AS[n];
     } else {
       p = new((void*) gvp) EdbShowerP::Para_AS[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerP::Para_AS;
     } else {
       p = new((void*) gvp) EdbShowerP::Para_AS;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_AS));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowRecCint_865_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbShowerP::Para_AS* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbShowerP::Para_AS(*(EdbShowerP::Para_AS*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_AS));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbShowerP::Para_AS G__TEdbShowerPcLcLPara_AS;
static int G__ShowRecCint_865_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbShowerP::Para_AS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbShowerP::Para_AS*) (soff+(sizeof(EdbShowerP::Para_AS)*i)))->~G__TEdbShowerPcLcLPara_AS();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbShowerP::Para_AS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbShowerP::Para_AS*) (soff))->~G__TEdbShowerPcLcLPara_AS();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowRecCint_865_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerP::Para_AS* dest = (EdbShowerP::Para_AS*) G__getstructoffset();
   *dest = *(EdbShowerP::Para_AS*) libp->para[0].ref;
   const EdbShowerP::Para_AS& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbShowerP::Para_SE */
static int G__ShowRecCint_866_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbShowerP::Para_SE::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_866_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Para_SE::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_866_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbShowerP::Para_SE::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_866_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbShowerP::Para_SE::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_866_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowerP::Para_SE*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_866_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Para_SE*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_866_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Para_SE*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_866_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Para_SE*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_866_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Para_SE::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_866_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerP::Para_SE::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_866_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Para_SE::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_866_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerP::Para_SE::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__ShowRecCint_866_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerP::Para_SE *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerP::Para_SE[n];
     } else {
       p = new((void*) gvp) EdbShowerP::Para_SE[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerP::Para_SE;
     } else {
       p = new((void*) gvp) EdbShowerP::Para_SE;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_SE));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowRecCint_866_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbShowerP::Para_SE* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbShowerP::Para_SE(*(EdbShowerP::Para_SE*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_SE));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbShowerP::Para_SE G__TEdbShowerPcLcLPara_SE;
static int G__ShowRecCint_866_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbShowerP::Para_SE*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbShowerP::Para_SE*) (soff+(sizeof(EdbShowerP::Para_SE)*i)))->~G__TEdbShowerPcLcLPara_SE();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbShowerP::Para_SE*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbShowerP::Para_SE*) (soff))->~G__TEdbShowerPcLcLPara_SE();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowRecCint_866_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerP::Para_SE* dest = (EdbShowerP::Para_SE*) G__getstructoffset();
   *dest = *(EdbShowerP::Para_SE*) libp->para[0].ref;
   const EdbShowerP::Para_SE& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbShowerP::Para_ExtraInfo */
static int G__ShowRecCint_867_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbShowerP::Para_ExtraInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_867_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Para_ExtraInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_867_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbShowerP::Para_ExtraInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_867_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbShowerP::Para_ExtraInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_867_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowerP::Para_ExtraInfo*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_867_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Para_ExtraInfo*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_867_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Para_ExtraInfo*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_867_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Para_ExtraInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_867_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Para_ExtraInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_867_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerP::Para_ExtraInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_867_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Para_ExtraInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_867_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerP::Para_ExtraInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__ShowRecCint_867_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerP::Para_ExtraInfo *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerP::Para_ExtraInfo[n];
     } else {
       p = new((void*) gvp) EdbShowerP::Para_ExtraInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerP::Para_ExtraInfo;
     } else {
       p = new((void*) gvp) EdbShowerP::Para_ExtraInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_ExtraInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowRecCint_867_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbShowerP::Para_ExtraInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbShowerP::Para_ExtraInfo(*(EdbShowerP::Para_ExtraInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_ExtraInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbShowerP::Para_ExtraInfo G__TEdbShowerPcLcLPara_ExtraInfo;
static int G__ShowRecCint_867_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbShowerP::Para_ExtraInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbShowerP::Para_ExtraInfo*) (soff+(sizeof(EdbShowerP::Para_ExtraInfo)*i)))->~G__TEdbShowerPcLcLPara_ExtraInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbShowerP::Para_ExtraInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbShowerP::Para_ExtraInfo*) (soff))->~G__TEdbShowerPcLcLPara_ExtraInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowRecCint_867_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerP::Para_ExtraInfo* dest = (EdbShowerP::Para_ExtraInfo*) G__getstructoffset();
   *dest = *(EdbShowerP::Para_ExtraInfo*) libp->para[0].ref;
   const EdbShowerP::Para_ExtraInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbShowerP::MCInfo_PGun */
static int G__ShowRecCint_868_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbShowerP::MCInfo_PGun::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_868_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::MCInfo_PGun::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_868_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbShowerP::MCInfo_PGun::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_868_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbShowerP::MCInfo_PGun::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_868_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowerP::MCInfo_PGun*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_868_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::MCInfo_PGun*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_868_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::MCInfo_PGun*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_868_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::MCInfo_PGun*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_868_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::MCInfo_PGun::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_868_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerP::MCInfo_PGun::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_868_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::MCInfo_PGun::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_868_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerP::MCInfo_PGun::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__ShowRecCint_868_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerP::MCInfo_PGun *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerP::MCInfo_PGun[n];
     } else {
       p = new((void*) gvp) EdbShowerP::MCInfo_PGun[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerP::MCInfo_PGun;
     } else {
       p = new((void*) gvp) EdbShowerP::MCInfo_PGun;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLMCInfo_PGun));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowRecCint_868_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbShowerP::MCInfo_PGun* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbShowerP::MCInfo_PGun(*(EdbShowerP::MCInfo_PGun*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLMCInfo_PGun));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbShowerP::MCInfo_PGun G__TEdbShowerPcLcLMCInfo_PGun;
static int G__ShowRecCint_868_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbShowerP::MCInfo_PGun*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbShowerP::MCInfo_PGun*) (soff+(sizeof(EdbShowerP::MCInfo_PGun)*i)))->~G__TEdbShowerPcLcLMCInfo_PGun();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbShowerP::MCInfo_PGun*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbShowerP::MCInfo_PGun*) (soff))->~G__TEdbShowerPcLcLMCInfo_PGun();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowRecCint_868_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerP::MCInfo_PGun* dest = (EdbShowerP::MCInfo_PGun*) G__getstructoffset();
   *dest = *(EdbShowerP::MCInfo_PGun*) libp->para[0].ref;
   const EdbShowerP::MCInfo_PGun& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbShowerP::MCInfo_Event */
static int G__ShowRecCint_869_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbShowerP::MCInfo_Event::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_869_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::MCInfo_Event::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_869_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbShowerP::MCInfo_Event::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_869_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbShowerP::MCInfo_Event::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_869_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowerP::MCInfo_Event*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_869_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::MCInfo_Event*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_869_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::MCInfo_Event*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_869_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::MCInfo_Event*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_869_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::MCInfo_Event::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_869_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerP::MCInfo_Event::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_869_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::MCInfo_Event::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_869_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerP::MCInfo_Event::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__ShowRecCint_869_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerP::MCInfo_Event *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerP::MCInfo_Event[n];
     } else {
       p = new((void*) gvp) EdbShowerP::MCInfo_Event[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerP::MCInfo_Event;
     } else {
       p = new((void*) gvp) EdbShowerP::MCInfo_Event;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLMCInfo_Event));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowRecCint_869_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbShowerP::MCInfo_Event* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbShowerP::MCInfo_Event(*(EdbShowerP::MCInfo_Event*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLMCInfo_Event));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbShowerP::MCInfo_Event G__TEdbShowerPcLcLMCInfo_Event;
static int G__ShowRecCint_869_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbShowerP::MCInfo_Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbShowerP::MCInfo_Event*) (soff+(sizeof(EdbShowerP::MCInfo_Event)*i)))->~G__TEdbShowerPcLcLMCInfo_Event();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbShowerP::MCInfo_Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbShowerP::MCInfo_Event*) (soff))->~G__TEdbShowerPcLcLMCInfo_Event();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowRecCint_869_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerP::MCInfo_Event* dest = (EdbShowerP::MCInfo_Event*) G__getstructoffset();
   *dest = *(EdbShowerP::MCInfo_Event*) libp->para[0].ref;
   const EdbShowerP::MCInfo_Event& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbShowerP::Reco_ID */
static int G__ShowRecCint_870_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbShowerP::Reco_ID::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_870_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Reco_ID::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_870_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbShowerP::Reco_ID::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_870_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbShowerP::Reco_ID::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_870_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowerP::Reco_ID*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_870_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Reco_ID*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_870_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Reco_ID*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_870_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Reco_ID*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_870_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Reco_ID::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_870_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerP::Reco_ID::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_870_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Reco_ID::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_870_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerP::Reco_ID::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__ShowRecCint_870_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerP::Reco_ID *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerP::Reco_ID[n];
     } else {
       p = new((void*) gvp) EdbShowerP::Reco_ID[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerP::Reco_ID;
     } else {
       p = new((void*) gvp) EdbShowerP::Reco_ID;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLReco_ID));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowRecCint_870_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbShowerP::Reco_ID* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbShowerP::Reco_ID(*(EdbShowerP::Reco_ID*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLReco_ID));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbShowerP::Reco_ID G__TEdbShowerPcLcLReco_ID;
static int G__ShowRecCint_870_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbShowerP::Reco_ID*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbShowerP::Reco_ID*) (soff+(sizeof(EdbShowerP::Reco_ID)*i)))->~G__TEdbShowerPcLcLReco_ID();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbShowerP::Reco_ID*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbShowerP::Reco_ID*) (soff))->~G__TEdbShowerPcLcLReco_ID();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowRecCint_870_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerP::Reco_ID* dest = (EdbShowerP::Reco_ID*) G__getstructoffset();
   *dest = *(EdbShowerP::Reco_ID*) libp->para[0].ref;
   const EdbShowerP::Reco_ID& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbShowerP::Reco_E */
static int G__ShowRecCint_871_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbShowerP::Reco_E::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_871_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Reco_E::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_871_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbShowerP::Reco_E::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_871_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbShowerP::Reco_E::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_871_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowerP::Reco_E*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_871_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Reco_E*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_871_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Reco_E*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_871_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Reco_E*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_871_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Reco_E::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_871_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerP::Reco_E::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_871_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Reco_E::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_871_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerP::Reco_E::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__ShowRecCint_871_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerP::Reco_E *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerP::Reco_E[n];
     } else {
       p = new((void*) gvp) EdbShowerP::Reco_E[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerP::Reco_E;
     } else {
       p = new((void*) gvp) EdbShowerP::Reco_E;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLReco_E));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowRecCint_871_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbShowerP::Reco_E* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbShowerP::Reco_E(*(EdbShowerP::Reco_E*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLReco_E));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbShowerP::Reco_E G__TEdbShowerPcLcLReco_E;
static int G__ShowRecCint_871_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbShowerP::Reco_E*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbShowerP::Reco_E*) (soff+(sizeof(EdbShowerP::Reco_E)*i)))->~G__TEdbShowerPcLcLReco_E();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbShowerP::Reco_E*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbShowerP::Reco_E*) (soff))->~G__TEdbShowerPcLcLReco_E();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowRecCint_871_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerP::Reco_E* dest = (EdbShowerP::Reco_E*) G__getstructoffset();
   *dest = *(EdbShowerP::Reco_E*) libp->para[0].ref;
   const EdbShowerP::Reco_E& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbShowerP::Reco_Vtx */
static int G__ShowRecCint_872_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbShowerP::Reco_Vtx::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_872_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Reco_Vtx::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_872_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbShowerP::Reco_Vtx::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_872_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbShowerP::Reco_Vtx::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_872_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowerP::Reco_Vtx*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_872_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Reco_Vtx*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_872_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Reco_Vtx*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_872_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerP::Reco_Vtx*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_872_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Reco_Vtx::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_872_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerP::Reco_Vtx::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_872_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerP::Reco_Vtx::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_872_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerP::Reco_Vtx::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__ShowRecCint_872_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerP::Reco_Vtx *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerP::Reco_Vtx[n];
     } else {
       p = new((void*) gvp) EdbShowerP::Reco_Vtx[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerP::Reco_Vtx;
     } else {
       p = new((void*) gvp) EdbShowerP::Reco_Vtx;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLReco_Vtx));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowRecCint_872_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbShowerP::Reco_Vtx* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbShowerP::Reco_Vtx(*(EdbShowerP::Reco_Vtx*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLReco_Vtx));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbShowerP::Reco_Vtx G__TEdbShowerPcLcLReco_Vtx;
static int G__ShowRecCint_872_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbShowerP::Reco_Vtx*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbShowerP::Reco_Vtx*) (soff+(sizeof(EdbShowerP::Reco_Vtx)*i)))->~G__TEdbShowerPcLcLReco_Vtx();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbShowerP::Reco_Vtx*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbShowerP::Reco_Vtx*) (soff))->~G__TEdbShowerPcLcLReco_Vtx();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowRecCint_872_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerP::Reco_Vtx* dest = (EdbShowerP::Reco_Vtx*) G__getstructoffset();
   *dest = *(EdbShowerP::Reco_Vtx*) libp->para[0].ref;
   const EdbShowerP::Reco_Vtx& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbShowAlg */
static int G__ShowRecCint_873_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowAlg* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowAlg[n];
     } else {
       p = new((void*) gvp) EdbShowAlg[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowAlg;
     } else {
       p = new((void*) gvp) EdbShowAlg;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowAlg* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbShowAlg(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) EdbShowAlg(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg*) G__getstructoffset())->SetEdbPVRec((EdbPVRec*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg*) G__getstructoffset())->SetInBTArray((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg*) G__getstructoffset())->SetEdbPVRecPIDNumbers((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg*) G__getstructoffset())->SetRecoShowerArray((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg*) G__getstructoffset())->SetRecoShowerArrayN((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg*) G__getstructoffset())->AddRecoShowerArray((EdbShowerP*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg*) G__getstructoffset())->SetActualAlgParameterset((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowAlg*) G__getstructoffset())->GetAlgValue());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const EdbShowAlg*) G__getstructoffset())->GetAlgName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowAlg*) G__getstructoffset())->GetRecoShowerArrayN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowAlg*) G__getstructoffset())->GetRecoShowerArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowAlg*) G__getstructoffset())->GetShower((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg*) G__getstructoffset())->SetUseAliSub((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((EdbShowAlg*) G__getstructoffset())->DeltaR_WithPropagation((EdbSegP*) G__int(libp->para[0]), (EdbSegP*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((EdbShowAlg*) G__getstructoffset())->DeltaR_WithoutPropagation((EdbSegP*) G__int(libp->para[0]), (EdbSegP*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((EdbShowAlg*) G__getstructoffset())->DeltaR_NoPropagation((EdbSegP*) G__int(libp->para[0]), (EdbSegP*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((EdbShowAlg*) G__getstructoffset())->DeltaTheta((EdbSegP*) G__int(libp->para[0]), (EdbSegP*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((EdbShowAlg*) G__getstructoffset())->DeltaThetaComponentwise((EdbSegP*) G__int(libp->para[0]), (EdbSegP*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((EdbShowAlg*) G__getstructoffset())->DeltaThetaSingleAngles((EdbSegP*) G__int(libp->para[0]), (EdbSegP*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((EdbShowAlg*) G__getstructoffset())->GetSpatialDist((EdbSegP*) G__int(libp->para[0]), (EdbSegP*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((EdbShowAlg*) G__getstructoffset())->GetMinimumDist((EdbSegP*) G__int(libp->para[0]), (EdbSegP*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg*) G__getstructoffset())->SetParameters((Float_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg*) G__getstructoffset())->Transform_eAli((EdbSegP*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((EdbShowAlg*) G__getstructoffset())->IsInConeTube((EdbSegP*) G__int(libp->para[0]), (EdbSegP*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg*) G__getstructoffset())->UpdateShowerIDs();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg*) G__getstructoffset())->UpdateShowerMetaData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg*) G__getstructoffset())->PrintParameters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg*) G__getstructoffset())->PrintParametersShort();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg*) G__getstructoffset())->PrintMore();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg*) G__getstructoffset())->PrintAll();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg*) G__getstructoffset())->Help();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg*) G__getstructoffset())->Execute();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg*) G__getstructoffset())->Finalize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbShowAlg::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowAlg::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbShowAlg::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbShowAlg::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowAlg::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowAlg::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowAlg::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_873_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowAlg::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowRecCint_873_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbShowAlg* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbShowAlg(*(EdbShowAlg*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbShowAlg G__TEdbShowAlg;
static int G__ShowRecCint_873_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbShowAlg*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbShowAlg*) (soff+(sizeof(EdbShowAlg)*i)))->~G__TEdbShowAlg();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbShowAlg*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbShowAlg*) (soff))->~G__TEdbShowAlg();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowRecCint_873_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowAlg* dest = (EdbShowAlg*) G__getstructoffset();
   *dest = *(EdbShowAlg*) libp->para[0].ref;
   const EdbShowAlg& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbShowAlg_SA */
static int G__ShowRecCint_874_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowAlg_SA* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowAlg_SA[n];
     } else {
       p = new((void*) gvp) EdbShowAlg_SA[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowAlg_SA;
     } else {
       p = new((void*) gvp) EdbShowAlg_SA;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_SA));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_874_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg_SA*) G__getstructoffset())->Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_874_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbShowAlg_SA::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_874_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowAlg_SA::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_874_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbShowAlg_SA::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_874_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbShowAlg_SA::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_874_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg_SA*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_874_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowAlg_SA::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_874_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowAlg_SA::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_874_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowAlg_SA::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_874_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowAlg_SA::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowRecCint_874_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbShowAlg_SA* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbShowAlg_SA(*(EdbShowAlg_SA*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_SA));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbShowAlg_SA G__TEdbShowAlg_SA;
static int G__ShowRecCint_874_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbShowAlg_SA*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbShowAlg_SA*) (soff+(sizeof(EdbShowAlg_SA)*i)))->~G__TEdbShowAlg_SA();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbShowAlg_SA*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbShowAlg_SA*) (soff))->~G__TEdbShowAlg_SA();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowRecCint_874_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowAlg_SA* dest = (EdbShowAlg_SA*) G__getstructoffset();
   *dest = *(EdbShowAlg_SA*) libp->para[0].ref;
   const EdbShowAlg_SA& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbShowAlg_CA */
static int G__ShowRecCint_875_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowAlg_CA* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowAlg_CA[n];
     } else {
       p = new((void*) gvp) EdbShowAlg_CA[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowAlg_CA;
     } else {
       p = new((void*) gvp) EdbShowAlg_CA;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_CA));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_875_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbShowAlg_CA::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_875_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowAlg_CA::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_875_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbShowAlg_CA::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_875_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbShowAlg_CA::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_875_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg_CA*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_875_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowAlg_CA::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_875_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowAlg_CA::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_875_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowAlg_CA::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_875_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowAlg_CA::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowRecCint_875_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbShowAlg_CA* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbShowAlg_CA(*(EdbShowAlg_CA*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_CA));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbShowAlg_CA G__TEdbShowAlg_CA;
static int G__ShowRecCint_875_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbShowAlg_CA*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbShowAlg_CA*) (soff+(sizeof(EdbShowAlg_CA)*i)))->~G__TEdbShowAlg_CA();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbShowAlg_CA*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbShowAlg_CA*) (soff))->~G__TEdbShowAlg_CA();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowRecCint_875_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowAlg_CA* dest = (EdbShowAlg_CA*) G__getstructoffset();
   *dest = *(EdbShowAlg_CA*) libp->para[0].ref;
   const EdbShowAlg_CA& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbShowAlg_OI */
static int G__ShowRecCint_876_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowAlg_OI* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowAlg_OI[n];
     } else {
       p = new((void*) gvp) EdbShowAlg_OI[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowAlg_OI;
     } else {
       p = new((void*) gvp) EdbShowAlg_OI;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_OI));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_876_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbShowAlg_OI::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_876_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowAlg_OI::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_876_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbShowAlg_OI::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_876_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbShowAlg_OI::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_876_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg_OI*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_876_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowAlg_OI::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_876_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowAlg_OI::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_876_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowAlg_OI::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_876_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowAlg_OI::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowRecCint_876_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbShowAlg_OI* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbShowAlg_OI(*(EdbShowAlg_OI*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_OI));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbShowAlg_OI G__TEdbShowAlg_OI;
static int G__ShowRecCint_876_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbShowAlg_OI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbShowAlg_OI*) (soff+(sizeof(EdbShowAlg_OI)*i)))->~G__TEdbShowAlg_OI();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbShowAlg_OI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbShowAlg_OI*) (soff))->~G__TEdbShowAlg_OI();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowRecCint_876_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowAlg_OI* dest = (EdbShowAlg_OI*) G__getstructoffset();
   *dest = *(EdbShowAlg_OI*) libp->para[0].ref;
   const EdbShowAlg_OI& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbShowAlg_RC */
static int G__ShowRecCint_877_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowAlg_RC* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowAlg_RC[n];
     } else {
       p = new((void*) gvp) EdbShowAlg_RC[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowAlg_RC;
     } else {
       p = new((void*) gvp) EdbShowAlg_RC;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_RC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_877_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((EdbShowAlg_RC*) G__getstructoffset())->GetConeOrTubeDistanceToBTOfShowerArray((EdbSegP*) G__int(libp->para[0]), (EdbSegP*) G__int(libp->para[1])
, (EdbShowerP*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_877_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbShowAlg_RC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_877_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowAlg_RC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_877_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbShowAlg_RC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_877_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbShowAlg_RC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_877_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg_RC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_877_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowAlg_RC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_877_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowAlg_RC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_877_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowAlg_RC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_877_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowAlg_RC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowRecCint_877_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbShowAlg_RC* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbShowAlg_RC(*(EdbShowAlg_RC*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_RC));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbShowAlg_RC G__TEdbShowAlg_RC;
static int G__ShowRecCint_877_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbShowAlg_RC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbShowAlg_RC*) (soff+(sizeof(EdbShowAlg_RC)*i)))->~G__TEdbShowAlg_RC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbShowAlg_RC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbShowAlg_RC*) (soff))->~G__TEdbShowAlg_RC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowRecCint_877_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowAlg_RC* dest = (EdbShowAlg_RC*) G__getstructoffset();
   *dest = *(EdbShowAlg_RC*) libp->para[0].ref;
   const EdbShowAlg_RC& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbShowAlg_GS */
static int G__ShowRecCint_883_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowAlg_GS* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowAlg_GS[n];
     } else {
       p = new((void*) gvp) EdbShowAlg_GS[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowAlg_GS;
     } else {
       p = new((void*) gvp) EdbShowAlg_GS;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_GS));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_883_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowAlg_GS* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbShowAlg_GS((EdbPVRec*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) EdbShowAlg_GS((EdbPVRec*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_GS));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_883_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg_GS*) G__getstructoffset())->Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_883_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg_GS*) G__getstructoffset())->SetInVtxArray((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_883_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg_GS*) G__getstructoffset())->SetInVtx((EdbVertex*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_883_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowAlg_GS*) G__getstructoffset())->GetInVtxArrayN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_883_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowAlg_GS*) G__getstructoffset())->GetInVtxArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_883_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg_GS*) G__getstructoffset())->Convert_InVtxArray_To_InBTArray();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_883_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg_GS*) G__getstructoffset())->Convert_TracksArray_To_InBTArray();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_883_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((EdbShowAlg_GS*) G__getstructoffset())->CheckPairDuplications(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (TArrayI*) G__int(libp->para[4]), (TArrayI*) G__int(libp->para[5])
, (TArrayI*) G__int(libp->para[6]), (TArrayI*) G__int(libp->para[7])
, (int) G__int(libp->para[8])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_883_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((EdbShowAlg_GS*) G__getstructoffset())->CalcIP((EdbSegP*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_883_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((EdbShowAlg_GS*) G__getstructoffset())->CalcIP((EdbSegP*) G__int(libp->para[0]), (EdbVertex*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_883_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((EdbShowAlg_GS*) G__getstructoffset())->IsPossibleFakeDoublet((EdbSegP*) G__int(libp->para[0]), (EdbSegP*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_883_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowAlg_GS*) G__getstructoffset())->FindPairs((EdbSegP*) G__int(libp->para[0]), (EdbPVRec*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_883_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowAlg_GS*) G__getstructoffset())->CheckCleanPairs((EdbSegP*) G__int(libp->para[0]), (TObjArray*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_883_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbShowAlg_GS::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_883_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowAlg_GS::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_883_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbShowAlg_GS::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_883_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbShowAlg_GS::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_883_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg_GS*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_883_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowAlg_GS::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_883_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowAlg_GS::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_883_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowAlg_GS::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_883_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowAlg_GS::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowRecCint_883_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbShowAlg_GS* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbShowAlg_GS(*(EdbShowAlg_GS*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_GS));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbShowAlg_GS G__TEdbShowAlg_GS;
static int G__ShowRecCint_883_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbShowAlg_GS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbShowAlg_GS*) (soff+(sizeof(EdbShowAlg_GS)*i)))->~G__TEdbShowAlg_GS();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbShowAlg_GS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbShowAlg_GS*) (soff))->~G__TEdbShowAlg_GS();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowRecCint_883_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowAlg_GS* dest = (EdbShowAlg_GS*) G__getstructoffset();
   *dest = *(EdbShowAlg_GS*) libp->para[0].ref;
   const EdbShowAlg_GS& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbShowAlg_NN */
static int G__ShowRecCint_884_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowAlg_NN* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowAlg_NN[n];
     } else {
       p = new((void*) gvp) EdbShowAlg_NN[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowAlg_NN;
     } else {
       p = new((void*) gvp) EdbShowAlg_NN;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_NN));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_884_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg_NN*) G__getstructoffset())->Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_884_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg_NN*) G__getstructoffset())->CreateANNTree();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_884_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbShowAlg_NN*) G__getstructoffset())->GetNSegBeforeAndAfter((EdbPVRec*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (EdbSegP*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_884_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbShowAlg_NN*) G__getstructoffset())->GetMeansBeforeAndAfter(
*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, (EdbPVRec*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (EdbSegP*) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_884_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbShowAlg_NN*) G__getstructoffset())->GetMinsBeforeAndAfter(
*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, (EdbPVRec*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (EdbSegP*) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_884_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowAlg_NN*) G__getstructoffset())->Create_NN_ALG_MLP((TTree*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_884_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg_NN*) G__getstructoffset())->LoadANNWeights();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_884_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg_NN*) G__getstructoffset())->LoadANNWeights((TMultiLayerPerceptron*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_884_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg_NN*) G__getstructoffset())->SetANNWeightString();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_884_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg_NN*) G__getstructoffset())->SetWeightFileString(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_884_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((EdbShowAlg_NN*) G__getstructoffset())->GetWeightFileString();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_884_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbShowAlg_NN::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_884_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowAlg_NN::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_884_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbShowAlg_NN::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_884_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbShowAlg_NN::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_884_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlg_NN*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_884_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowAlg_NN::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_884_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowAlg_NN::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_884_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowAlg_NN::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_884_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowAlg_NN::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowRecCint_884_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbShowAlg_NN* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbShowAlg_NN(*(EdbShowAlg_NN*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_NN));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbShowAlg_NN G__TEdbShowAlg_NN;
static int G__ShowRecCint_884_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbShowAlg_NN*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbShowAlg_NN*) (soff+(sizeof(EdbShowAlg_NN)*i)))->~G__TEdbShowAlg_NN();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbShowAlg_NN*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbShowAlg_NN*) (soff))->~G__TEdbShowAlg_NN();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowRecCint_884_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowAlg_NN* dest = (EdbShowAlg_NN*) G__getstructoffset();
   *dest = *(EdbShowAlg_NN*) libp->para[0].ref;
   const EdbShowAlg_NN& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbShowAlgE */
static int G__ShowRecCint_885_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowAlgE* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowAlgE[n];
     } else {
       p = new((void*) gvp) EdbShowAlgE[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowAlgE;
     } else {
       p = new((void*) gvp) EdbShowAlgE;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgE));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowAlgE* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbShowAlgE(*((TString*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) EdbShowAlgE(*((TString*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgE));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowAlgE* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbShowAlgE((TObjArray*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) EdbShowAlgE((TObjArray*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgE));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowAlgE* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbShowAlgE((TObjArray*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) EdbShowAlgE((TObjArray*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgE));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->SetRecoShowerArray((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->SetMLPLayout(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->SetMLPWeightFileName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->SetMLPInputFileName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->SetMLPTrainEpochs((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->SetMLPArrayN((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->SetPlatesN((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->SetDoTrain((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->SetDoRun((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->SetInputHistosPara((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->SetInputHistosPara_FJ();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->SetInputHistosPara_YC();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->SetInputHistosPara_XX();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->SetInputHistosPara_YY();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->SetWriteMLPWeightFile((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->SetWriteMLPInputFile((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->SetReadMLPInputFile((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->ReadMLPInputFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->WriteMLPInputFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowAlgE*) G__getstructoffset())->GetMLP());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowAlgE*) G__getstructoffset())->GetHistInANN((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((EdbShowAlgE*) G__getstructoffset())->GetMLPLayout();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((EdbShowAlgE*) G__getstructoffset())->GetMLPWeightFileName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((EdbShowAlgE*) G__getstructoffset())->GetMLPInputFileName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbShowAlgE*) G__getstructoffset())->SetMLPTrainEpochs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowAlgE*) G__getstructoffset())->GetHistoCanvas());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->Execute();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->Finalize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->Create_MLP();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->Create_MLPTree();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->Fill_MLPTree();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->TESTRUN();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->SetInputHistos((TH1F*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->CreateStandardWeightFileStrings();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->CreateStandardMLPArrayN();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->PrintWeightFileStrings();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->ResetPlateBinning();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbShowAlgE*) G__getstructoffset())->CheckPlateAndPlateBinning((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->AddWeightFile(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])
, *((TString*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->CreateMLPLayouts();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->CreateMLPLayouts_FJ();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->CreateMLPLayouts_LT();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->CreateMLPLayouts_YC();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->CreateMLPLayouts_JC();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->CreateMLPLayouts_XX();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->CreateMLPLayouts_YY();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->CreateMLPLayout_YC((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->CreateMLPLayout_XX((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->CreateMLPLayout_YY((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->FillInputNeuronsArray_YC();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->FillInputNeuronsArray_XX();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->FillInputNeuronsArray_YY();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->CreateInputNeuronsArray_YC();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->CreateInputNeuronsArray_XX();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->CreateInputNeuronsArray_YY();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->CreateInputNeuronsArray();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->CreateMLPs();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->CreateMLPArray();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->LoadMLPWeights();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->LoadMLPWeights((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->SetBinsInputHistos();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->SetBinsInputHistos_YC();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->SetBinsInputHistos_XX();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->SetBinsInputHistos_FJ();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->SetBinsInputHistos_YY();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->FillMLP_SimpleTree_YC((EdbShowerP*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->FillMLP_SimpleTree_YC();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->FillMLP_SimpleTree_XX((EdbShowerP*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->FillMLP_SimpleTree_XX();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->FillMLP_SimpleTree_YY((EdbShowerP*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->FillMLP_SimpleTree_YY();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->FillMLP_SimpleTree();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->WriteMLP_SimpleTree(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->Train();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->Run();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->DumpWeights();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbShowAlgE*) G__getstructoffset())->GetMLPArrayNr((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbShowAlgE*) G__getstructoffset())->ReadShowAlgEPar((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbShowAlgE::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowAlgE::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbShowAlgE::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbShowAlgE::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowAlgE::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowAlgE::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowAlgE::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_885_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowAlgE::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowRecCint_885_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbShowAlgE* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbShowAlgE(*(EdbShowAlgE*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgE));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbShowAlgE G__TEdbShowAlgE;
static int G__ShowRecCint_885_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbShowAlgE*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbShowAlgE*) (soff+(sizeof(EdbShowAlgE)*i)))->~G__TEdbShowAlgE();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbShowAlgE*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbShowAlgE*) (soff))->~G__TEdbShowAlgE();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowRecCint_885_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowAlgE* dest = (EdbShowAlgE*) G__getstructoffset();
   *dest = *(EdbShowAlgE*) libp->para[0].ref;
   const EdbShowAlgE& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbShowRec */
static int G__ShowRecCint_886_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowRec* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowRec[n];
     } else {
       p = new((void*) gvp) EdbShowRec[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowRec;
     } else {
       p = new((void*) gvp) EdbShowRec;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowRec));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowRec* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbShowRec((EdbPVRec*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) EdbShowRec((EdbPVRec*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowRec));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowRec* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbShowRec((EdbPVRec*) G__int(libp->para[0]), (TObjArray*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) EdbShowRec((EdbPVRec*) G__int(libp->para[0]), (TObjArray*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowRec));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowRec* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbShowRec(
(EdbPVRec*) G__int(libp->para[0]), (TObjArray*) G__int(libp->para[1])
, (EdbShowAlg*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) EdbShowRec(
(EdbPVRec*) G__int(libp->para[0]), (TObjArray*) G__int(libp->para[1])
, (EdbShowAlg*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowRec));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowRec* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbShowRec(
(EdbPVRec*) G__int(libp->para[0]), (TObjArray*) G__int(libp->para[1])
, (TObjArray*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) EdbShowRec(
(EdbPVRec*) G__int(libp->para[0]), (TObjArray*) G__int(libp->para[1])
, (TObjArray*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowRec));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowRec* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbShowRec(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) EdbShowRec(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowRec));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowRec* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbShowRec(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) EdbShowRec(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowRec));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->Reconstruct();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->ReconstructTEST();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->ReconstructTESTSHORT();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->ReconstructTESTSTANDARD();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->ReconstructTEST_CA();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->ReconstructTEST_OI();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->ReconstructTEST_NN();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->ResetRecoShowerArray();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->ResetInBTArray();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->SetDoReconstruction((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->SetDoParametrisation((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->SetDoId((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->SetDoEnergy((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->SetDoVtxAttach((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->SetEdbPVRec((EdbPVRec*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->ResetINBTArray();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->SetInBTArray((EdbPVRec*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->SetInBTArray((EdbPattern*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->SetInBTArray((EdbTrackP*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->SetInBTArray((EdbSegP*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->SetInBTArray((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->SetInBTArrayFraction((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->SetInBTUseNr((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->SetShowAlgArray((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->SetRecoShowerArray((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->SetInBTArrayN((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->SetShowAlgArrayN((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->SetRecoShowerArrayN((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->SetFirstPlate((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->SetLastPlate((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->SetMiddlePlate((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->SetNumberPlate((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->SetFirstPlate_eAliPID((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->SetLastPlate_eAliPID((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->SetMiddlePlate_eAliPID((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->SetNumberPlate_eAliPID((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->SetShowName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->SetWriteFileShower((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->SetTreebranchName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->SetShowFileName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->SetWriteFileTreebranch((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->SetTreebranchFileName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->SetSimpleFileName((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->SetDoParaType((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->SetDoParaType(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->SetUseAliSub((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->AddEdbPVRec((EdbPVRec*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->AddInBTArray((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->AddInBT((EdbSegP*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->AddInBTArray((EdbSegP*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->AddInBTArray((EdbPattern*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->AddInBTArray((EdbPVRec*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->AddShowAlgArray((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->AddRecoShowerArray((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowRec*) G__getstructoffset())->GetEdbPVRec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const EdbShowRec*) G__getstructoffset())->GetEdbPVRecLoaded());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowRec*) G__getstructoffset())->GetInBTArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowRec*) G__getstructoffset())->GetShowAlgArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowRec*) G__getstructoffset())->GetRecoShowerArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowRec*) G__getstructoffset())->GetShower((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowRec*) G__getstructoffset())->GetInBTArrayN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowRec*) G__getstructoffset())->GetShowAlgArrayN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowRec*) G__getstructoffset())->GetRecoShowerArrayN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowRec*) G__getstructoffset())->GetFirstPlate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowRec*) G__getstructoffset())->GetLastPlate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowRec*) G__getstructoffset())->GetMiddlePlate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowRec*) G__getstructoffset())->GetNumberPlate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowRec*) G__getstructoffset())->GetProposedFirstPlate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowRec*) G__getstructoffset())->GetProposedLastPlate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowRec*) G__getstructoffset())->GetProposedMiddlePlate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowRec*) G__getstructoffset())->GetProposedNumberPlate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const EdbShowRec*) G__getstructoffset())->GetShowName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const EdbShowRec*) G__getstructoffset())->GetTreebranchName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowRec*) G__getstructoffset())->GetDoParaType((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->Update();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->UpdateX();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->Check_eInBTArray();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->RecoShowerArray_To_Treebranch();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->Treebranch_To_RecoShowerArray((TObjArray*) G__int(libp->para[0]), (TTree*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->TxtToRecoShowerArray();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->TxtToRecoShowerArray(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->TxtToRecoShowerArray_FeedBack(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->TxtToRecoShowerArray_SimpleList(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->TxtToRecoShowerArray_SimpleListNagoya(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_118(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->TxtToRecoShowerArray_EDAList(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_119(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->WriteParametrisation_FJ();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_120(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->WriteParametrisation_LT();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_121(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->WriteParametrisation_YC();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_122(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->WriteParametrisation_JC();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_123(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->WriteParametrisation_XX();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_124(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->WriteParametrisation_YY();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_125(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->WriteParametrisation_AS();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_126(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->WriteParametrisation_SE();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_127(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->WriteParametrisation_ExtraInfo();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_128(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->BuildParametrizationsMCInfo(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_129(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->BuildParametrizationsMCInfo_PGun(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_130(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->BuildParametrizationsMCInfo_Event(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_131(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->WriteParametrisation_MCInfo_PGun();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_132(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->ExtendParametrisation_ExtraInfo();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_133(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->WriteRecoShowerArray((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_134(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->WriteRecoShowerArrayWithoutTTree((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_135(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->CheckFilePresence();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_136(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((EdbShowRec*) G__getstructoffset())->FileExists(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_137(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbShowRec*) G__getstructoffset())->ReadShowRecPar((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_138(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_139(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->PrintMore();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_140(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->PrintAll();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_141(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((EdbShowRec*) G__getstructoffset())->PrintRecoShowerArray((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((EdbShowRec*) G__getstructoffset())->PrintRecoShowerArray();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_142(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((EdbShowRec*) G__getstructoffset())->PrintRecoShowerArrayFast((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((EdbShowRec*) G__getstructoffset())->PrintRecoShowerArrayFast();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_143(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->PrintParametrisation((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_144(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->Print_UseInBTType();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_145(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->Print_InBTCut((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_146(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->Print_InBTArray();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_147(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->Help();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_148(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbShowRec::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_149(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowRec::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_150(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbShowRec::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_151(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbShowRec::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_155(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowRec*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_156(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowRec::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_157(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowRec::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_158(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowRec::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_886_0_159(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowRec::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowRecCint_886_0_160(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbShowRec* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbShowRec(*(EdbShowRec*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowRec));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbShowRec G__TEdbShowRec;
static int G__ShowRecCint_886_0_161(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbShowRec*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbShowRec*) (soff+(sizeof(EdbShowRec)*i)))->~G__TEdbShowRec();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbShowRec*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbShowRec*) (soff))->~G__TEdbShowRec();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowRecCint_886_0_162(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowRec* dest = (EdbShowRec*) G__getstructoffset();
   *dest = *(EdbShowRec*) libp->para[0].ref;
   const EdbShowRec& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbShowAlgE_Simple */
static int G__ShowRecCint_892_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowAlgE_Simple* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowAlgE_Simple[n];
     } else {
       p = new((void*) gvp) EdbShowAlgE_Simple[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowAlgE_Simple;
     } else {
       p = new((void*) gvp) EdbShowAlgE_Simple;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgE_Simple));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowAlgE_Simple* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbShowAlgE_Simple((EdbTrackP*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) EdbShowAlgE_Simple((EdbTrackP*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgE_Simple));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowAlgE_Simple* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbShowAlgE_Simple((TObjArray*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) EdbShowAlgE_Simple((TObjArray*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgE_Simple));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE_Simple*) G__getstructoffset())->SetRecoShowerArray((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE_Simple*) G__getstructoffset())->SetRecoShowerArrayN((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowAlgE_Simple*) G__getstructoffset())->GetRecoShowerArrayN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowAlgE_Simple*) G__getstructoffset())->GetEnergyArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowAlgE_Simple*) G__getstructoffset())->GetEnergyArrayUnCorrected());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbShowAlgE_Simple*) G__getstructoffset())->GetEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbShowAlgE_Simple*) G__getstructoffset())->GetEnergy((EdbTrackP*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE_Simple*) G__getstructoffset())->GetPara((EdbTrackP*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowAlgE_Simple*) G__getstructoffset())->GetEffFunc_all());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowAlgE_Simple*) G__getstructoffset())->GetEffFunc_edefault());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowAlgE_Simple*) G__getstructoffset())->GetEffFunc_elletroni());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowAlgE_Simple*) G__getstructoffset())->GetEffFunc_neuchmicro());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowAlgE_Simple*) G__getstructoffset())->GetEffFunc_MiddleFix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowAlgE_Simple*) G__getstructoffset())->GetEffFunc_LowEff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowAlgE_Simple*) G__getstructoffset())->GetEffFunc_UserEfficiency());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((EdbShowAlgE_Simple*) G__getstructoffset())->GetNeuralNetwork((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((EdbShowAlgE_Simple*) G__getstructoffset())->GetNeuralNetwork());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((EdbShowAlgE_Simple*) G__getstructoffset())->TrainNeuralNetwork(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((EdbShowAlgE_Simple*) G__getstructoffset())->TrainNeuralNetwork(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((EdbShowAlgE_Simple*) G__getstructoffset())->DumpNeuralNetworkWeight(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((EdbShowAlgE_Simple*) G__getstructoffset())->DumpNeuralNetworkWeight(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE_Simple*) G__getstructoffset())->SetCalibrationOffset((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE_Simple*) G__getstructoffset())->SetCalibrationSlope((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE_Simple*) G__getstructoffset())->SetPlateNumberType((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE_Simple*) G__getstructoffset())->SetPlateNumber((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbShowAlgE_Simple*) G__getstructoffset())->GetSpecType((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE_Simple*) G__getstructoffset())->SetEfficiencyParametrisationValues((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE_Simple*) G__getstructoffset())->SetEfficiencyParametrisation((TSpline3*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowAlgE_Simple*) G__getstructoffset())->GetEfficiencyParametrisation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE_Simple*) G__getstructoffset())->PrintEfficiencyParametrisation();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE_Simple*) G__getstructoffset())->SetEfficiencyParametrisationAngles();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE_Simple*) G__getstructoffset())->SetWeightFileString(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE_Simple*) G__getstructoffset())->InitStrings();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbShowAlgE_Simple*) G__getstructoffset())->FindClosestEfficiencyParametrization((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE_Simple*) G__getstructoffset())->GetNplIndexNr((Int_t) G__int(libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE_Simple*) G__getstructoffset())->GetSpecifications();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE_Simple*) G__getstructoffset())->SetSpecifications((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE_Simple*) G__getstructoffset())->SetSpecificationType((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE_Simple*) G__getstructoffset())->PrintSpecifications();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE_Simple*) G__getstructoffset())->LoadSpecificationWeightFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE_Simple*) G__getstructoffset())->ReadCorrectionFactors(*((TString*) G__int(libp->para[0])), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE_Simple*) G__getstructoffset())->CreateANN();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE_Simple*) G__getstructoffset())->Update();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE_Simple*) G__getstructoffset())->DoRun();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE_Simple*) G__getstructoffset())->DoRun((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE_Simple*) G__getstructoffset())->DoRun((EdbTrackP*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE_Simple*) G__getstructoffset())->ReadTables();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE_Simple*) G__getstructoffset())->ReadTables_Energy();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE_Simple*) G__getstructoffset())->WriteNewRootFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE_Simple*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE_Simple*) G__getstructoffset())->Help();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbShowAlgE_Simple::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowAlgE_Simple::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbShowAlgE_Simple::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbShowAlgE_Simple::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgE_Simple*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowAlgE_Simple::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowAlgE_Simple::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowAlgE_Simple::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_892_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowAlgE_Simple::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowRecCint_892_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbShowAlgE_Simple* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbShowAlgE_Simple(*(EdbShowAlgE_Simple*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgE_Simple));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbShowAlgE_Simple G__TEdbShowAlgE_Simple;
static int G__ShowRecCint_892_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbShowAlgE_Simple*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbShowAlgE_Simple*) (soff+(sizeof(EdbShowAlgE_Simple)*i)))->~G__TEdbShowAlgE_Simple();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbShowAlgE_Simple*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbShowAlgE_Simple*) (soff))->~G__TEdbShowAlgE_Simple();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowRecCint_892_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowAlgE_Simple* dest = (EdbShowAlgE_Simple*) G__getstructoffset();
   *dest = *(EdbShowAlgE_Simple*) libp->para[0].ref;
   const EdbShowAlgE_Simple& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbShowAlgClean */
static int G__ShowRecCint_893_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowAlgClean* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowAlgClean[n];
     } else {
       p = new((void*) gvp) EdbShowAlgClean[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowAlgClean;
     } else {
       p = new((void*) gvp) EdbShowAlgClean;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgClean));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_893_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowAlgClean* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbShowAlgClean((TObjArray*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) EdbShowAlgClean((TObjArray*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgClean));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_893_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowAlgClean* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbShowAlgClean((TObjArray*) G__int(libp->para[0]), (TObjArray*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) EdbShowAlgClean((TObjArray*) G__int(libp->para[0]), (TObjArray*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgClean));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_893_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowAlgClean* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbShowAlgClean(
(TObjArray*) G__int(libp->para[0]), (TObjArray*) G__int(libp->para[1])
, (TObjArray*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) EdbShowAlgClean(
(TObjArray*) G__int(libp->para[0]), (TObjArray*) G__int(libp->para[1])
, (TObjArray*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgClean));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_893_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowAlgClean*) G__getstructoffset())->GetSource());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_893_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowAlgClean*) G__getstructoffset())->GetDirt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_893_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowAlgClean*) G__getstructoffset())->GetTarget());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_893_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgClean*) G__getstructoffset())->SetSource((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_893_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgClean*) G__getstructoffset())->SetDirt((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_893_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgClean*) G__getstructoffset())->SetTarget((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_893_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgClean*) G__getstructoffset())->SetSource((EdbShowerP*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_893_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgClean*) G__getstructoffset())->SetDirt((EdbTrackP*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_893_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgClean*) G__getstructoffset())->SetTarget((EdbShowerP*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_893_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgClean*) G__getstructoffset())->SetCleaningType((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_893_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgClean*) G__getstructoffset())->CheckClassType();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_893_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgClean*) G__getstructoffset())->CheckClassTypeEntries();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_893_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgClean*) G__getstructoffset())->RemovePassingDirtFromSource();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_893_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgClean*) G__getstructoffset())->RemoveStoppingDirtFromSource();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_893_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgClean*) G__getstructoffset())->SimpleRemoveTrackSegmentsFromShower();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_893_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbShowAlgClean*) G__getstructoffset())->SimpleRemoveTrackSegmentsFromShower((EdbShowerP*) G__int(libp->para[0]), (EdbTrackP*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_893_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgClean*) G__getstructoffset())->SimpleRemoveDoubleBTViewOverlap();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_893_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbShowAlgClean*) G__getstructoffset())->SimpleRemoveDoubleBTViewOverlap((EdbShowerP*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_893_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgClean*) G__getstructoffset())->SimpleRemoveBGSegmentsFromShower();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_893_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbShowAlgClean*) G__getstructoffset())->SimpleRemoveBGSegmentsFromShower((EdbShowerP*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_893_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgClean*) G__getstructoffset())->Execute();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_893_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((EdbShowAlgClean*) G__getstructoffset())->CompareSegmentsByPosition((EdbSegP*) G__int(libp->para[0]), (EdbSegP*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_893_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgClean*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_893_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgClean*) G__getstructoffset())->Help();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_893_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbShowAlgClean::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_893_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowAlgClean::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_893_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbShowAlgClean::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_893_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbShowAlgClean::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_893_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgClean*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_893_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowAlgClean::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_893_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowAlgClean::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_893_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowAlgClean::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_893_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowAlgClean::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowRecCint_893_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbShowAlgClean* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbShowAlgClean(*(EdbShowAlgClean*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgClean));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbShowAlgClean G__TEdbShowAlgClean;
static int G__ShowRecCint_893_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbShowAlgClean*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbShowAlgClean*) (soff+(sizeof(EdbShowAlgClean)*i)))->~G__TEdbShowAlgClean();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbShowAlgClean*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbShowAlgClean*) (soff))->~G__TEdbShowAlgClean();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowRecCint_893_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowAlgClean* dest = (EdbShowAlgClean*) G__getstructoffset();
   *dest = *(EdbShowAlgClean*) libp->para[0].ref;
   const EdbShowAlgClean& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbShowAlgID_E_G_Simple */
static int G__ShowRecCint_894_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowAlgID_E_G_Simple* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowAlgID_E_G_Simple[n];
     } else {
       p = new((void*) gvp) EdbShowAlgID_E_G_Simple[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowAlgID_E_G_Simple;
     } else {
       p = new((void*) gvp) EdbShowAlgID_E_G_Simple;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgID_E_G_Simple));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_894_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowAlgID_E_G_Simple* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbShowAlgID_E_G_Simple((EdbShowerP*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) EdbShowAlgID_E_G_Simple((EdbShowerP*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgID_E_G_Simple));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_894_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowAlgID_E_G_Simple* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbShowAlgID_E_G_Simple((TObjArray*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) EdbShowAlgID_E_G_Simple((TObjArray*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgID_E_G_Simple));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_894_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgID_E_G_Simple*) G__getstructoffset())->SetRecoShowerArray((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_894_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgID_E_G_Simple*) G__getstructoffset())->SetRecoShowerArrayN((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_894_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowAlgID_E_G_Simple*) G__getstructoffset())->GetRecoShowerArrayN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_894_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgID_E_G_Simple*) G__getstructoffset())->SetCalibrationOffset((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_894_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgID_E_G_Simple*) G__getstructoffset())->SetCalibrationSlope((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_894_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgID_E_G_Simple*) G__getstructoffset())->SetWeightFileString(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_894_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgID_E_G_Simple*) G__getstructoffset())->FindClosestEfficiencyParametrization((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_894_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgID_E_G_Simple*) G__getstructoffset())->Execute();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_894_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgID_E_G_Simple*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_894_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbShowAlgID_E_G_Simple::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_894_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowAlgID_E_G_Simple::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_894_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbShowAlgID_E_G_Simple::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_894_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbShowAlgID_E_G_Simple::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_894_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowAlgID_E_G_Simple*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_894_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowAlgID_E_G_Simple::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_894_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowAlgID_E_G_Simple::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_894_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowAlgID_E_G_Simple::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_894_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowAlgID_E_G_Simple::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowRecCint_894_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbShowAlgID_E_G_Simple* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbShowAlgID_E_G_Simple(*(EdbShowAlgID_E_G_Simple*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgID_E_G_Simple));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbShowAlgID_E_G_Simple G__TEdbShowAlgID_E_G_Simple;
static int G__ShowRecCint_894_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbShowAlgID_E_G_Simple*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbShowAlgID_E_G_Simple*) (soff+(sizeof(EdbShowAlgID_E_G_Simple)*i)))->~G__TEdbShowAlgID_E_G_Simple();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbShowAlgID_E_G_Simple*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbShowAlgID_E_G_Simple*) (soff))->~G__TEdbShowAlgID_E_G_Simple();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowRecCint_894_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowAlgID_E_G_Simple* dest = (EdbShowAlgID_E_G_Simple*) G__getstructoffset();
   *dest = *(EdbShowAlgID_E_G_Simple*) libp->para[0].ref;
   const EdbShowAlgID_E_G_Simple& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbShowPVRQuality */
static int G__ShowRecCint_897_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowPVRQuality* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowPVRQuality[n];
     } else {
       p = new((void*) gvp) EdbShowPVRQuality[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowPVRQuality;
     } else {
       p = new((void*) gvp) EdbShowPVRQuality;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowPVRQuality));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowPVRQuality* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbShowPVRQuality((EdbPVRec*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) EdbShowPVRQuality((EdbPVRec*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowPVRQuality));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowPVRQuality* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbShowPVRQuality((EdbPVRec*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
   } else {
     p = new((void*) gvp) EdbShowPVRQuality((EdbPVRec*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowPVRQuality));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowPVRQuality*) G__getstructoffset())->SetCutMethod((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowPVRQuality*) G__getstructoffset())->SetBTDensityLevel((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowPVRQuality*) G__getstructoffset())->SetBTDensityLevelCalcMethodMC((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowPVRQuality*) G__getstructoffset())->SetBTDensityLevelCalcMethodMCConfirmation((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((EdbShowPVRQuality*) G__getstructoffset())->GetBTDensityLevelCalcMethodMC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbShowPVRQuality*) G__getstructoffset())->GetBTDensityLevelCalcMethodMCConfirmation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowPVRQuality*) G__getstructoffset())->GetEdbPVRec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowPVRQuality*) G__getstructoffset())->GetEdbPVRec((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowPVRQuality*) G__getstructoffset())->GetEdbPVRec((Bool_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowPVRQuality*) G__getstructoffset())->GetEdbPVRec_orig());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowPVRQuality*) G__getstructoffset())->GetEdbPVRec_modified());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowPVRQuality*) G__getstructoffset())->SetEdbPVRec((EdbPVRec*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowPVRQuality*) G__getstructoffset())->GetHistChi2W());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowPVRQuality*) G__getstructoffset())->GetHistYX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbShowPVRQuality*) G__getstructoffset())->GetCutMethod());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((EdbShowPVRQuality*) G__getstructoffset())->GetCutMethodIsDone((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbShowPVRQuality*) G__getstructoffset())->GetBTDensityLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((EdbShowPVRQuality*) G__getstructoffset())->GetCutp0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((EdbShowPVRQuality*) G__getstructoffset())->GetCutp1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbShowPVRQuality*) G__getstructoffset())->GetCutp0((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbShowPVRQuality*) G__getstructoffset())->GetCutp1((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbShowPVRQuality*) G__getstructoffset())->GetagreementChi2CutMeanChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbShowPVRQuality*) G__getstructoffset())->GetagreementChi2CutRMSChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbShowPVRQuality*) G__getstructoffset())->GetagreementChi2CutMeanW());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbShowPVRQuality*) G__getstructoffset())->GetagreementChi2CutRMSW());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((EdbShowPVRQuality*) G__getstructoffset())->GetagreementChi2Cut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbShowPVRQuality*) G__getstructoffset())->GetagreementChi2Cut((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowPVRQuality*) G__getstructoffset())->SetHistGeometry_OPERA();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowPVRQuality*) G__getstructoffset())->SetHistGeometry_MC();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowPVRQuality*) G__getstructoffset())->SetHistGeometry_OPERAandMC();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowPVRQuality*) G__getstructoffset())->CheckEdbPVRec();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowPVRQuality*) G__getstructoffset())->Execute_ConstantBTDensity();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowPVRQuality*) G__getstructoffset())->Execute_ConstantQuality();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowPVRQuality*) G__getstructoffset())->Remove_DoubleBT((EdbPVRec*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowPVRQuality*) G__getstructoffset())->Remove_Passing((EdbPVRec*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((EdbShowPVRQuality*) G__getstructoffset())->Remove_SegmentArray((TObjArray*) G__int(libp->para[0]), (EdbPVRec*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((EdbShowPVRQuality*) G__getstructoffset())->Remove_SegmentArray((TObjArray*) G__int(libp->para[0]), (EdbPVRec*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((EdbShowPVRQuality*) G__getstructoffset())->Remove_SegmentArray((TObjArray*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((EdbShowPVRQuality*) G__getstructoffset())->Remove_Segment((EdbSegP*) G__int(libp->para[0]), (EdbPVRec*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((EdbShowPVRQuality*) G__getstructoffset())->Remove_Segment((EdbSegP*) G__int(libp->para[0]), (EdbPVRec*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((EdbShowPVRQuality*) G__getstructoffset())->Remove_Segment((EdbSegP*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((EdbShowPVRQuality*) G__getstructoffset())->Remove_TrackArray((TObjArray*) G__int(libp->para[0]), (EdbPVRec*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((EdbShowPVRQuality*) G__getstructoffset())->Remove_TrackArray((TObjArray*) G__int(libp->para[0]), (EdbPVRec*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((EdbShowPVRQuality*) G__getstructoffset())->Remove_TrackArray((TObjArray*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((EdbShowPVRQuality*) G__getstructoffset())->Remove_Track((EdbTrackP*) G__int(libp->para[0]), (EdbPVRec*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((EdbShowPVRQuality*) G__getstructoffset())->Remove_Track((EdbTrackP*) G__int(libp->para[0]), (EdbPVRec*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((EdbShowPVRQuality*) G__getstructoffset())->Remove_Track((EdbTrackP*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowPVRQuality*) G__getstructoffset())->TrackToSegmentArray((EdbTrackP*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowPVRQuality*) G__getstructoffset())->TrackArrayToSegmentArray((TObjArray*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowPVRQuality*) G__getstructoffset())->CreateEdbPVRec();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowPVRQuality*) G__getstructoffset())->CheckFilledXYSize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbShowPVRQuality*) G__getstructoffset())->FindFirstBinAbove((TH1*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbShowPVRQuality*) G__getstructoffset())->FindLastBinAbove((TH1*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowPVRQuality*) G__getstructoffset())->GetTracksFromLinkedTracksRootFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((EdbShowPVRQuality*) G__getstructoffset())->CheckSegmentQualityInPattern_ConstBTDens((EdbPVRec*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (EdbSegP*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((EdbShowPVRQuality*) G__getstructoffset())->CheckSegmentQualityInPattern_ConstQual((EdbPVRec*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (EdbSegP*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowPVRQuality*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowPVRQuality*) G__getstructoffset())->PrintCutType();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowPVRQuality*) G__getstructoffset())->PrintCutType0();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowPVRQuality*) G__getstructoffset())->PrintCutType1();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowPVRQuality*) G__getstructoffset())->Help();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbShowPVRQuality::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowPVRQuality::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbShowPVRQuality::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbShowPVRQuality::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowPVRQuality*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowPVRQuality::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowPVRQuality::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowPVRQuality::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowRecCint_897_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowPVRQuality::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowRecCint_897_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbShowPVRQuality* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbShowPVRQuality(*(EdbShowPVRQuality*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowPVRQuality));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbShowPVRQuality G__TEdbShowPVRQuality;
static int G__ShowRecCint_897_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbShowPVRQuality*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbShowPVRQuality*) (soff+(sizeof(EdbShowPVRQuality)*i)))->~G__TEdbShowPVRQuality();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbShowPVRQuality*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbShowPVRQuality*) (soff))->~G__TEdbShowPVRQuality();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowRecCint_897_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowPVRQuality* dest = (EdbShowPVRQuality*) G__getstructoffset();
   *dest = *(EdbShowPVRQuality*) libp->para[0].ref;
   const EdbShowPVRQuality& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* EdbShowerP */

/* EdbShowerP::Para_FJ */

/* EdbShowerP::Para_LT */

/* EdbShowerP::Para_YC */

/* EdbShowerP::Para_JC */

/* EdbShowerP::Para_XX */

/* EdbShowerP::Para_YY */

/* EdbShowerP::Para_PP */

/* EdbShowerP::Para_AS */

/* EdbShowerP::Para_SE */

/* EdbShowerP::Para_ExtraInfo */

/* EdbShowerP::MCInfo_PGun */

/* EdbShowerP::MCInfo_Event */

/* EdbShowerP::Reco_ID */

/* EdbShowerP::Reco_E */

/* EdbShowerP::Reco_Vtx */

/* EdbShowAlg */

/* EdbShowAlg_SA */

/* EdbShowAlg_CA */

/* EdbShowAlg_OI */

/* EdbShowAlg_RC */

/* EdbShowAlg_GS */

/* EdbShowAlg_NN */

/* EdbShowAlgE */

/* EdbShowRec */

/* EdbShowAlgE_Simple */

/* EdbShowAlgClean */

/* EdbShowAlgID_E_G_Simple */

/* EdbShowPVRQuality */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncShowRecCint {
 public:
  G__Sizep2memfuncShowRecCint(): p(&G__Sizep2memfuncShowRecCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncShowRecCint::*p)();
};

size_t G__get_sizep2memfuncShowRecCint()
{
  G__Sizep2memfuncShowRecCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceShowRecCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerP))) {
     EdbShowerP *G__Lderived;
     G__Lderived=(EdbShowerP*)0x1000;
     {
       EdbSegP *G__Lpbase=(EdbSegP*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerP),G__get_linked_tagnum(&G__ShowRecCintLN_EdbSegP),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerP),G__get_linked_tagnum(&G__ShowRecCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       EdbTrack2D *G__Lpbase=(EdbTrack2D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerP),G__get_linked_tagnum(&G__ShowRecCintLN_EdbTrack2D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       EdbPoint2D *G__Lpbase=(EdbPoint2D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerP),G__get_linked_tagnum(&G__ShowRecCintLN_EdbPoint2D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       EdbPoint *G__Lpbase=(EdbPoint*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerP),G__get_linked_tagnum(&G__ShowRecCintLN_EdbPoint),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       EdbAngle2D *G__Lpbase=(EdbAngle2D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerP),G__get_linked_tagnum(&G__ShowRecCintLN_EdbAngle2D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg))) {
     EdbShowAlg *G__Lderived;
     G__Lderived=(EdbShowAlg*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg),G__get_linked_tagnum(&G__ShowRecCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_SA))) {
     EdbShowAlg_SA *G__Lderived;
     G__Lderived=(EdbShowAlg_SA*)0x1000;
     {
       EdbShowAlg *G__Lpbase=(EdbShowAlg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_SA),G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_SA),G__get_linked_tagnum(&G__ShowRecCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_CA))) {
     EdbShowAlg_CA *G__Lderived;
     G__Lderived=(EdbShowAlg_CA*)0x1000;
     {
       EdbShowAlg *G__Lpbase=(EdbShowAlg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_CA),G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_CA),G__get_linked_tagnum(&G__ShowRecCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_OI))) {
     EdbShowAlg_OI *G__Lderived;
     G__Lderived=(EdbShowAlg_OI*)0x1000;
     {
       EdbShowAlg *G__Lpbase=(EdbShowAlg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_OI),G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_OI),G__get_linked_tagnum(&G__ShowRecCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_RC))) {
     EdbShowAlg_RC *G__Lderived;
     G__Lderived=(EdbShowAlg_RC*)0x1000;
     {
       EdbShowAlg *G__Lpbase=(EdbShowAlg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_RC),G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_RC),G__get_linked_tagnum(&G__ShowRecCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_GS))) {
     EdbShowAlg_GS *G__Lderived;
     G__Lderived=(EdbShowAlg_GS*)0x1000;
     {
       EdbShowAlg *G__Lpbase=(EdbShowAlg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_GS),G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_GS),G__get_linked_tagnum(&G__ShowRecCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_NN))) {
     EdbShowAlg_NN *G__Lderived;
     G__Lderived=(EdbShowAlg_NN*)0x1000;
     {
       EdbShowAlg *G__Lpbase=(EdbShowAlg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_NN),G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_NN),G__get_linked_tagnum(&G__ShowRecCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgE))) {
     EdbShowAlgE *G__Lderived;
     G__Lderived=(EdbShowAlgE*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgE),G__get_linked_tagnum(&G__ShowRecCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowRec))) {
     EdbShowRec *G__Lderived;
     G__Lderived=(EdbShowRec*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowRec),G__get_linked_tagnum(&G__ShowRecCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgE_Simple))) {
     EdbShowAlgE_Simple *G__Lderived;
     G__Lderived=(EdbShowAlgE_Simple*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgE_Simple),G__get_linked_tagnum(&G__ShowRecCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgClean))) {
     EdbShowAlgClean *G__Lderived;
     G__Lderived=(EdbShowAlgClean*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgClean),G__get_linked_tagnum(&G__ShowRecCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgID_E_G_Simple))) {
     EdbShowAlgID_E_G_Simple *G__Lderived;
     G__Lderived=(EdbShowAlgID_E_G_Simple*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgID_E_G_Simple),G__get_linked_tagnum(&G__ShowRecCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowPVRQuality))) {
     EdbShowPVRQuality *G__Lderived;
     G__Lderived=(EdbShowPVRQuality*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowPVRQuality),G__get_linked_tagnum(&G__ShowRecCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableShowRecCint() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__ShowRecCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ShowRecCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ShowRecCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ShowRecCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ShowRecCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__ShowRecCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ShowRecCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ShowRecCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ShowRecCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ShowRecCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__ShowRecCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__ShowRecCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__ShowRecCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__ShowRecCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__ShowRecCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__ShowRecCintLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ShowRecCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ShowRecCintLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ShowRecCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ShowRecCintLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__ShowRecCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__ShowRecCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__ShowRecCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__ShowRecCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<Relation*>",117,G__get_linked_tagnum(&G__ShowRecCintLN_listlEVERTEXcLcLRelationmUcOallocatorlEVERTEXcLcLRelationmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<VERTEX::Relation*>",117,G__get_linked_tagnum(&G__ShowRecCintLN_listlEVERTEXcLcLRelationmUcOallocatorlEVERTEXcLcLRelationmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<MassC*>",117,G__get_linked_tagnum(&G__ShowRecCintLN_listlEVERTEXcLcLMassCmUcOallocatorlEVERTEXcLcLMassCmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<VERTEX::MassC*>",117,G__get_linked_tagnum(&G__ShowRecCintLN_listlEVERTEXcLcLMassCmUcOallocatorlEVERTEXcLcLMassCmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Track*>",117,G__get_linked_tagnum(&G__ShowRecCintLN_vectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ShowRecCintLN_reverse_iteratorlEvectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ShowRecCintLN_vectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ShowRecCintLN_reverse_iteratorlEvectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ShowRecCintLN_vectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<VERTEX::Track*>",117,G__get_linked_tagnum(&G__ShowRecCintLN_vectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__ShowRecCintLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__ShowRecCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__ShowRecCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ShowRecCintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ShowRecCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ShowRecCintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ShowRecCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__ShowRecCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* EdbShowerP */
static void G__setup_memvarEdbShowerP(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerP));
   { EdbShowerP *p; p=(EdbShowerP*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TString),-1,-1,4,"eLongitudinalProfileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TString),-1,-1,4,"eTransversalProfileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TString),-1,-1,4,"eAlgName=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eAlgValue=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eParaValue[10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TString),-1,-1,4,"eParaString[10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eParametrisationIsDone[10]=",0,"number of parametrization which is already extracted or not.");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eExtraInfoIsDone[2]=",0,"if Para_ExtraInfo has been read already.");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eMCInfoIsDone[2]=",0,"if PGun or MCEvt Info has been read already.");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,4,"eFirstPlate=",0,"FirstPlate is always to the starting of beam!");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,4,"eLastPlate=",0,"LastPlate is always to the starting of beam!");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,4,"eFirstPlatePID=",0,"PID of Plate containing the InitiatorBT");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,4,"eLastPlatePID=",0,"PID of last plate which was used for reconstruction");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,4,"eFirstPlateZ=",0,"Z of Plate containing the InitiatorBT");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,4,"eLastPlateZ=",0,"Z of last plate which was used for reconstruction");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eFirstZ=",0,"Z of Plate containing the InitiatorBT");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eLastZ=",0,"Z of last plate which was used for reconstruction");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TObjArray),-1,-1,4,"eS=",0,"array of segments which set up the shower");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eNpl=",0,"number of plates passed throw");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eN0=",0,"number of holes (if any)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_EdbTrackP),-1,-1,4,"eTrackAS=",0,"! track to which the shower start is attached to");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_EdbVTA),-1,-1,4,"eVTAS=",0,"! vertex to which the shower start is attached to");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eM=",0,"invariant mass of the particle (from EdbTrackP; to be filled with use of ID algo)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ePDG=",0,"particle ID from PDG (from EdbTrackP; to be filled with use of ID algo)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eNBT=",0,"Number of BT in the shower");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eNBTMC=",0,"Number of BT in the shower, only MC>=0 events");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eNBTMCFlag[99]=",0,"NBT, only MC>=0, flagged with PDG Code but Internal array!! See corresponding fill function!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eNBTPlate[57]=",0,"Number of BT in the shower per plate w.r.t to Plate of InBT (Plate of InBT===[0])");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eNBTMCPlate[57]=",0,"Number of BT in the shower, only MC>=0 events,w.r.t to Plate of InBT (Plate of InBT===[0])");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eNBTMCFlagPlate[57][99]=",0,"NBT, only MC>=0, flagged with PDG Code but Internal array!! See corresponding fill function!, w.r.t to Plate of InBT (!)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eN00=",0,"largest number of consecutive holes (if any)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"ePurity=",0,"simple purity (eNBTMC/eNBT)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eEnergyMC=",0,"Energy, defined by P() of the Initiator BaseTrack  // this will be revised later!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eMC=",0,"MC number, defined by MCEvt() of the Initiator BaseTrack");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eSphericity=",0,"Value to express spherical distribution around the ShowerAxisCenterGravity");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TH1F),-1,-1,4,"eProfileLongitudinal=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TH1F),-1,-1,4,"eProfileTransversal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eShowerAxisAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_EdbSegP),-1,-1,4,"eShowerAxisCenterGravityBT=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eShowerAngularDeviationTXDistribution_mean=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eShowerAngularDeviationTXDistribution_sigma=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eShowerAngularDeviationTYDistribution_mean=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eShowerAngularDeviationTYDistribution_sigma=",0,(char*)NULL);
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,4,"eId=",0,(char*)NULL);
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,4,"ePDGId=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eEnergyUncorrected=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eEnergyCorrected=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ePara_FJ)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_FJ),-1,-1,1,"ePara_FJ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ePara_LT)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_LT),-1,-1,1,"ePara_LT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ePara_YC)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_YC),-1,-1,1,"ePara_YC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ePara_JC)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_JC),-1,-1,1,"ePara_JC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ePara_XX)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_XX),-1,-1,1,"ePara_XX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ePara_YY)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_YY),-1,-1,1,"ePara_YY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ePara_PP)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_PP),-1,-1,1,"ePara_PP=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ePara_AS)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_AS),-1,-1,1,"ePara_AS=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ePara_SE)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_SE),-1,-1,1,"ePara_SE=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ePara_N)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ePara_N=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ePara_ExtraInfo)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_ExtraInfo),-1,-1,1,"ePara_ExtraInfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eMCInfo_PGun)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLMCInfo_PGun),-1,-1,1,"eMCInfo_PGun=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eMCInfo_Event)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLMCInfo_Event),-1,-1,1,"eMCInfo_Event=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eReco_E)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLReco_E),-1,-1,1,"eReco_E=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eReco_Vtx)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLReco_Vtx),-1,-1,1,"eReco_Vtx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eReco_ID_Array)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TObjArray),-1,-1,1,"eReco_ID_Array=",0,"create crash when not initialized??? yes, so better initialize it");
   G__memvar_setup((void*)((long)(&p->eReco_E_Array)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TObjArray),-1,-1,1,"eReco_E_Array=",0,"even when  not yet needed....");
   G__memvar_setup((void*)((long)(&p->eReco_Vtx_Array)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TObjArray),-1,-1,1,"eReco_Vtx_Array=",0,"implementation will come later ...");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbShowerP::Para_FJ */
static void G__setup_memvarEdbShowerPcLcLPara_FJ(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_FJ));
   { EdbShowerP::Para_FJ *p; p=(EdbShowerP::Para_FJ*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ShowerAxisAngle)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ShowerAxisAngle=",0,"shower Axis angle (tan theta)");
   G__memvar_setup((void*)((long)(&p->nseg)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nseg=",0,"identical to <<eNBT>>");
   G__memvar_setup((void*)((long)(&p->BT_deltaR_mean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"BT_deltaR_mean=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BT_deltaR_rms)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"BT_deltaR_rms=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BT_deltaT_mean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"BT_deltaT_mean=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BT_deltaT_rms)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"BT_deltaT_rms=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->longprofile)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"longprofile[57]=",0,"not identical to the ProfileLongitudinalBincontent of Para_YY !!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbShowerP::Para_LT */
static void G__setup_memvarEdbShowerPcLcLPara_LT(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_LT));
   { EdbShowerP::Para_LT *p; p=(EdbShowerP::Para_LT*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ShowerAxisAngle)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ShowerAxisAngle=",0,"shower Axis angle (tan theta)");
   G__memvar_setup((void*)((long)(&p->nseg)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nseg=",0,"identical to <<eNBT>>");
   G__memvar_setup((void*)((long)(&p->BT_deltaR_mean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"BT_deltaR_mean=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BT_deltaR_rms)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"BT_deltaR_rms=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BT_deltaT_mean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"BT_deltaT_mean=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BT_deltaT_rms)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"BT_deltaT_rms=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->transprofile)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"transprofile[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->longprofile)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"longprofile[57]=",0,"not identical to the ProfileLongitudinalBincontent of Para_YY !!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbShowerP::Para_YC */
static void G__setup_memvarEdbShowerPcLcLPara_YC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_YC));
   { EdbShowerP::Para_YC *p; p=(EdbShowerP::Para_YC*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ShowerAxisAngle)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ShowerAxisAngle=",0,"shower Axis angle (tan theta)");
   G__memvar_setup((void*)((long)(&p->nseg)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nseg=",0,"identical to <<eNBT>>");
   G__memvar_setup((void*)((long)(&p->C1)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"C1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->a1)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"a1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->alpha)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"alpha=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nmax)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"nmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbShowerP::Para_JC */
static void G__setup_memvarEdbShowerPcLcLPara_JC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_JC));
   { EdbShowerP::Para_JC *p; p=(EdbShowerP::Para_JC*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ShowerAxisAngle)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ShowerAxisAngle=",0,"shower Axis angle (tan theta)");
   G__memvar_setup((void*)((long)(&p->nseg)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nseg=",0,"identical to <<eNBT>>");
   G__memvar_setup((void*)((long)(&p->C1)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"C1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->a1)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"a1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->alpha)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"alpha=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nmax)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"nmax=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BT_deltaR_mean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"BT_deltaR_mean=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BT_deltaR_rms)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"BT_deltaR_rms=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BT_deltaT_mean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"BT_deltaT_mean=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BT_deltaT_rms)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"BT_deltaT_rms=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->longprofile)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"longprofile[57]=",0,"not identical to the ProfileLongitudinalBincontent of Para_YY !!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbShowerP::Para_XX */
static void G__setup_memvarEdbShowerPcLcLPara_XX(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_XX));
   { EdbShowerP::Para_XX *p; p=(EdbShowerP::Para_XX*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ShowerAxisAngle)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ShowerAxisAngle=",0,"shower Axis angle (tan theta)");
   G__memvar_setup((void*)((long)(&p->nseg)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nseg=",0,"identical to <<eNBT>>");
   G__memvar_setup((void*)((long)(&p->Mean_ProfileLongitudinal)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Mean_ProfileLongitudinal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RMS_ProfileLongitudinal)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"RMS_ProfileLongitudinal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Max_ProfileLongitudinal)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Max_ProfileLongitudinal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Mean_ProfileTransversal)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Mean_ProfileTransversal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RMS_ProfileTransversal)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"RMS_ProfileTransversal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Max_ProfileTransversal)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Max_ProfileTransversal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Last_ProfileLongitudinal)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Last_ProfileLongitudinal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Last_ProfileTransversal)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Last_ProfileTransversal=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbShowerP::Para_YY */
static void G__setup_memvarEdbShowerPcLcLPara_YY(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_YY));
   { EdbShowerP::Para_YY *p; p=(EdbShowerP::Para_YY*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ShowerAxisAngle)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ShowerAxisAngle=",0,"shower Axis angle (tan theta)");
   G__memvar_setup((void*)((long)(&p->nseg)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nseg=",0,"identical to <<eNBT>>");
   G__memvar_setup((void*)((long)(&p->ProfileLongitudinalBincontent)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ProfileLongitudinalBincontent[57]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ProfileTransversalBincontent)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ProfileTransversalBincontent[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbShowerP::Para_PP */
static void G__setup_memvarEdbShowerPcLcLPara_PP(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_PP));
   { EdbShowerP::Para_PP *p; p=(EdbShowerP::Para_PP*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ShowerAxisAngle)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ShowerAxisAngle=",0,"shower Axis angle (tan theta)");
   G__memvar_setup((void*)((long)(&p->nseg)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nseg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ePairOpeningAngle)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ePairOpeningAngle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ePairOpeningDist_dMin)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ePairOpeningDist_dMin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ePairOpeningDist_dR)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ePairOpeningDist_dR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ePairChi2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ePairChi2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbShowerP::Para_AS */
static void G__setup_memvarEdbShowerPcLcLPara_AS(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_AS));
   { EdbShowerP::Para_AS *p; p=(EdbShowerP::Para_AS*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->nseg)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nseg=",0,"identical to <<eNBT>>");
   G__memvar_setup((void*)((long)(&p->edIP)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"edIP[50]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->edMin)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"edMin[50]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->edRLong)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"edRLong[50]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->edRTrans)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"edRTrans[50]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->edeltarb)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"edeltarb[50]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->edeltathetab)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"edeltathetab[50]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbShowerP::Para_SE */
static void G__setup_memvarEdbShowerPcLcLPara_SE(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_SE));
   { EdbShowerP::Para_SE *p; p=(EdbShowerP::Para_SE*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ShowerAxisAngle)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ShowerAxisAngle=",0,"shower Axis angle (tan theta)");
   G__memvar_setup((void*)((long)(&p->nseg)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nseg=",0,"identical to <<eNBT>>");
   G__memvar_setup((void*)((long)(&p->npl)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"npl=",0,"identical to <<eNPl>>");
   G__memvar_setup((void*)((long)(&p->efficiencyAtShowerAxisAngle)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"efficiencyAtShowerAxisAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbShowerP::Para_ExtraInfo */
static void G__setup_memvarEdbShowerPcLcLPara_ExtraInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_ExtraInfo));
   { EdbShowerP::Para_ExtraInfo *p; p=(EdbShowerP::Para_ExtraInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->InBT_E)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"InBT_E=",0,"InBT->P()");
   G__memvar_setup((void*)((long)(&p->InBT_Flag)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"InBT_Flag=",0,"InBT->Flag()");
   G__memvar_setup((void*)((long)(&p->InPairBT_E)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"InPairBT_E=",0,"In0BT->P()+In1BT->P() if sum of Flag() ==0 (photon=electron+positron); else identical to InBT_E");
   G__memvar_setup((void*)((long)(&p->ShowerLength)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ShowerLength=",0,"max of Z()max -Z()min over all segments");
   G__memvar_setup((void*)((long)(&p->InBT_IPToVtx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"InBT_IPToVtx=",0,"IP from InBT to generic vertex. Commonly used: Vertex of G4 position vertex.");
   G__memvar_setup((void*)((long)(&p->InBT_DeltaZToVtx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"InBT_DeltaZToVtx=",0,"DeltaZ from InBT to generic vertex. Commonly used: Vertex of G4 position vertex.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbShowerP::MCInfo_PGun */
static void G__setup_memvarEdbShowerPcLcLMCInfo_PGun(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLMCInfo_PGun));
   { EdbShowerP::MCInfo_PGun *p; p=(EdbShowerP::MCInfo_PGun*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->MCEvt)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"MCEvt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PDGId)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"PDGId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->energy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"energy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tantheta)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tantheta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dirx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dirx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->diry)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"diry=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dirz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dirz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vtxposx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"vtxposx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vtxposy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"vtxposy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vtxposz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"vtxposz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TX)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"TX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TY)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"TY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->X)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"X=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Z)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Z=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbShowerP::MCInfo_Event */
static void G__setup_memvarEdbShowerPcLcLMCInfo_Event(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLMCInfo_Event));
   { EdbShowerP::MCInfo_Event *p; p=(EdbShowerP::MCInfo_Event*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->eDUMMYVARIABLE)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"eDUMMYVARIABLE=",0,"not yet used.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbShowerP::Reco_ID */
static void G__setup_memvarEdbShowerPcLcLReco_ID(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLReco_ID));
   { EdbShowerP::Reco_ID *p; p=(EdbShowerP::Reco_ID*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->eProb90)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"eProb90=",0,"Signal efficency");
   G__memvar_setup((void*)((long)(&p->eProb5)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"eProb5=",0,"Background rejection");
   G__memvar_setup((void*)((long)(&p->eReco_ID_Name)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TString),-1,-1,1,"eReco_ID_Name=",0,"\"E_GAMMA\";");
   G__memvar_setup((void*)((long)(&p->eReco_ID_Nr)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"eReco_ID_Nr=",0,"=  0;");
   G__memvar_setup((void*)((long)(&p->eParaNr)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"eParaNr=",0,"refers to labelling of Parametrisations (0==FJ,1==YC...)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbShowerP::Reco_E */
static void G__setup_memvarEdbShowerPcLcLReco_E(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLReco_E));
   { EdbShowerP::Reco_E *p; p=(EdbShowerP::Reco_E*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->eId)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"eId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ePDGId)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"ePDGId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eEnergy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"eEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eEnergyUncorrected)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"eEnergyUncorrected=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eEnergyCorrected)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"eEnergyCorrected=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eParaNr)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"eParaNr=",0,"refers to labelling of Parametrisations (0==FJ,1==YC...)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbShowerP::Reco_Vtx */
static void G__setup_memvarEdbShowerPcLcLReco_Vtx(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLReco_Vtx));
   { EdbShowerP::Reco_Vtx *p; p=(EdbShowerP::Reco_Vtx*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->eDUMMYVARIABLE)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"eDUMMYVARIABLE=",0,"not yet used.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbShowAlg */
static void G__setup_memvarEdbShowAlg(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg));
   { EdbShowAlg *p; p=(EdbShowAlg*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TString),-1,-1,2,"eAlgName=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eAlgValue=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eParaN=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"eParaValue[10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TString),-1,-1,2,"eParaString[10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eActualAlgParametersetNr=",0,"Used when more sets of same algorithm");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_EdbPVRec),-1,-1,2,"eAli=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eAliNpat=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TObjArray),-1,-1,2,"eInBTArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eInBTArrayN=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eFirstPlate_eAliPID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eLastPlate_eAliPID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eMiddlePlate_eAliPID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eNumberPlate_eAliPID=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TObjArray),-1,-1,2,"eRecoShowerArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eRecoShowerArrayN=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_EdbPVRec),-1,-1,2,"eAli_Sub=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eAli_SubNpat=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eUseAliSub=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerP),-1,-1,2,"eRecoShower=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbShowAlg_SA */
static void G__setup_memvarEdbShowAlg_SA(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_SA));
   { EdbShowAlg_SA *p; p=(EdbShowAlg_SA*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbShowAlg_CA */
static void G__setup_memvarEdbShowAlg_CA(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_CA));
   { EdbShowAlg_CA *p; p=(EdbShowAlg_CA*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbShowAlg_OI */
static void G__setup_memvarEdbShowAlg_OI(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_OI));
   { EdbShowAlg_OI *p; p=(EdbShowAlg_OI*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbShowAlg_RC */
static void G__setup_memvarEdbShowAlg_RC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_RC));
   { EdbShowAlg_RC *p; p=(EdbShowAlg_RC*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbShowAlg_GS */
static void G__setup_memvarEdbShowAlg_GS(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_GS));
   { EdbShowAlg_GS *p; p=(EdbShowAlg_GS*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TObjArray),-1,-1,4,"eInVtxArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eInVtxArrayN=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TH1F),-1,-1,4,"h_GammaChi2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbShowAlg_NN */
static void G__setup_memvarEdbShowAlg_NN(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_NN));
   { EdbShowAlg_NN *p; p=(EdbShowAlg_NN*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TString),-1,-1,4,"eWeightFileString=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TString),-1,-1,4,"eWeightFileLayoutString=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TTree),-1,-1,4,"eANNTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TMultiLayerPerceptron),-1,-1,4,"eTMlpANN=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eANN_var_InBT_To_TestBT=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eANN_var_dT_InBT_To_TestBT=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eANN_var_dR_InBT_To_TestBT=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eANN_var_dR_TestBT_To_InBT=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eANN_var_zDist_TestBT_To_InBT=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eANN_var_SpatialDist_TestBT_To_InBT=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eANN_var_zDiff_TestBT_To_InBT=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eANN_var_dT_NextBT_To_TestBT=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eANN_var_dR_NextBT_To_TestBT=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eANN_var_mean_dT_2before=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eANN_var_mean_dR_2before=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eANN_var_mean_dT_before=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eANN_var_mean_dR_before=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eANN_var_mean_dT_same=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eANN_var_mean_dR_same=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eANN_var_mean_dT_after=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eANN_var_mean_dR_after=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eANN_var_mean_dT_2after=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eANN_var_mean_dR_2after=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eANN_var_min_dT_2before=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eANN_var_min_dR_2before=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eANN_var_min_dT_before=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eANN_var_min_dR_before=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eANN_var_min_dT_same=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eANN_var_min_dR_same=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eANN_var_min_dT_after=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eANN_var_min_dR_after=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eANN_var_min_dT_2after=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eANN_var_min_dR_2after=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eANN_var_nseg_1before=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eANN_var_nseg_2before=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eANN_var_nseg_3before=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eANN_var_nseg_1after=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eANN_var_nseg_2after=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eANN_var_nseg_3after=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eANN_var_nseg_same=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eANN_var_type=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbShowAlgE */
static void G__setup_memvarEdbShowAlgE(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgE));
   { EdbShowAlgE *p; p=(EdbShowAlgE*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TString),-1,-1,4,"eShowAlgEParaName=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eShowAlgEParaNr=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eShowAlgEPlatesN=",0,"used only to set names and distingiush. Not used for any reconstructon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TArrayI),-1,-1,4,"eShowAlgEPlateBinning=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TObjArray),-1,-1,4,"eRecoShowerArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eRecoShowerArrayN=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TObjArray),-1,-1,4,"eMLPArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eMLPArrayN=",0,"(==eMLP_InputNeuronsArrayN)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eDoANNTrain=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eDoANNRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,70,0,0,-1,G__defined_typename("Float_t"),-1,4,"eInANN=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eOutANN=",0,(char*)NULL);
   G__memvar_setup((void*)0,70,0,0,-1,G__defined_typename("Float_t"),-1,4,"eInfoANN=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TH1F),-1,-1,4,"eInANN_Hist[70]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TMultiLayerPerceptron),-1,-1,4,"eMLP_Simple=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eMLP_SimpleIsDone=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TTree),-1,-1,4,"eMLP_SimpleTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TString),-1,-1,4,"eMLP_Layout=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TObjArray),-1,-1,4,"eMLP_LayoutArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eMLP_LayoutArrayIsDone=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eMLP_WriteWeightFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TString),-1,-1,4,"eMLP_WeightFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TString),-1,-1,4,"eMLP_WeightFileNameArray[10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eMLP_TrainEpochs=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eMLP_InputNeurons=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TArrayI),-1,-1,4,"eMLP_InputNeuronsArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eMLP_InputNeuronsArrayN=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TString),-1,-1,4,"eMLP_InputFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eMLP_WriteMLPInputFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eMLP_ReadMLPInputFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbShowRec */
static void G__setup_memvarEdbShowRec(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowRec));
   { EdbShowRec *p; p=(EdbShowRec*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eDoReconstruction=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eDoParametrization=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eDoId=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eDoEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eDoVtxAttach=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_EdbPVRec),-1,-1,4,"eAli=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eAliNpat=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eAliLoaded=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TObjArray),-1,-1,4,"eInBTArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eInBTArrayN=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eInBTArrayLoaded=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eInBTArrayMaxSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TObjArray),-1,-1,4,"eShowAlgArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eShowAlgArrayN=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eShowAlgArraySingleN[10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eShowAlgArrayLoaded=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eShowAlgArrayMaxSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TObjArray),-1,-1,4,"eRecoShowerArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eRecoShowerArrayN=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TTree),-1,-1,4,"eRecoShowerTreetreebranch=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eFirstPlate=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eLastPlate=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eMiddlePlate=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eNumberPlate=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eFirstPlate_eAliPID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eLastPlate_eAliPID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eMiddlePlate_eAliPID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eNumberPlate_eAliPID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eProposedFirstPlate=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eProposedLastPlate=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eProposedMiddlePlate=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eProposedNumberPlate=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eAliZMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eAliZMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eAliZMaxPID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eAliZMinPID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TString),-1,-1,4,"eAliStreamType=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eAliStreamTypeStep=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"IsPlateValuesLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg),-1,-1,4,"eActualAlg=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eActualAlgParameterset[10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eParaTypes[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TString),-1,-1,4,"eParaNames[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TString),-1,-1,4,"eFilename_LnkDef=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TString),-1,-1,4,"eFilename_LinkedTracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TString),-1,-1,4,"eFilename_EdbPVRecObject=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TString),-1,-1,4,"eFilename_In_shower=",0,"File containing showers in \"EdbShowerP\"");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TString),-1,-1,4,"eFilename_In_treebranch=",0,"File containing showers in \"treebranch\"");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eReadFileShower=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eReadFileTreebranch=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TFile),-1,-1,4,"eFile_In_shower=",0,"File containing showers in \"EdbShowerP\" format");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TFile),-1,-1,4,"eFile_In_treebranch=",0,"File containing showers in \"treebranch\" format");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TString),-1,-1,4,"eFilename_Out_shower=",0,"File containing showers in \"EdbShowerP\" format");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TString),-1,-1,4,"eFilename_Out_treebranch=",0,"File containing showers in \"treebranch\" format");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eWriteFileShower=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eWriteFileTreebranch=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TFile),-1,-1,4,"eFile_Out_shower=",0,"File containing showers in \"EdbShowerP\" format");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TFile),-1,-1,4,"eFile_Out_treebranch=",0,"File containing showers in \"treebranch\" format");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TString),-1,-1,4,"eName_Out_shower=",0,"name of shower objects in \"EdbShowerP\" format");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TString),-1,-1,4,"eName_Out_treebranch=",0,"name of shower objects in \"EdbShowerP\" format");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eUse_LT=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eUse_PVREC=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eUse_AliBT=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eUse_AliLT=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eUse_ROOTInBT=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eUse_InBTelse=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eUseNr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TCut),-1,-1,4,"eInBTCuts[3]=",0,"! root-style text cuts");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TTree),-1,-1,4,"eInBTTree=",0,"Tree for interim storing InBTs");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"eInBTArrayFraction=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eUseAliSub=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbShowAlgE_Simple */
static void G__setup_memvarEdbShowAlgE_Simple(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgE_Simple));
   { EdbShowAlgE_Simple *p; p=(EdbShowAlgE_Simple*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TObjArray),-1,-1,2,"eRecoShowerArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eRecoShowerArrayN=",0,"nothing...");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eParaName=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"eCalibrationOffset=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"eCalibrationSlope=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"ePlateNumberType=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"ePlateNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TString),-1,-1,2,"eWeightFileString=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eSpecificationType[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TString),-1,-1,2,"eSpecificationTypeString[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TString),-1,-1,2,"eSpecificationTypeStringArray[6][6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"eSpecificationIsChanged=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"ePlateBinning[15]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TMultiLayerPerceptron),-1,-1,2,"ANN_MLP=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TMultiLayerPerceptron),-1,-1,2,"ANN_MLP_ARRAY[15]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TTree),-1,-1,2,"ANNTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"inANN[70]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"outANN=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"ANN_nPlates_ARRAY[15]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"ANN_n_InputNeurons_ARRAY[15]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"ANN_n_InputNeurons=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TString),-1,-1,2,"ANN_Layout=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TString),-1,-1,2,"ANN_WeightFile_ARRAY[15]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"eANN_MLP_CORR_0[15]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"eANN_MLP_CORR_1[15]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"eParaShowerAxisAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eParanseg=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"eParaBT_deltaR_mean=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"eParaBT_deltaR_rms=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"eParaBT_deltaT_mean=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"eParaBT_deltaT_rms=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eParalongprofile[57]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TH1D),-1,-1,2,"eHisto_nbtk_av=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TH1D),-1,-1,2,"eHisto_longprofile_av=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TH1D),-1,-1,2,"eHisto_transprofile_av=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TH1D),-1,-1,2,"eHisto_deltaR_mean=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TH1D),-1,-1,2,"eHisto_deltaT_mean=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TH1D),-1,-1,2,"eHisto_deltaR_rms=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TH1D),-1,-1,2,"eHisto_deltaT_rms=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TH1D),-1,-1,2,"eHisto_nbtk=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TH1D),-1,-1,2,"eHisto_longprofile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TH1D),-1,-1,2,"eHisto_transprofile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TH1D),-1,-1,2,"eHisto_deltaR=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TH1D),-1,-1,2,"eHisto_deltaT=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TF1),-1,-1,2,"EffFunc_all=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TF1),-1,-1,2,"EffFunc_edefault=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TF1),-1,-1,2,"EffFunc_elletroni=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TF1),-1,-1,2,"EffFunc_neuchmicro=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TF1),-1,-1,2,"EffFunc_MiddleFix=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TF1),-1,-1,2,"EffFunc_LowEff=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TF1),-1,-1,2,"EffFunc_UserEfficiency=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TSpline3),-1,-1,2,"eEfficiencyParametrisation=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TArrayF),-1,-1,2,"eEnergyArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TArrayF),-1,-1,2,"eEnergyArrayUnCorrected=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TArrayF),-1,-1,2,"eEnergyArraySigmaCorrected=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"eEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"eEnergyCorr=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"eEnergyUnCorr=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"eEnergySigmaCorr=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eEnergyArrayCount=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TObjArray),-1,-1,2,"eSplineArray_Energy_Stat_Electron=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TObjArray),-1,-1,2,"eSplineArray_Energy_Stat_Gamma=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TObjArray),-1,-1,2,"eSplineArray_Energy_Sys_Electron=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TObjArray),-1,-1,2,"eSplineArray_Energy_Sys_Gamma=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TSpline3),-1,-1,2,"eSplineCurrent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbShowAlgClean */
static void G__setup_memvarEdbShowAlgClean(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgClean));
   { EdbShowAlgClean *p; p=(EdbShowAlgClean*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TObjArray),-1,-1,4,"eSource=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eSourceClassType=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TObjArray),-1,-1,4,"eDirt=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eDirtClassType=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TObjArray),-1,-1,4,"eTarget=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eTargetClassType=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TArrayI),-1,-1,4,"eCleaningType=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eIsSet[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbShowAlgID_E_G_Simple */
static void G__setup_memvarEdbShowAlgID_E_G_Simple(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgID_E_G_Simple));
   { EdbShowAlgID_E_G_Simple *p; p=(EdbShowAlgID_E_G_Simple*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TObjArray),-1,-1,4,"eRecoShowerArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eRecoShowerArrayN=",0,"nothing...");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eParaName=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eCalibrationOffset=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eCalibrationSlope=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TString),-1,-1,4,"eWeightFileString=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbShowPVRQuality */
static void G__setup_memvarEdbShowPVRQuality(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowPVRQuality));
   { EdbShowPVRQuality *p; p=(EdbShowPVRQuality*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_EdbPVRec),-1,-1,4,"eAli_orig=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_EdbPVRec),-1,-1,4,"eAli_modified=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eNeedModified=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eIsSource=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eIsTarget=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eHistGeometry=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eAli_maxNpatterns=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eCutMethod=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eBTDensityLevel=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eCutMethodIsDone[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eBTDensityLevelCalcMethodMC=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eBTDensityLevelCalcMethodMCConfirmationNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"ePatternBTDensity_orig[114]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"ePatternBTDensity_modified[114]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TH2F),-1,-1,4,"eHistChi2W=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TH2F),-1,-1,4,"eHistYX=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"NbinsX=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"NbinsY=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"minX=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"maxX=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"minY=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"maxY=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TProfile),-1,-1,4,"eProfileBTdens_vs_PID_source=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eProfileBTdens_vs_PID_source_meanX=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eProfileBTdens_vs_PID_source_meanY=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eProfileBTdens_vs_PID_source_rmsX=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eProfileBTdens_vs_PID_source_rmsY=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TProfile),-1,-1,4,"eProfileBTdens_vs_PID_target=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eProfileBTdens_vs_PID_target_meanX=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eProfileBTdens_vs_PID_target_meanY=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eProfileBTdens_vs_PID_target_rmsX=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eProfileBTdens_vs_PID_target_rmsY=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eCutp0[114]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eCutp1[114]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eCutDistChi2[114]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eCutDistW[114]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eAgreementChi2WDistCut[114]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eAgreementChi2CutMeanChi2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eAgreementChi2CutRMSChi2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eAgreementChi2CutMeanW=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eAgreementChi2CutRMSW=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowRecCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarShowRecCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncEdbShowerP(void) {
   /* EdbShowerP */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerP));
   G__memfunc_setup("GetdR",470,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 4, 0, 
"U 'EdbSegP' - 0 - seg1 U 'EdbSegP' - 0 - seg2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetdMin",680,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 4, 0, 
"U 'EdbSegP' - 0 - seg1 U 'EdbSegP' - 0 - seg2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetdT",472,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 4, 0, 
"U 'EdbSegP' - 0 - seg1 U 'EdbSegP' - 0 - seg2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastFilledBin",1565,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "U 'TH1' - 0 - hist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowerP",979,G__ShowRecCint_857_0_5, 105, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerP), -1, 0, 1, 1, 1, 0, "i - - 0 '0' nseg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowerP",979,G__ShowRecCint_857_0_6, 105, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerP), -1, 0, 4, 1, 1, 0, 
"i - - 0 - number1 i - - 0 - number2 "
"i - - 0 - number3 i - - 0 '0' nseg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__ShowRecCint_857_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set0",348,G__ShowRecCint_857_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set0Parametrizations",2057,G__ShowRecCint_857_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackAS",649,G__ShowRecCint_857_0_10, 85, G__get_linked_tagnum(&G__ShowRecCintLN_EdbTrackP), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VTAS",318,G__ShowRecCint_857_0_11, 85, G__get_linked_tagnum(&G__ShowRecCintLN_EdbVTA), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCounters",1151,G__ShowRecCint_857_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetN0",426,G__ShowRecCint_857_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetN0",426,G__ShowRecCint_857_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("N0",126,G__ShowRecCint_857_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNpl",598,G__ShowRecCint_857_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - npl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNpl",598,G__ShowRecCint_857_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Npl",298,G__ShowRecCint_857_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("N",78,G__ShowRecCint_857_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetN00",474,G__ShowRecCint_857_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n00", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetN00",474,G__ShowRecCint_857_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("N00",174,G__ShowRecCint_857_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSegmentArray",1522,G__ShowRecCint_857_0_23, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSegmentFirst",1531,G__ShowRecCint_857_0_24, 85, G__get_linked_tagnum(&G__ShowRecCintLN_EdbSegP), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSegmentLast",1415,G__ShowRecCint_857_0_25, 85, G__get_linked_tagnum(&G__ShowRecCintLN_EdbSegP), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSegment",1011,G__ShowRecCint_857_0_26, 85, G__get_linked_tagnum(&G__ShowRecCintLN_EdbSegP), -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSegmentFirstZ",1621,G__ShowRecCint_857_0_27, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSegmentLastZ",1505,G__ShowRecCint_857_0_28, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFirstZ",898,G__ShowRecCint_857_0_29, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastZ",782,G__ShowRecCint_857_0_30, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPDG",519,G__ShowRecCint_857_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PDG",219,G__ShowRecCint_857_0_32, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPDG",507,G__ShowRecCint_857_0_33, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetM",377,G__ShowRecCint_857_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("M",77,G__ShowRecCint_857_0_35, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetM",365,G__ShowRecCint_857_0_36, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSegmentGravity",1753,G__ShowRecCint_857_0_37, 85, G__get_linked_tagnum(&G__ShowRecCintLN_EdbSegP), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSegmentAngle",1498,G__ShowRecCint_857_0_38, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSegment",988,G__ShowRecCint_857_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbSegP' - 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSegmentAndUpdate",1874,G__ShowRecCint_857_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbSegP' - 0 - s", "Attention, will execute the whole Update/Calculation Procedure", (void*) NULL, 0);
   G__memfunc_setup("RemoveSegment",1345,G__ShowRecCint_857_0_41, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'EdbSegP' - 0 - s g - 'Bool_t' 0 'kFALSE' UpdateAll", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSegmentArray",1534,G__ShowRecCint_857_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - segArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Sort",424,G__ShowRecCint_857_0_43, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSorted",813,G__ShowRecCint_857_0_44, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearAll",768,G__ShowRecCint_857_0_45, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__ShowRecCint_857_0_46, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearProfileLongitudinalHisto",2985,G__ShowRecCint_857_0_47, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearProfileTransversalHisto",2900,G__ShowRecCint_857_0_48, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNBT",516,G__ShowRecCint_857_0_49, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNBTMC",660,G__ShowRecCint_857_0_50, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNBTMCFlag",1038,G__ShowRecCint_857_0_51, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - PdgArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNBTPlate",1018,G__ShowRecCint_857_0_52, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - PIDdiff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNBTMCPlate",1162,G__ShowRecCint_857_0_53, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - PIDdiff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNBTMCFlagPlate",1540,G__ShowRecCint_857_0_54, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - PIDdiff i - 'Int_t' 0 - PdgArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPurity",941,G__ShowRecCint_857_0_55, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSphericity",1348,G__ShowRecCint_857_0_56, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProfileLongitudinal",2267,G__ShowRecCint_857_0_57, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProfileTransversal",2182,G__ShowRecCint_857_0_58, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProfileLongitudinalPlate",2769,G__ShowRecCint_857_0_59, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TH1F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParametrisationIsDone",2453,G__ShowRecCint_857_0_60, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - nr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParaVariable",1482,G__ShowRecCint_857_0_61, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - ParaVariable i - 'Int_t' 0 - ParaNr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPara_FJ",915,G__ShowRecCint_857_0_62, 117, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_FJ), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPara_LT",931,G__ShowRecCint_857_0_63, 117, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_LT), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPara_YC",927,G__ShowRecCint_857_0_64, 117, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_YC), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPara_JC",912,G__ShowRecCint_857_0_65, 117, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_JC), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPara_XX",947,G__ShowRecCint_857_0_66, 117, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_XX), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPara_YY",949,G__ShowRecCint_857_0_67, 117, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_YY), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPara_PP",931,G__ShowRecCint_857_0_68, 117, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_PP), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPara_AS",919,G__ShowRecCint_857_0_69, 117, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_AS), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPara_SE",923,G__ShowRecCint_857_0_70, 117, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_SE), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPara_ExtraInfo",1683,G__ShowRecCint_857_0_71, 117, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_ExtraInfo), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParaVariable",1494,G__ShowRecCint_857_0_72, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 0 - fParVar i - 'Int_t' 0 - ParaVariable "
"i - 'Int_t' 0 - ParaNr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMCInfoIsDone",1406,G__ShowRecCint_857_0_73, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - nr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetExtraInfoIsDone",1778,G__ShowRecCint_857_0_74, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - nr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMCInfo_PGun",1301,G__ShowRecCint_857_0_75, 117, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLMCInfo_PGun), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMCInfo_Event",1437,G__ShowRecCint_857_0_76, 117, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLMCInfo_Event), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMCInfoIsDone",1418,G__ShowRecCint_857_0_77, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - nr g - 'Bool_t' 0 - IsDone", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetExtraInfoIsDone",1790,G__ShowRecCint_857_0_78, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - nr g - 'Bool_t' 0 - IsDone", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMCInfo_PGun",1313,G__ShowRecCint_857_0_79, 121, -1, -1, 0, 1, 1, 1, 0, "u 'EdbShowerP::MCInfo_PGun' - 0 - fMCInfo_PGun", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMCInfo_Event",1449,G__ShowRecCint_857_0_80, 121, -1, -1, 0, 1, 1, 1, 0, "u 'EdbShowerP::MCInfo_Event' - 0 - fMCInfo_Event", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAlgName",961,G__ShowRecCint_857_0_81, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - AlgName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAlgValue",1085,G__ShowRecCint_857_0_82, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - AlgValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAlgParaValue",1473,G__ShowRecCint_857_0_83, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - ParaValueNr f - 'Float_t' 0 - ParaValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAlgParaString",1595,G__ShowRecCint_857_0_84, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - ParaStringNr u 'TString' - 0 - ParaString", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildNplN0",920,G__ShowRecCint_857_0_85, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildNMC",718,G__ShowRecCint_857_0_86, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildProfiles",1332,G__ShowRecCint_857_0_87, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildPlateProfile",1719,G__ShowRecCint_857_0_88, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildShowerAxis",1533,G__ShowRecCint_857_0_89, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildParametrisation",2083,G__ShowRecCint_857_0_90, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ParaNr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildParametrisation_FJ",2322,G__ShowRecCint_857_0_91, 121, -1, -1, 0, 0, 1, 1, 0, "", "0", (void*) NULL, 0);
   G__memfunc_setup("BuildParametrisation_LT",2338,G__ShowRecCint_857_0_92, 121, -1, -1, 0, 0, 1, 1, 0, "", "1", (void*) NULL, 0);
   G__memfunc_setup("BuildParametrisation_YC",2334,G__ShowRecCint_857_0_93, 121, -1, -1, 0, 0, 1, 1, 0, "", "2", (void*) NULL, 0);
   G__memfunc_setup("BuildParametrisation_JC",2319,G__ShowRecCint_857_0_94, 121, -1, -1, 0, 0, 1, 1, 0, "", "3", (void*) NULL, 0);
   G__memfunc_setup("BuildParametrisation_XX",2354,G__ShowRecCint_857_0_95, 121, -1, -1, 0, 0, 1, 1, 0, "", "4", (void*) NULL, 0);
   G__memfunc_setup("BuildParametrisation_YY",2356,G__ShowRecCint_857_0_96, 121, -1, -1, 0, 0, 1, 1, 0, "", "5", (void*) NULL, 0);
   G__memfunc_setup("BuildParametrisation_PP",2338,G__ShowRecCint_857_0_97, 121, -1, -1, 0, 0, 1, 1, 0, "", "6", (void*) NULL, 0);
   G__memfunc_setup("BuildParametrisation_AS",2326,G__ShowRecCint_857_0_98, 121, -1, -1, 0, 0, 1, 1, 0, "", "7", (void*) NULL, 0);
   G__memfunc_setup("BuildParametrisation_SE",2330,G__ShowRecCint_857_0_99, 121, -1, -1, 0, 0, 1, 1, 0, "", "8", (void*) NULL, 0);
   G__memfunc_setup("BuildParametrisation_ExtraInfo",3090,G__ShowRecCint_857_0_100, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcPurity",1024,G__ShowRecCint_857_0_101, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcSphericity",1431,G__ShowRecCint_857_0_102, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcShowerAngularDeviationDistribution",3928,G__ShowRecCint_857_0_103, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcOpenAngle",1260,G__ShowRecCint_857_0_104, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcOpenAngleSimple",1878,G__ShowRecCint_857_0_105, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcIP",524,G__ShowRecCint_857_0_106, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"U 'EdbSegP' - 0 - - U 'EdbVertex' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcIP",524,G__ShowRecCint_857_0_107, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 1, 0, 
"U 'EdbSegP' - 0 - - d - - 0 - - "
"d - - 0 - - d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcDistLongitudinal",2033,G__ShowRecCint_857_0_108, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"U 'EdbSegP' - 0 - - U 'EdbSegP' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcDistTransversal",1948,G__ShowRecCint_857_0_109, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"U 'EdbSegP' - 0 - - U 'EdbSegP' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Update",611,G__ShowRecCint_857_0_110, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateX",699,G__ShowRecCint_857_0_111, 121, -1, -1, 0, 0, 1, 1, 0, "", "Update all shower properties _AND_ build all parametrisations.", (void*) NULL, 0);
   G__memfunc_setup("MergeFromShower",1532,G__ShowRecCint_857_0_112, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'EdbShowerP' - 0 - show i - 'Int_t' 0 '1' MergingType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MergeFromShowerByAddress",2429,G__ShowRecCint_857_0_113, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbShowerP' - 0 - show", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MergeFromShowerByPosition",2572,G__ShowRecCint_857_0_114, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbShowerP' - 0 - show", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddShower",897,G__ShowRecCint_857_0_115, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbShowerP' - 0 - show", "calls MergeFromShower...", (void*) NULL, 0);
   G__memfunc_setup("Finalize",818,G__ShowRecCint_857_0_116, 121, -1, -1, 0, 0, 1, 1, 0, "", "/ Delete the histograms only... /// ----   EXPERIMENTAL STATUS ---", (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__ShowRecCint_857_0_117, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintNice",908,G__ShowRecCint_857_0_118, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintBasics",1122,G__ShowRecCint_857_0_119, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintMetaData",1294,G__ShowRecCint_857_0_120, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintSegments",1363,G__ShowRecCint_857_0_121, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintParametrisation",2112,G__ShowRecCint_857_0_122, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0' ParaNr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintParametrisation_FJ",2351,G__ShowRecCint_857_0_123, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintParametrisation_LT",2367,G__ShowRecCint_857_0_124, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintParametrisation_YC",2363,G__ShowRecCint_857_0_125, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintParametrisation_JC",2348,G__ShowRecCint_857_0_126, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintParametrisation_XX",2383,G__ShowRecCint_857_0_127, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintParametrisation_YY",2385,G__ShowRecCint_857_0_128, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintParametrisation_PP",2367,G__ShowRecCint_857_0_129, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintParametrisation_AS",2355,G__ShowRecCint_857_0_130, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintParametrisation_SE",2359,G__ShowRecCint_857_0_131, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintParametrisation_ExtraInfo",3119,G__ShowRecCint_857_0_132, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintMCInfo_PGun",1538,G__ShowRecCint_857_0_133, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintAll",806,G__ShowRecCint_857_0_134, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Help",393,G__ShowRecCint_857_0_135, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ShowRecCint_857_0_136, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbShowerP::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowRecCint_857_0_137, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowRecCint_857_0_138, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbShowerP::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowRecCint_857_0_139, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbShowerP::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowRecCint_857_0_143, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowRecCint_857_0_144, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowRecCint_857_0_145, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerP::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowRecCint_857_0_146, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowRecCint_857_0_147, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerP::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EdbShowerP", 979, G__ShowRecCint_857_0_148, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerP), -1, 0, 1, 1, 1, 0, "u 'EdbShowerP' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EdbShowerP", 1105, G__ShowRecCint_857_0_149, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowRecCint_857_0_150, (int) ('u'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerP), -1, 1, 1, 1, 1, 0, "u 'EdbShowerP' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbShowerPcLcLPara_FJ(void) {
   /* EdbShowerP::Para_FJ */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_FJ));
   G__memfunc_setup("Class",502,G__ShowRecCint_858_0_1, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbShowerP::Para_FJ::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowRecCint_858_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Para_FJ::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowRecCint_858_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbShowerP::Para_FJ::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowRecCint_858_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbShowerP::Para_FJ::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__ShowRecCint_858_0_5, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__ShowRecCint_858_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__ShowRecCint_858_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowRecCint_858_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowRecCint_858_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Para_FJ::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowRecCint_858_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerP::Para_FJ::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowRecCint_858_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Para_FJ::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowRecCint_858_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerP::Para_FJ::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("Para_FJ", 627, G__ShowRecCint_858_0_13, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_FJ), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Para_FJ", 627, G__ShowRecCint_858_0_14, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_FJ), -1, 0, 1, 1, 1, 0, "u 'EdbShowerP::Para_FJ' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Para_FJ", 753, G__ShowRecCint_858_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowRecCint_858_0_16, (int) ('u'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_FJ), -1, 1, 1, 1, 1, 0, "u 'EdbShowerP::Para_FJ' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbShowerPcLcLPara_LT(void) {
   /* EdbShowerP::Para_LT */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_LT));
   G__memfunc_setup("Class",502,G__ShowRecCint_859_0_1, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbShowerP::Para_LT::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowRecCint_859_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Para_LT::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowRecCint_859_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbShowerP::Para_LT::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowRecCint_859_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbShowerP::Para_LT::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__ShowRecCint_859_0_5, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__ShowRecCint_859_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__ShowRecCint_859_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowRecCint_859_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowRecCint_859_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Para_LT::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowRecCint_859_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerP::Para_LT::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowRecCint_859_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Para_LT::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowRecCint_859_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerP::Para_LT::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("Para_LT", 643, G__ShowRecCint_859_0_13, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_LT), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Para_LT", 643, G__ShowRecCint_859_0_14, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_LT), -1, 0, 1, 1, 1, 0, "u 'EdbShowerP::Para_LT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Para_LT", 769, G__ShowRecCint_859_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowRecCint_859_0_16, (int) ('u'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_LT), -1, 1, 1, 1, 1, 0, "u 'EdbShowerP::Para_LT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbShowerPcLcLPara_YC(void) {
   /* EdbShowerP::Para_YC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_YC));
   G__memfunc_setup("Class",502,G__ShowRecCint_860_0_1, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbShowerP::Para_YC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowRecCint_860_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Para_YC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowRecCint_860_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbShowerP::Para_YC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowRecCint_860_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbShowerP::Para_YC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__ShowRecCint_860_0_5, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__ShowRecCint_860_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__ShowRecCint_860_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowRecCint_860_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowRecCint_860_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Para_YC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowRecCint_860_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerP::Para_YC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowRecCint_860_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Para_YC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowRecCint_860_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerP::Para_YC::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("Para_YC", 639, G__ShowRecCint_860_0_13, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_YC), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Para_YC", 639, G__ShowRecCint_860_0_14, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_YC), -1, 0, 1, 1, 1, 0, "u 'EdbShowerP::Para_YC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Para_YC", 765, G__ShowRecCint_860_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowRecCint_860_0_16, (int) ('u'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_YC), -1, 1, 1, 1, 1, 0, "u 'EdbShowerP::Para_YC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbShowerPcLcLPara_JC(void) {
   /* EdbShowerP::Para_JC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_JC));
   G__memfunc_setup("Class",502,G__ShowRecCint_861_0_1, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbShowerP::Para_JC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowRecCint_861_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Para_JC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowRecCint_861_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbShowerP::Para_JC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowRecCint_861_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbShowerP::Para_JC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__ShowRecCint_861_0_5, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__ShowRecCint_861_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__ShowRecCint_861_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowRecCint_861_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowRecCint_861_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Para_JC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowRecCint_861_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerP::Para_JC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowRecCint_861_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Para_JC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowRecCint_861_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerP::Para_JC::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("Para_JC", 624, G__ShowRecCint_861_0_13, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_JC), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Para_JC", 624, G__ShowRecCint_861_0_14, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_JC), -1, 0, 1, 1, 1, 0, "u 'EdbShowerP::Para_JC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Para_JC", 750, G__ShowRecCint_861_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowRecCint_861_0_16, (int) ('u'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_JC), -1, 1, 1, 1, 1, 0, "u 'EdbShowerP::Para_JC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbShowerPcLcLPara_XX(void) {
   /* EdbShowerP::Para_XX */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_XX));
   G__memfunc_setup("Class",502,G__ShowRecCint_862_0_1, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbShowerP::Para_XX::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowRecCint_862_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Para_XX::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowRecCint_862_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbShowerP::Para_XX::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowRecCint_862_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbShowerP::Para_XX::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__ShowRecCint_862_0_5, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__ShowRecCint_862_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__ShowRecCint_862_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowRecCint_862_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowRecCint_862_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Para_XX::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowRecCint_862_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerP::Para_XX::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowRecCint_862_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Para_XX::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowRecCint_862_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerP::Para_XX::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("Para_XX", 659, G__ShowRecCint_862_0_13, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_XX), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Para_XX", 659, G__ShowRecCint_862_0_14, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_XX), -1, 0, 1, 1, 1, 0, "u 'EdbShowerP::Para_XX' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Para_XX", 785, G__ShowRecCint_862_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowRecCint_862_0_16, (int) ('u'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_XX), -1, 1, 1, 1, 1, 0, "u 'EdbShowerP::Para_XX' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbShowerPcLcLPara_YY(void) {
   /* EdbShowerP::Para_YY */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_YY));
   G__memfunc_setup("Class",502,G__ShowRecCint_863_0_1, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbShowerP::Para_YY::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowRecCint_863_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Para_YY::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowRecCint_863_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbShowerP::Para_YY::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowRecCint_863_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbShowerP::Para_YY::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__ShowRecCint_863_0_5, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__ShowRecCint_863_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__ShowRecCint_863_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowRecCint_863_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowRecCint_863_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Para_YY::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowRecCint_863_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerP::Para_YY::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowRecCint_863_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Para_YY::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowRecCint_863_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerP::Para_YY::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("Para_YY", 661, G__ShowRecCint_863_0_13, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_YY), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Para_YY", 661, G__ShowRecCint_863_0_14, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_YY), -1, 0, 1, 1, 1, 0, "u 'EdbShowerP::Para_YY' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Para_YY", 787, G__ShowRecCint_863_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowRecCint_863_0_16, (int) ('u'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_YY), -1, 1, 1, 1, 1, 0, "u 'EdbShowerP::Para_YY' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbShowerPcLcLPara_PP(void) {
   /* EdbShowerP::Para_PP */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_PP));
   G__memfunc_setup("Class",502,G__ShowRecCint_864_0_1, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbShowerP::Para_PP::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowRecCint_864_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Para_PP::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowRecCint_864_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbShowerP::Para_PP::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowRecCint_864_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbShowerP::Para_PP::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__ShowRecCint_864_0_5, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__ShowRecCint_864_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__ShowRecCint_864_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowRecCint_864_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowRecCint_864_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Para_PP::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowRecCint_864_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerP::Para_PP::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowRecCint_864_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Para_PP::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowRecCint_864_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerP::Para_PP::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("Para_PP", 643, G__ShowRecCint_864_0_13, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_PP), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Para_PP", 643, G__ShowRecCint_864_0_14, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_PP), -1, 0, 1, 1, 1, 0, "u 'EdbShowerP::Para_PP' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Para_PP", 769, G__ShowRecCint_864_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowRecCint_864_0_16, (int) ('u'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_PP), -1, 1, 1, 1, 1, 0, "u 'EdbShowerP::Para_PP' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbShowerPcLcLPara_AS(void) {
   /* EdbShowerP::Para_AS */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_AS));
   G__memfunc_setup("Class",502,G__ShowRecCint_865_0_1, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbShowerP::Para_AS::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowRecCint_865_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Para_AS::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowRecCint_865_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbShowerP::Para_AS::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowRecCint_865_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbShowerP::Para_AS::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__ShowRecCint_865_0_5, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__ShowRecCint_865_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__ShowRecCint_865_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowRecCint_865_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowRecCint_865_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Para_AS::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowRecCint_865_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerP::Para_AS::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowRecCint_865_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Para_AS::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowRecCint_865_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerP::Para_AS::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("Para_AS", 631, G__ShowRecCint_865_0_13, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_AS), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Para_AS", 631, G__ShowRecCint_865_0_14, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_AS), -1, 0, 1, 1, 1, 0, "u 'EdbShowerP::Para_AS' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Para_AS", 757, G__ShowRecCint_865_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowRecCint_865_0_16, (int) ('u'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_AS), -1, 1, 1, 1, 1, 0, "u 'EdbShowerP::Para_AS' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbShowerPcLcLPara_SE(void) {
   /* EdbShowerP::Para_SE */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_SE));
   G__memfunc_setup("Class",502,G__ShowRecCint_866_0_1, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbShowerP::Para_SE::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowRecCint_866_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Para_SE::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowRecCint_866_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbShowerP::Para_SE::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowRecCint_866_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbShowerP::Para_SE::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__ShowRecCint_866_0_5, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__ShowRecCint_866_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__ShowRecCint_866_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowRecCint_866_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowRecCint_866_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Para_SE::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowRecCint_866_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerP::Para_SE::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowRecCint_866_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Para_SE::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowRecCint_866_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerP::Para_SE::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("Para_SE", 635, G__ShowRecCint_866_0_13, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_SE), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Para_SE", 635, G__ShowRecCint_866_0_14, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_SE), -1, 0, 1, 1, 1, 0, "u 'EdbShowerP::Para_SE' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Para_SE", 761, G__ShowRecCint_866_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowRecCint_866_0_16, (int) ('u'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_SE), -1, 1, 1, 1, 1, 0, "u 'EdbShowerP::Para_SE' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbShowerPcLcLPara_ExtraInfo(void) {
   /* EdbShowerP::Para_ExtraInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_ExtraInfo));
   G__memfunc_setup("Class",502,G__ShowRecCint_867_0_1, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbShowerP::Para_ExtraInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowRecCint_867_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Para_ExtraInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowRecCint_867_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbShowerP::Para_ExtraInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowRecCint_867_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbShowerP::Para_ExtraInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__ShowRecCint_867_0_5, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__ShowRecCint_867_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__ShowRecCint_867_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowRecCint_867_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowRecCint_867_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Para_ExtraInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowRecCint_867_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerP::Para_ExtraInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowRecCint_867_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Para_ExtraInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowRecCint_867_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerP::Para_ExtraInfo::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("Para_ExtraInfo", 1395, G__ShowRecCint_867_0_13, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_ExtraInfo), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Para_ExtraInfo", 1395, G__ShowRecCint_867_0_14, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_ExtraInfo), -1, 0, 1, 1, 1, 0, "u 'EdbShowerP::Para_ExtraInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Para_ExtraInfo", 1521, G__ShowRecCint_867_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowRecCint_867_0_16, (int) ('u'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLPara_ExtraInfo), -1, 1, 1, 1, 1, 0, "u 'EdbShowerP::Para_ExtraInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbShowerPcLcLMCInfo_PGun(void) {
   /* EdbShowerP::MCInfo_PGun */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLMCInfo_PGun));
   G__memfunc_setup("Class",502,G__ShowRecCint_868_0_1, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbShowerP::MCInfo_PGun::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowRecCint_868_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::MCInfo_PGun::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowRecCint_868_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbShowerP::MCInfo_PGun::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowRecCint_868_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbShowerP::MCInfo_PGun::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__ShowRecCint_868_0_5, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__ShowRecCint_868_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__ShowRecCint_868_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowRecCint_868_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowRecCint_868_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::MCInfo_PGun::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowRecCint_868_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerP::MCInfo_PGun::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowRecCint_868_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::MCInfo_PGun::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowRecCint_868_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerP::MCInfo_PGun::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("MCInfo_PGun", 1013, G__ShowRecCint_868_0_13, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLMCInfo_PGun), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MCInfo_PGun", 1013, G__ShowRecCint_868_0_14, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLMCInfo_PGun), -1, 0, 1, 1, 1, 0, "u 'EdbShowerP::MCInfo_PGun' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MCInfo_PGun", 1139, G__ShowRecCint_868_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowRecCint_868_0_16, (int) ('u'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLMCInfo_PGun), -1, 1, 1, 1, 1, 0, "u 'EdbShowerP::MCInfo_PGun' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbShowerPcLcLMCInfo_Event(void) {
   /* EdbShowerP::MCInfo_Event */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLMCInfo_Event));
   G__memfunc_setup("Class",502,G__ShowRecCint_869_0_1, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbShowerP::MCInfo_Event::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowRecCint_869_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::MCInfo_Event::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowRecCint_869_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbShowerP::MCInfo_Event::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowRecCint_869_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbShowerP::MCInfo_Event::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__ShowRecCint_869_0_5, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__ShowRecCint_869_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__ShowRecCint_869_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowRecCint_869_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowRecCint_869_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::MCInfo_Event::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowRecCint_869_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerP::MCInfo_Event::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowRecCint_869_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::MCInfo_Event::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowRecCint_869_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerP::MCInfo_Event::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("MCInfo_Event", 1149, G__ShowRecCint_869_0_13, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLMCInfo_Event), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MCInfo_Event", 1149, G__ShowRecCint_869_0_14, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLMCInfo_Event), -1, 0, 1, 1, 1, 0, "u 'EdbShowerP::MCInfo_Event' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MCInfo_Event", 1275, G__ShowRecCint_869_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowRecCint_869_0_16, (int) ('u'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLMCInfo_Event), -1, 1, 1, 1, 1, 0, "u 'EdbShowerP::MCInfo_Event' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbShowerPcLcLReco_ID(void) {
   /* EdbShowerP::Reco_ID */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLReco_ID));
   G__memfunc_setup("Class",502,G__ShowRecCint_870_0_1, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbShowerP::Reco_ID::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowRecCint_870_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Reco_ID::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowRecCint_870_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbShowerP::Reco_ID::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowRecCint_870_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbShowerP::Reco_ID::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__ShowRecCint_870_0_5, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__ShowRecCint_870_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__ShowRecCint_870_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowRecCint_870_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowRecCint_870_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Reco_ID::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowRecCint_870_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerP::Reco_ID::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowRecCint_870_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Reco_ID::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowRecCint_870_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerP::Reco_ID::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("Reco_ID", 629, G__ShowRecCint_870_0_13, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLReco_ID), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Reco_ID", 629, G__ShowRecCint_870_0_14, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLReco_ID), -1, 0, 1, 1, 1, 0, "u 'EdbShowerP::Reco_ID' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Reco_ID", 755, G__ShowRecCint_870_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowRecCint_870_0_16, (int) ('u'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLReco_ID), -1, 1, 1, 1, 1, 0, "u 'EdbShowerP::Reco_ID' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbShowerPcLcLReco_E(void) {
   /* EdbShowerP::Reco_E */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLReco_E));
   G__memfunc_setup("Class",502,G__ShowRecCint_871_0_1, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbShowerP::Reco_E::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowRecCint_871_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Reco_E::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowRecCint_871_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbShowerP::Reco_E::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowRecCint_871_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbShowerP::Reco_E::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__ShowRecCint_871_0_5, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__ShowRecCint_871_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__ShowRecCint_871_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowRecCint_871_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowRecCint_871_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Reco_E::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowRecCint_871_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerP::Reco_E::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowRecCint_871_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Reco_E::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowRecCint_871_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerP::Reco_E::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("Reco_E", 557, G__ShowRecCint_871_0_13, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLReco_E), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Reco_E", 557, G__ShowRecCint_871_0_14, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLReco_E), -1, 0, 1, 1, 1, 0, "u 'EdbShowerP::Reco_E' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Reco_E", 683, G__ShowRecCint_871_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowRecCint_871_0_16, (int) ('u'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLReco_E), -1, 1, 1, 1, 1, 0, "u 'EdbShowerP::Reco_E' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbShowerPcLcLReco_Vtx(void) {
   /* EdbShowerP::Reco_Vtx */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLReco_Vtx));
   G__memfunc_setup("Class",502,G__ShowRecCint_872_0_1, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbShowerP::Reco_Vtx::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowRecCint_872_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Reco_Vtx::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowRecCint_872_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbShowerP::Reco_Vtx::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowRecCint_872_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbShowerP::Reco_Vtx::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__ShowRecCint_872_0_5, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__ShowRecCint_872_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__ShowRecCint_872_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowRecCint_872_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowRecCint_872_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Reco_Vtx::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowRecCint_872_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerP::Reco_Vtx::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowRecCint_872_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerP::Reco_Vtx::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowRecCint_872_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerP::Reco_Vtx::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("Reco_Vtx", 810, G__ShowRecCint_872_0_13, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLReco_Vtx), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Reco_Vtx", 810, G__ShowRecCint_872_0_14, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLReco_Vtx), -1, 0, 1, 1, 1, 0, "u 'EdbShowerP::Reco_Vtx' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Reco_Vtx", 936, G__ShowRecCint_872_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowRecCint_872_0_16, (int) ('u'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerPcLcLReco_Vtx), -1, 1, 1, 1, 1, 0, "u 'EdbShowerP::Reco_Vtx' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbShowAlg(void) {
   /* EdbShowAlg */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg));
   G__memfunc_setup("Set0",348,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowAlg",960,G__ShowRecCint_873_0_2, 105, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowAlg",960,G__ShowRecCint_873_0_3, 105, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - AlgName i - 'Int_t' 0 - AlgValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEdbPVRec",1015,G__ShowRecCint_873_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbPVRec' - 0 - Ali", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInBTArray",1144,G__ShowRecCint_873_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - InBTArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEdbPVRecPIDNumbers",1968,G__ShowRecCint_873_0_6, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - FirstPlate_eAliPID i - 'Int_t' 0 - LastPlate_eAliPID "
"i - 'Int_t' 0 - MiddlePlate_eAliPID i - 'Int_t' 0 - NumberPlate_eAliPID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecoShowerArray",1836,G__ShowRecCint_873_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - RecoShowerArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecoShowerArrayN",1914,G__ShowRecCint_873_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - RecoShowerArrayN", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddRecoShowerArray",1801,G__ShowRecCint_873_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbShowerP' - 0 - shower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetActualAlgParameterset",2439,G__ShowRecCint_873_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ActualAlgParametersetNr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAlgValue",1073,G__ShowRecCint_873_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAlgName",949,G__ShowRecCint_873_0_12, 117, G__get_linked_tagnum(&G__ShowRecCintLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecoShowerArrayN",1902,G__ShowRecCint_873_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecoShowerArray",1824,G__ShowRecCint_873_0_14, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TObjArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetShower",920,G__ShowRecCint_873_0_15, 85, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerP), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUseAliSub",1177,G__ShowRecCint_873_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - UseAliSub", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeltaR_WithPropagation",2235,G__ShowRecCint_873_0_17, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"U 'EdbSegP' - 0 - s U 'EdbSegP' - 0 - stest", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeltaR_WithoutPropagation",2579,G__ShowRecCint_873_0_18, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"U 'EdbSegP' - 0 - s U 'EdbSegP' - 0 - stest", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeltaR_NoPropagation",2012,G__ShowRecCint_873_0_19, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"U 'EdbSegP' - 0 - s U 'EdbSegP' - 0 - stest", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeltaTheta",992,G__ShowRecCint_873_0_20, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"U 'EdbSegP' - 0 - s1 U 'EdbSegP' - 0 - s2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeltaThetaComponentwise",2379,G__ShowRecCint_873_0_21, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"U 'EdbSegP' - 0 - s1 U 'EdbSegP' - 0 - s2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeltaThetaSingleAngles",2204,G__ShowRecCint_873_0_22, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"U 'EdbSegP' - 0 - s1 U 'EdbSegP' - 0 - s2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSpatialDist",1410,G__ShowRecCint_873_0_23, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"U 'EdbSegP' - 0 - s1 U 'EdbSegP' - 0 - s2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMinimumDist",1424,G__ShowRecCint_873_0_24, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"U 'EdbSegP' - 0 - seg1 U 'EdbSegP' - 0 - seg2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParameters",1344,G__ShowRecCint_873_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "F - 'Float_t' 0 - par", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Transform_eAli",1430,G__ShowRecCint_873_0_26, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'EdbSegP' - 0 - InitiatorBT f - 'Float_t' 0 - ExtractSize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInConeTube",1160,G__ShowRecCint_873_0_27, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"U 'EdbSegP' - 0 - sTest U 'EdbSegP' - 0 - sStart "
"d - 'Double_t' 0 - CylinderRadius d - 'Double_t' 0 - ConeAngle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateShowerIDs",1499,G__ShowRecCint_873_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateShowerMetaData",2012,G__ShowRecCint_873_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__ShowRecCint_873_0_30, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintParameters",1569,G__ShowRecCint_873_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintParametersShort",2097,G__ShowRecCint_873_0_32, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintMore",928,G__ShowRecCint_873_0_33, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintAll",806,G__ShowRecCint_873_0_34, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Help",393,G__ShowRecCint_873_0_35, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__ShowRecCint_873_0_36, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Execute",723,G__ShowRecCint_873_0_37, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finalize",818,G__ShowRecCint_873_0_38, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__ShowRecCint_873_0_39, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbShowAlg::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowRecCint_873_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowAlg::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowRecCint_873_0_41, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbShowAlg::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowRecCint_873_0_42, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbShowAlg::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowRecCint_873_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowRecCint_873_0_47, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowAlg::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowRecCint_873_0_48, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowAlg::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowRecCint_873_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowAlg::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowRecCint_873_0_50, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowAlg::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EdbShowAlg", 960, G__ShowRecCint_873_0_51, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg), -1, 0, 1, 1, 1, 0, "u 'EdbShowAlg' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EdbShowAlg", 1086, G__ShowRecCint_873_0_52, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowRecCint_873_0_53, (int) ('u'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg), -1, 1, 1, 1, 1, 0, "u 'EdbShowAlg' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbShowAlg_SA(void) {
   /* EdbShowAlg_SA */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_SA));
   G__memfunc_setup("EdbShowAlg_SA",1203,G__ShowRecCint_874_0_1, 105, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_SA), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__ShowRecCint_874_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Execute",723,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finalize",818,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__ShowRecCint_874_0_6, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbShowAlg_SA::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowRecCint_874_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowAlg_SA::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowRecCint_874_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbShowAlg_SA::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowRecCint_874_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbShowAlg_SA::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowRecCint_874_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowRecCint_874_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowAlg_SA::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowRecCint_874_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowAlg_SA::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowRecCint_874_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowAlg_SA::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowRecCint_874_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowAlg_SA::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EdbShowAlg_SA", 1203, G__ShowRecCint_874_0_18, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_SA), -1, 0, 1, 1, 1, 0, "u 'EdbShowAlg_SA' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EdbShowAlg_SA", 1329, G__ShowRecCint_874_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowRecCint_874_0_20, (int) ('u'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_SA), -1, 1, 1, 1, 1, 0, "u 'EdbShowAlg_SA' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbShowAlg_CA(void) {
   /* EdbShowAlg_CA */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_CA));
   G__memfunc_setup("GetConeTubeDistanceToInBT",2416,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 4, 0, 
"U 'EdbSegP' - 0 - sa U 'EdbSegP' - 0 - s "
"d - 'Double_t' 0 - CylinderRadius d - 'Double_t' 0 - ConeAngle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindPrecedingBTs",1563,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 4, 0, 
"U 'EdbSegP' - 0 - s U 'EdbSegP' - 0 - InBT "
"U 'EdbPVRec' - 0 - gAli U 'EdbShowerP' - 0 - shower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowAlg_CA",1187,G__ShowRecCint_875_0_3, 105, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_CA), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Execute",723,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finalize",818,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__ShowRecCint_875_0_7, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbShowAlg_CA::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowRecCint_875_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowAlg_CA::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowRecCint_875_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbShowAlg_CA::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowRecCint_875_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbShowAlg_CA::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowRecCint_875_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowRecCint_875_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowAlg_CA::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowRecCint_875_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowAlg_CA::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowRecCint_875_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowAlg_CA::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowRecCint_875_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowAlg_CA::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EdbShowAlg_CA", 1187, G__ShowRecCint_875_0_19, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_CA), -1, 0, 1, 1, 1, 0, "u 'EdbShowAlg_CA' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EdbShowAlg_CA", 1313, G__ShowRecCint_875_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowRecCint_875_0_21, (int) ('u'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_CA), -1, 1, 1, 1, 1, 0, "u 'EdbShowAlg_CA' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbShowAlg_OI(void) {
   /* EdbShowAlg_OI */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_OI));
   G__memfunc_setup("FindPrecedingBTs",1563,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 4, 0, 
"U 'EdbSegP' - 0 - s U 'EdbSegP' - 0 - InBT "
"U 'EdbPVRec' - 0 - gAli U 'EdbShowerP' - 0 - shower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowAlg_OI",1207,G__ShowRecCint_876_0_2, 105, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_OI), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Execute",723,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finalize",818,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__ShowRecCint_876_0_6, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbShowAlg_OI::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowRecCint_876_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowAlg_OI::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowRecCint_876_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbShowAlg_OI::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowRecCint_876_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbShowAlg_OI::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowRecCint_876_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowRecCint_876_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowAlg_OI::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowRecCint_876_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowAlg_OI::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowRecCint_876_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowAlg_OI::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowRecCint_876_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowAlg_OI::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EdbShowAlg_OI", 1207, G__ShowRecCint_876_0_18, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_OI), -1, 0, 1, 1, 1, 0, "u 'EdbShowAlg_OI' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EdbShowAlg_OI", 1333, G__ShowRecCint_876_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowRecCint_876_0_20, (int) ('u'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_OI), -1, 1, 1, 1, 1, 0, "u 'EdbShowAlg_OI' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbShowAlg_RC(void) {
   /* EdbShowAlg_RC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_RC));
   G__memfunc_setup("FindPrecedingBTs",1563,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 4, 0, 
"U 'EdbSegP' - 0 - s U 'EdbSegP' - 0 - InBT "
"U 'EdbPVRec' - 0 - gAli U 'EdbShowerP' - 0 - shower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowAlg_RC",1204,G__ShowRecCint_877_0_2, 105, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_RC), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetConeOrTubeDistanceToBTOfShowerArray",3750,G__ShowRecCint_877_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 5, 1, 1, 0, 
"U 'EdbSegP' - 0 - sa U 'EdbSegP' - 0 - InBT "
"U 'EdbShowerP' - 0 - shower d - 'Double_t' 0 - CylinderRadius "
"d - 'Double_t' 0 - ConeAngle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Execute",723,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finalize",818,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__ShowRecCint_877_0_7, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbShowAlg_RC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowRecCint_877_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowAlg_RC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowRecCint_877_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbShowAlg_RC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowRecCint_877_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbShowAlg_RC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowRecCint_877_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowRecCint_877_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowAlg_RC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowRecCint_877_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowAlg_RC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowRecCint_877_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowAlg_RC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowRecCint_877_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowAlg_RC::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EdbShowAlg_RC", 1204, G__ShowRecCint_877_0_19, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_RC), -1, 0, 1, 1, 1, 0, "u 'EdbShowAlg_RC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EdbShowAlg_RC", 1330, G__ShowRecCint_877_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowRecCint_877_0_21, (int) ('u'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_RC), -1, 1, 1, 1, 1, 0, "u 'EdbShowAlg_RC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbShowAlg_GS(void) {
   /* EdbShowAlg_GS */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_GS));
   G__memfunc_setup("EdbShowAlg_GS",1209,G__ShowRecCint_883_0_1, 105, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_GS), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowAlg_GS",1209,G__ShowRecCint_883_0_2, 105, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_GS), -1, 0, 1, 1, 1, 0, "U 'EdbPVRec' - 0 - ali", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__ShowRecCint_883_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInVtxArray",1316,G__ShowRecCint_883_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - InVtxArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInVtx",805,G__ShowRecCint_883_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbVertex' - 0 - vtx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInVtxArrayN",1382,G__ShowRecCint_883_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInVtxArray",1304,G__ShowRecCint_883_0_7, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TObjArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Convert_InVtxArray_To_InBTArray",3077,G__ShowRecCint_883_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Convert_TracksArray_To_InBTArray",3188,G__ShowRecCint_883_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckPairDuplications",2137,G__ShowRecCint_883_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 9, 1, 1, 0, 
"i - 'Int_t' 0 - SegPID i - 'Int_t' 0 - SegID "
"i - 'Int_t' 0 - Seg2PID i - 'Int_t' 0 - Seg2ID "
"U 'TArrayI' - 0 - SegmentPIDArray U 'TArrayI' - 0 - SegmentIDArray "
"U 'TArrayI' - 0 - Segment2PIDArray U 'TArrayI' - 0 - Segment2IDArray "
"i - - 0 - RecoShowerArrayN", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcIP",524,G__ShowRecCint_883_0_11, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 1, 0, 
"U 'EdbSegP' - 0 - s d - - 0 - x "
"d - - 0 - y d - - 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcIP",524,G__ShowRecCint_883_0_12, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"U 'EdbSegP' - 0 - s U 'EdbVertex' - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsPossibleFakeDoublet",2115,G__ShowRecCint_883_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'EdbSegP' - 0 - s1 U 'EdbSegP' - 0 - s2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindPairs",896,G__ShowRecCint_883_0_14, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TObjArray), -1, 0, 2, 1, 1, 0, 
"U 'EdbSegP' - 0 - InBT U 'EdbPVRec' - 0 - eAli_Sub", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckCleanPairs",1472,G__ShowRecCint_883_0_15, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TObjArray), -1, 0, 2, 1, 1, 0, 
"U 'EdbSegP' - 0 - InBT U 'TObjArray' - 0 - RecoShowerArrayFromFindPairs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Execute",723,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finalize",818,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__ShowRecCint_883_0_19, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbShowAlg_GS::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowRecCint_883_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowAlg_GS::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowRecCint_883_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbShowAlg_GS::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowRecCint_883_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbShowAlg_GS::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowRecCint_883_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowRecCint_883_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowAlg_GS::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowRecCint_883_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowAlg_GS::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowRecCint_883_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowAlg_GS::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowRecCint_883_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowAlg_GS::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EdbShowAlg_GS", 1209, G__ShowRecCint_883_0_31, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_GS), -1, 0, 1, 1, 1, 0, "u 'EdbShowAlg_GS' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EdbShowAlg_GS", 1335, G__ShowRecCint_883_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowRecCint_883_0_33, (int) ('u'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_GS), -1, 1, 1, 1, 1, 0, "u 'EdbShowAlg_GS' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbShowAlg_NN(void) {
   /* EdbShowAlg_NN */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_NN));
   G__memfunc_setup("EdbShowAlg_NN",1211,G__ShowRecCint_884_0_1, 105, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_NN), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__ShowRecCint_884_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateANNTree",1217,G__ShowRecCint_884_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNSegBeforeAndAfter",2021,G__ShowRecCint_884_0_4, 105, -1, G__defined_typename("Int_t"), 0, 5, 1, 1, 0, 
"U 'EdbPVRec' - 0 - local_gAli i - 'Int_t' 0 - patterloop_cnt "
"U 'EdbSegP' - 0 - seg i - 'Int_t' 0 - n_patterns "
"i - 'Int_t' 0 - BeforeOrAfter", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMeansBeforeAndAfter",2156,G__ShowRecCint_884_0_5, 105, -1, G__defined_typename("Int_t"), 0, 7, 1, 1, 0, 
"f - 'Float_t' 1 - mean_dT f - 'Float_t' 1 - mean_dR "
"U 'EdbPVRec' - 0 - local_gAli i - 'Int_t' 0 - patterloop_cnt "
"U 'EdbSegP' - 0 - seg i - 'Int_t' 0 - n_patterns "
"i - 'Int_t' 0 - BeforeOrAfter", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMinsBeforeAndAfter",2063,G__ShowRecCint_884_0_6, 105, -1, G__defined_typename("Int_t"), 0, 7, 1, 1, 0, 
"f - 'Float_t' 1 - min_dT f - 'Float_t' 1 - min_dR "
"U 'EdbPVRec' - 0 - local_gAli i - 'Int_t' 0 - patterloop_cnt "
"U 'EdbSegP' - 0 - seg i - 'Int_t' 0 - n_patterns "
"i - 'Int_t' 0 - BeforeOrAfter", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Create_NN_ALG_MLP",1482,G__ShowRecCint_884_0_7, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TMultiLayerPerceptron), -1, 0, 2, 1, 1, 0, 
"U 'TTree' - 0 - inputtree i - 'Int_t' 0 - inputneurons", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadANNWeights",1336,G__ShowRecCint_884_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadANNWeights",1336,G__ShowRecCint_884_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TMultiLayerPerceptron' - 0 - TMlpANN u 'TString' - 0 - WeightFileString", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetANNWeightString",1768,G__ShowRecCint_884_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWeightFileString",1931,G__ShowRecCint_884_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - WeightFileString", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWeightFileString",1919,G__ShowRecCint_884_0_12, 117, G__get_linked_tagnum(&G__ShowRecCintLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Execute",723,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finalize",818,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__ShowRecCint_884_0_16, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbShowAlg_NN::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowRecCint_884_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowAlg_NN::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowRecCint_884_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbShowAlg_NN::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowRecCint_884_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbShowAlg_NN::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowRecCint_884_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowRecCint_884_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowAlg_NN::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowRecCint_884_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowAlg_NN::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowRecCint_884_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowAlg_NN::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowRecCint_884_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowAlg_NN::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EdbShowAlg_NN", 1211, G__ShowRecCint_884_0_28, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_NN), -1, 0, 1, 1, 1, 0, "u 'EdbShowAlg_NN' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EdbShowAlg_NN", 1337, G__ShowRecCint_884_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowRecCint_884_0_30, (int) ('u'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlg_NN), -1, 1, 1, 1, 1, 0, "u 'EdbShowAlg_NN' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbShowAlgE(void) {
   /* EdbShowAlgE */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgE));
   G__memfunc_setup("Set0",348,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'TString' - 0 - ParaName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateInputHistos",1758,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillInputHistosPara_XX",2212,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateMLPLayout",1467,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__ShowRecCintLN_TString), -1, 0, 1, 1, 4, 0, "i - 'Int_t' 0 - NrOfANNInputNeurons", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearPlateBinning",1698,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetWeightFileNameArray",2411,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddWeightFilePlate",1767,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"u 'TString' - 0 - tmpString i - 'Int_t' 0 - dospec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckStringToShowAlgEParaName",2839,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "u 'TString' - 0 - tmpString2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastBinHistoFilles",2099,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 1, 1, 4, 0, "U 'TH1' - 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowAlgE",1029,G__ShowRecCint_885_0_12, 105, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgE), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowAlgE",1029,G__ShowRecCint_885_0_13, 105, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgE), -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - ShowAlgEParaName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowAlgE",1029,G__ShowRecCint_885_0_14, 105, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgE), -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - RecoShowerArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowAlgE",1029,G__ShowRecCint_885_0_15, 105, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgE), -1, 0, 2, 1, 1, 0, 
"U 'TObjArray' - 0 - RecoShowerArray u 'TString' - 0 - ShowAlgEParaName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecoShowerArray",1836,G__ShowRecCint_885_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - RecoShowerArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMLPLayout",1171,G__ShowRecCint_885_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - layout", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMLPWeightFileName",1918,G__ShowRecCint_885_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - weightfilename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMLPInputFileName",1830,G__ShowRecCint_885_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - MLP_InputFileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMLPTrainEpochs",1653,G__ShowRecCint_885_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nep", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMLPArrayN",1122,G__ShowRecCint_885_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - MLPArrayN", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPlatesN",995,G__ShowRecCint_885_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ShowAlgEPlatesN", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDoTrain",989,G__ShowRecCint_885_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDoRun",788,G__ShowRecCint_885_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInputHistosPara",1850,G__ShowRecCint_885_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ParaType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInputHistosPara_FJ",2089,G__ShowRecCint_885_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInputHistosPara_YC",2101,G__ShowRecCint_885_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInputHistosPara_XX",2121,G__ShowRecCint_885_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInputHistosPara_YY",2123,G__ShowRecCint_885_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWriteMLPWeightFile",2056,G__ShowRecCint_885_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWriteMLPInputFile",1968,G__ShowRecCint_885_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetReadMLPInputFile",1825,G__ShowRecCint_885_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadMLPInputFile",1525,G__ShowRecCint_885_0_33, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteMLPInputFile",1668,G__ShowRecCint_885_0_34, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMLP",521,G__ShowRecCint_885_0_35, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TMultiLayerPerceptron), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistInANN",1100,G__ShowRecCint_885_0_36, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TH1F), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - nr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMLPLayout",1159,G__ShowRecCint_885_0_37, 117, G__get_linked_tagnum(&G__ShowRecCintLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMLPWeightFileName",1906,G__ShowRecCint_885_0_38, 117, G__get_linked_tagnum(&G__ShowRecCintLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMLPInputFileName",1818,G__ShowRecCint_885_0_39, 117, G__get_linked_tagnum(&G__ShowRecCintLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMLPTrainEpochs",1653,G__ShowRecCint_885_0_40, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistoCanvas",1411,G__ShowRecCint_885_0_41, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TCanvas), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__ShowRecCint_885_0_42, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__ShowRecCint_885_0_43, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Execute",723,G__ShowRecCint_885_0_44, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finalize",818,G__ShowRecCint_885_0_45, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Create_MLP",924,G__ShowRecCint_885_0_46, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Create_MLPTree",1324,G__ShowRecCint_885_0_47, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill_MLPTree",1119,G__ShowRecCint_885_0_48, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TESTRUN",565,G__ShowRecCint_885_0_49, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInputHistos",1462,G__ShowRecCint_885_0_50, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TH1F' - 0 - h i - 'Int_t' 0 - nbin "
"d - 'Double_t' 0 - lower d - 'Double_t' 0 - upper", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateStandardWeightFileStrings",3159,G__ShowRecCint_885_0_51, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateStandardMLPArrayN",2235,G__ShowRecCint_885_0_52, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintWeightFileStrings",2271,G__ShowRecCint_885_0_53, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetPlateBinning",1726,G__ShowRecCint_885_0_54, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckPlateAndPlateBinning",2466,G__ShowRecCint_885_0_55, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - Plate", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddWeightFile",1265,G__ShowRecCint_885_0_56, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TString' - 0 - tmpString i - 'Int_t' 0 - Plate "
"u 'TString' - 0 - tmpString2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateMLPLayouts",1582,G__ShowRecCint_885_0_57, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateMLPLayouts_FJ",1821,G__ShowRecCint_885_0_58, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateMLPLayouts_LT",1837,G__ShowRecCint_885_0_59, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateMLPLayouts_YC",1833,G__ShowRecCint_885_0_60, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateMLPLayouts_JC",1818,G__ShowRecCint_885_0_61, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateMLPLayouts_XX",1853,G__ShowRecCint_885_0_62, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateMLPLayouts_YY",1855,G__ShowRecCint_885_0_63, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateMLPLayout_YC",1718,G__ShowRecCint_885_0_64, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateMLPLayout_XX",1738,G__ShowRecCint_885_0_65, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateMLPLayout_YY",1740,G__ShowRecCint_885_0_66, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillInputNeuronsArray_YC",2427,G__ShowRecCint_885_0_67, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillInputNeuronsArray_XX",2447,G__ShowRecCint_885_0_68, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillInputNeuronsArray_YY",2449,G__ShowRecCint_885_0_69, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateInputNeuronsArray_YC",2632,G__ShowRecCint_885_0_70, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateInputNeuronsArray_XX",2652,G__ShowRecCint_885_0_71, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateInputNeuronsArray_YY",2654,G__ShowRecCint_885_0_72, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateInputNeuronsArray",2381,G__ShowRecCint_885_0_73, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateMLPs",944,G__ShowRecCint_885_0_74, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateMLPArray",1340,G__ShowRecCint_885_0_75, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadMLPWeights",1348,G__ShowRecCint_885_0_76, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadMLPWeights",1348,G__ShowRecCint_885_0_77, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBinsInputHistos",1858,G__ShowRecCint_885_0_78, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBinsInputHistos_YC",2109,G__ShowRecCint_885_0_79, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBinsInputHistos_XX",2129,G__ShowRecCint_885_0_80, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBinsInputHistos_FJ",2097,G__ShowRecCint_885_0_81, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBinsInputHistos_YY",2131,G__ShowRecCint_885_0_82, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillMLP_SimpleTree_YC",1988,G__ShowRecCint_885_0_83, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'EdbShowerP' - 0 - show i - 'Int_t' 0 - ShowAlgEParaNr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillMLP_SimpleTree_YC",1988,G__ShowRecCint_885_0_84, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillMLP_SimpleTree_XX",2008,G__ShowRecCint_885_0_85, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'EdbShowerP' - 0 - show i - 'Int_t' 0 - ShowAlgEParaNr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillMLP_SimpleTree_XX",2008,G__ShowRecCint_885_0_86, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillMLP_SimpleTree_YY",2010,G__ShowRecCint_885_0_87, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'EdbShowerP' - 0 - show i - 'Int_t' 0 - ShowAlgEParaNr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillMLP_SimpleTree_YY",2010,G__ShowRecCint_885_0_88, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillMLP_SimpleTree",1737,G__ShowRecCint_885_0_89, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteMLP_SimpleTree",1869,G__ShowRecCint_885_0_90, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Train",510,G__ShowRecCint_885_0_91, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Run",309,G__ShowRecCint_885_0_92, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DumpWeights",1137,G__ShowRecCint_885_0_93, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMLPArrayNr",1224,G__ShowRecCint_885_0_94, 105, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - NPlToCheck", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadShowAlgEPar",1433,G__ShowRecCint_885_0_95, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ShowRecCint_885_0_96, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbShowAlgE::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowRecCint_885_0_97, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowAlgE::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowRecCint_885_0_98, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbShowAlgE::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowRecCint_885_0_99, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbShowAlgE::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowRecCint_885_0_103, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowRecCint_885_0_104, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowAlgE::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowRecCint_885_0_105, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowAlgE::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowRecCint_885_0_106, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowAlgE::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowRecCint_885_0_107, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowAlgE::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EdbShowAlgE", 1029, G__ShowRecCint_885_0_108, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgE), -1, 0, 1, 1, 1, 0, "u 'EdbShowAlgE' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EdbShowAlgE", 1155, G__ShowRecCint_885_0_109, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowRecCint_885_0_110, (int) ('u'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgE), -1, 1, 1, 1, 1, 0, "u 'EdbShowAlgE' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbShowRec(void) {
   /* EdbShowRec */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowRec));
   G__memfunc_setup("Set0",348,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", "Default Reseting of object pointer adresses", (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", "Default Resetting of internal variables.", (void*) NULL, 0);
   G__memfunc_setup("CheckPlateValues",1604,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPlateNumberValues",2043,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Create_eShowAlgArray",1996,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill_eShowAlgArray",1791,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddAlg",541,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"i - 'Int_t' 0 - AlgType F - 'Float_t' 0 - par", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetShowAlgArray",1719,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetUse_InBTType",1662,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Create_eInBTArray",1636,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Create_eInBTTree",1525,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Cut_eInBTTree_To_InBTArray",2458,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill_eInBTArray",1431,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - 'Int_t' 0 - FilType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill_eInBTArray_ByLinkTracks_eFilename_LinkedTracks",5034,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill_eInBTArray_ByRecoLinkTracks_eAli",3594,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill_eInBTArray_ByBaseTracksOf_eAli",3363,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill_eInBTArray_ByBaseTracksOf_RootFile",3788,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add_INBTCut",961,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"i - 'Int_t' 0 - layer u 'TCut' - 1 - cut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOutNames",1112,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildParametrizations",2205,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildParametrizationsAll",2486,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Write_RecoShowerArray",2154,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TObjArray' - 0 - RecoShowerArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Execute",723,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Finalize",818,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowRec",966,G__ShowRecCint_886_0_26, 105, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowRec), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowRec",966,G__ShowRecCint_886_0_27, 105, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowRec), -1, 0, 1, 1, 1, 0, "U 'EdbPVRec' - 0 - gAli", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowRec",966,G__ShowRecCint_886_0_28, 105, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowRec), -1, 0, 2, 1, 1, 0, 
"U 'EdbPVRec' - 0 - gAli U 'TObjArray' - 0 - InBTArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowRec",966,G__ShowRecCint_886_0_29, 105, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowRec), -1, 0, 3, 1, 1, 0, 
"U 'EdbPVRec' - 0 - gAli U 'TObjArray' - 0 - InBTArray "
"U 'EdbShowAlg' - 0 - StandardAlg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowRec",966,G__ShowRecCint_886_0_30, 105, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowRec), -1, 0, 3, 1, 1, 0, 
"U 'EdbPVRec' - 0 - gAli U 'TObjArray' - 0 - InBTArray "
"U 'TObjArray' - 0 - ShowAlgArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowRec",966,G__ShowRecCint_886_0_31, 105, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowRec), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - treebranchFileName u 'TString' - 0 - treebranchName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowRec",966,G__ShowRecCint_886_0_32, 105, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowRec), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - TxtFileName i - 'Int_t' 0 - TxtFileType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reconstruct",1180,G__ShowRecCint_886_0_33, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReconstructTEST",1500,G__ShowRecCint_886_0_34, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReconstructTESTSHORT",1900,G__ShowRecCint_886_0_35, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReconstructTESTSTANDARD",2093,G__ShowRecCint_886_0_36, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReconstructTEST_CA",1727,G__ShowRecCint_886_0_37, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReconstructTEST_OI",1747,G__ShowRecCint_886_0_38, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReconstructTEST_NN",1751,G__ShowRecCint_886_0_39, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__ShowRecCint_886_0_40, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetRecoShowerArray",2051,G__ShowRecCint_886_0_41, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetInBTArray",1359,G__ShowRecCint_886_0_42, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDoReconstruction",1985,G__ShowRecCint_886_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - dospec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDoParametrisation",2066,G__ShowRecCint_886_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - dospec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDoId",652,G__ShowRecCint_886_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - dospec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDoEnergy",1097,G__ShowRecCint_886_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - dospec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDoVtxAttach",1398,G__ShowRecCint_886_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - dospec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEdbPVRec",1015,G__ShowRecCint_886_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbPVRec' - 0 - Ali", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetINBTArray",1327,G__ShowRecCint_886_0_49, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInBTArray",1144,G__ShowRecCint_886_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbPVRec' - 0 - Ali", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInBTArray",1144,G__ShowRecCint_886_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbPattern' - 0 - pattern", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInBTArray",1144,G__ShowRecCint_886_0_52, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbTrackP' - 0 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInBTArray",1144,G__ShowRecCint_886_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbSegP' - 0 - seg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInBTArray",1144,G__ShowRecCint_886_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - InBTArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInBTArrayFraction",1966,G__ShowRecCint_886_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - InBTArrayFraction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInBTUseNr",1126,G__ShowRecCint_886_0_56, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - UseNr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetShowAlgArray",1504,G__ShowRecCint_886_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - ShowAlgArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecoShowerArray",1836,G__ShowRecCint_886_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - RecoShowerArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInBTArrayN",1222,G__ShowRecCint_886_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - InBTArrayN", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetShowAlgArrayN",1582,G__ShowRecCint_886_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ShowAlgArrayN", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecoShowerArrayN",1914,G__ShowRecCint_886_0_61, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - RecoShowerArrayN", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFirstPlate",1322,G__ShowRecCint_886_0_62, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - FirstPlate", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLastPlate",1206,G__ShowRecCint_886_0_63, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - LastPlate", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMiddlePlate",1393,G__ShowRecCint_886_0_64, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - MiddlePlate", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumberPlate",1419,G__ShowRecCint_886_0_65, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - NumberPlate", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFirstPlate_eAliPID",2017,G__ShowRecCint_886_0_66, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - FP i - 'Int_t' 0 - StreamTypeStep", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLastPlate_eAliPID",1901,G__ShowRecCint_886_0_67, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - plate i - 'Int_t' 0 - StreamTypeStep", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMiddlePlate_eAliPID",2088,G__ShowRecCint_886_0_68, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - plate i - 'Int_t' 0 - StreamTypeStep", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumberPlate_eAliPID",2114,G__ShowRecCint_886_0_69, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - plate i - 'Int_t' 0 - StreamTypeStep", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetShowName",1102,G__ShowRecCint_886_0_70, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - Name_Out_shower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWriteFileShower",1839,G__ShowRecCint_886_0_71, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - WriteFileShower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTreebranchName",1707,G__ShowRecCint_886_0_72, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - Name_Out_treebranch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetShowFileName",1486,G__ShowRecCint_886_0_73, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - Filename_Out_shower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWriteFileTreebranch",2229,G__ShowRecCint_886_0_74, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - WriteFileTreebranch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTreebranchFileName",2091,G__ShowRecCint_886_0_75, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - Filename_Out_treebranch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSimpleFileName",1687,G__ShowRecCint_886_0_76, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - type i - 'Int_t' 0 - dotype", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDoParaType",1285,G__ShowRecCint_886_0_77, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDoParaType",1285,G__ShowRecCint_886_0_78, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - typestring", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUseAliSub",1177,G__ShowRecCint_886_0_79, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddEdbPVRec",980,G__ShowRecCint_886_0_80, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbPVRec' - 0 - Ali", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddInBTArray",1109,G__ShowRecCint_886_0_81, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - InBTArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddInBT",598,G__ShowRecCint_886_0_82, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbSegP' - 0 - segment", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddInBTArray",1109,G__ShowRecCint_886_0_83, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbSegP' - 0 - segment", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddInBTArray",1109,G__ShowRecCint_886_0_84, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbPattern' - 0 - pattern", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddInBTArray",1109,G__ShowRecCint_886_0_85, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbPVRec' - 0 - volume", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddShowAlgArray",1469,G__ShowRecCint_886_0_86, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - ShowAlgArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddRecoShowerArray",1801,G__ShowRecCint_886_0_87, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - RecoShowerArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEdbPVRec",1003,G__ShowRecCint_886_0_88, 85, G__get_linked_tagnum(&G__ShowRecCintLN_EdbPVRec), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEdbPVRecLoaded",1588,G__ShowRecCint_886_0_89, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInBTArray",1132,G__ShowRecCint_886_0_90, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TObjArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetShowAlgArray",1492,G__ShowRecCint_886_0_91, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TObjArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecoShowerArray",1824,G__ShowRecCint_886_0_92, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TObjArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetShower",920,G__ShowRecCint_886_0_93, 85, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowerP), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInBTArrayN",1210,G__ShowRecCint_886_0_94, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetShowAlgArrayN",1570,G__ShowRecCint_886_0_95, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecoShowerArrayN",1902,G__ShowRecCint_886_0_96, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFirstPlate",1310,G__ShowRecCint_886_0_97, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastPlate",1194,G__ShowRecCint_886_0_98, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMiddlePlate",1381,G__ShowRecCint_886_0_99, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberPlate",1407,G__ShowRecCint_886_0_100, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProposedFirstPlate",2154,G__ShowRecCint_886_0_101, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProposedLastPlate",2038,G__ShowRecCint_886_0_102, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProposedMiddlePlate",2225,G__ShowRecCint_886_0_103, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProposedNumberPlate",2251,G__ShowRecCint_886_0_104, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetShowName",1090,G__ShowRecCint_886_0_105, 117, G__get_linked_tagnum(&G__ShowRecCintLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTreebranchName",1695,G__ShowRecCint_886_0_106, 117, G__get_linked_tagnum(&G__ShowRecCintLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDoParaType",1273,G__ShowRecCint_886_0_107, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Update",611,G__ShowRecCint_886_0_108, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateX",699,G__ShowRecCint_886_0_109, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Check_eInBTArray",1518,G__ShowRecCint_886_0_110, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RecoShowerArray_To_Treebranch",2943,G__ShowRecCint_886_0_111, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Treebranch_To_RecoShowerArray",2943,G__ShowRecCint_886_0_112, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TObjArray' - 0 - showarr U 'TTree' - 0 - treebranch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TxtToRecoShowerArray",2051,G__ShowRecCint_886_0_113, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TxtToRecoShowerArray",2051,G__ShowRecCint_886_0_114, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - TxtFileName i - 'Int_t' 0 - TxtFileType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TxtToRecoShowerArray_FeedBack",2887,G__ShowRecCint_886_0_115, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - TxtFileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TxtToRecoShowerArray_SimpleList",3176,G__ShowRecCint_886_0_116, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - TxtFileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TxtToRecoShowerArray_SimpleListNagoya",3783,G__ShowRecCint_886_0_117, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - TxtFileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TxtToRecoShowerArray_EDAList",2760,G__ShowRecCint_886_0_118, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - TxtFileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteParametrisation_FJ",2349,G__ShowRecCint_886_0_119, 121, -1, -1, 0, 0, 1, 1, 0, "", "0", (void*) NULL, 0);
   G__memfunc_setup("WriteParametrisation_LT",2365,G__ShowRecCint_886_0_120, 121, -1, -1, 0, 0, 1, 1, 0, "", "1", (void*) NULL, 0);
   G__memfunc_setup("WriteParametrisation_YC",2361,G__ShowRecCint_886_0_121, 121, -1, -1, 0, 0, 1, 1, 0, "", "2", (void*) NULL, 0);
   G__memfunc_setup("WriteParametrisation_JC",2346,G__ShowRecCint_886_0_122, 121, -1, -1, 0, 0, 1, 1, 0, "", "3", (void*) NULL, 0);
   G__memfunc_setup("WriteParametrisation_XX",2381,G__ShowRecCint_886_0_123, 121, -1, -1, 0, 0, 1, 1, 0, "", "4", (void*) NULL, 0);
   G__memfunc_setup("WriteParametrisation_YY",2383,G__ShowRecCint_886_0_124, 121, -1, -1, 0, 0, 1, 1, 0, "", "5", (void*) NULL, 0);
   G__memfunc_setup("WriteParametrisation_AS",2353,G__ShowRecCint_886_0_125, 121, -1, -1, 0, 0, 1, 1, 0, "", "7", (void*) NULL, 0);
   G__memfunc_setup("WriteParametrisation_SE",2357,G__ShowRecCint_886_0_126, 121, -1, -1, 0, 0, 1, 1, 0, "", "8", (void*) NULL, 0);
   G__memfunc_setup("WriteParametrisation_ExtraInfo",3117,G__ShowRecCint_886_0_127, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildParametrizationsMCInfo",2745,G__ShowRecCint_886_0_128, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - MCInfoFilename i - 'Int_t' 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildParametrizationsMCInfo_PGun",3218,G__ShowRecCint_886_0_129, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - MCInfoFilename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildParametrizationsMCInfo_Event",3354,G__ShowRecCint_886_0_130, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - MCInfoFilename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteParametrisation_MCInfo_PGun",3218,G__ShowRecCint_886_0_131, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExtendParametrisation_ExtraInfo",3210,G__ShowRecCint_886_0_132, 121, -1, -1, 0, 0, 1, 1, 0, "", "works only if there is a WriteParametrisation_MCInfo_PGun done.", (void*) NULL, 0);
   G__memfunc_setup("WriteRecoShowerArray",2059,G__ShowRecCint_886_0_133, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - RecoShowerArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteRecoShowerArrayWithoutTTree",3299,G__ShowRecCint_886_0_134, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - RecoShowerArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckFilePresence",1683,G__ShowRecCint_886_0_135, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FileExists",1024,G__ShowRecCint_886_0_136, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - strFilename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadShowRecPar",1370,G__ShowRecCint_886_0_137, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__ShowRecCint_886_0_138, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintMore",928,G__ShowRecCint_886_0_139, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintAll",806,G__ShowRecCint_886_0_140, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintRecoShowerArray",2061,G__ShowRecCint_886_0_141, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '-1' entry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintRecoShowerArrayFast",2459,G__ShowRecCint_886_0_142, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '-1' entry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintParametrisation",2112,G__ShowRecCint_886_0_143, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ParaNr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print_UseInBTType",1672,G__ShowRecCint_886_0_144, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print_InBTCut",1253,G__ShowRecCint_886_0_145, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - layer", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print_InBTArray",1464,G__ShowRecCint_886_0_146, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Help",393,G__ShowRecCint_886_0_147, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ShowRecCint_886_0_148, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbShowRec::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowRecCint_886_0_149, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowRec::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowRecCint_886_0_150, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbShowRec::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowRecCint_886_0_151, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbShowRec::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowRecCint_886_0_155, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowRecCint_886_0_156, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowRec::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowRecCint_886_0_157, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowRec::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowRecCint_886_0_158, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowRec::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowRecCint_886_0_159, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowRec::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EdbShowRec", 966, G__ShowRecCint_886_0_160, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowRec), -1, 0, 1, 1, 1, 0, "u 'EdbShowRec' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EdbShowRec", 1092, G__ShowRecCint_886_0_161, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowRecCint_886_0_162, (int) ('u'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowRec), -1, 1, 1, 1, 1, 0, "u 'EdbShowRec' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbShowAlgE_Simple(void) {
   /* EdbShowAlgE_Simple */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgE_Simple));
   G__memfunc_setup("Set0",348,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowAlgE_Simple",1742,G__ShowRecCint_892_0_3, 105, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgE_Simple), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowAlgE_Simple",1742,G__ShowRecCint_892_0_4, 105, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgE_Simple), -1, 0, 1, 1, 1, 0, "U 'EdbTrackP' - 0 - track", "in libShower", (void*) NULL, 0);
   G__memfunc_setup("EdbShowAlgE_Simple",1742,G__ShowRecCint_892_0_5, 105, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgE_Simple), -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - RecoShowerArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecoShowerArray",1836,G__ShowRecCint_892_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - RecoShowerArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecoShowerArrayN",1914,G__ShowRecCint_892_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - RecoShowerArrayN", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecoShowerArrayN",1902,G__ShowRecCint_892_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyArray",1417,G__ShowRecCint_892_0_9, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TArrayF), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyArrayUnCorrected",2535,G__ShowRecCint_892_0_10, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TArrayF), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,G__ShowRecCint_892_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,G__ShowRecCint_892_0_12, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "U 'EdbTrackP' - 0 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPara",676,G__ShowRecCint_892_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbTrackP' - 0 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEffFunc_all",1365,G__ShowRecCint_892_0_14, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TF1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEffFunc_edefault",1894,G__ShowRecCint_892_0_15, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TF1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEffFunc_elletroni",2026,G__ShowRecCint_892_0_16, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TF1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEffFunc_neuchmicro",2121,G__ShowRecCint_892_0_17, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TF1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEffFunc_MiddleFix",1938,G__ShowRecCint_892_0_18, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TF1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEffFunc_LowEff",1631,G__ShowRecCint_892_0_19, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TF1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEffFunc_UserEfficiency",2480,G__ShowRecCint_892_0_20, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TF1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNeuralNetwork",1649,G__ShowRecCint_892_0_21, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TMultiLayerPerceptron), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0' ANNType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrainNeuralNetwork",1871,G__ShowRecCint_892_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - weight i - 'Int_t' 0 '0' ANNType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DumpNeuralNetworkWeight",2383,G__ShowRecCint_892_0_23, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - weight i - 'Int_t' 0 '0' ANNType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCalibrationOffset",2043,G__ShowRecCint_892_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - CalibrationOffset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCalibrationSlope",1943,G__ShowRecCint_892_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - CalibrationSlope", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPlateNumberType",1837,G__ShowRecCint_892_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - PlateNumberType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPlateNumber",1419,G__ShowRecCint_892_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - PlateNumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSpecType",1101,G__ShowRecCint_892_0_28, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - SpecificationType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEfficiencyParametrisationValues",3524,G__ShowRecCint_892_0_29, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - Angles D - 'Double_t' 0 - EffValuesAtAngles", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEfficiencyParametrisation",2900,G__ShowRecCint_892_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TSpline3' - 0 - EfficiencyParametrisation", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEfficiencyParametrisation",2888,G__ShowRecCint_892_0_31, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TSpline3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintEfficiencyParametrisation",3125,G__ShowRecCint_892_0_32, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEfficiencyParametrisationAngles",3502,G__ShowRecCint_892_0_33, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWeightFileString",1931,G__ShowRecCint_892_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - weightstring", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitStrings",1150,G__ShowRecCint_892_0_35, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindClosestEfficiencyParametrization",3725,G__ShowRecCint_892_0_36, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - TestAngle d - 'Double_t' 0 - ReferenceEff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNplIndexNr",1282,G__ShowRecCint_892_0_37, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - sh_npl i - 'Int_t' 1 - check_Npl_index "
"i - 'Int_t' 0 - ePlateNumberType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSpecifications",1748,G__ShowRecCint_892_0_38, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSpecifications",1760,G__ShowRecCint_892_0_39, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - sp0 i - 'Int_t' 0 - sp1 "
"i - 'Int_t' 0 - sp2 i - 'Int_t' 0 - sp3 "
"i - 'Int_t' 0 - sp4 i - 'Int_t' 0 - sp5", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSpecificationType",2063,G__ShowRecCint_892_0_40, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - SpecificationType i - 'Int_t' 0 - SpecificationTypeVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintSpecifications",1985,G__ShowRecCint_892_0_41, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadSpecificationWeightFile",2729,G__ShowRecCint_892_0_42, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadCorrectionFactors",2150,G__ShowRecCint_892_0_43, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TString' - 0 - weigthstring f - 'Float_t' 1 - p0 "
"f - 'Float_t' 1 - p1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateANN",817,G__ShowRecCint_892_0_44, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Update",611,G__ShowRecCint_892_0_45, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoRun",488,G__ShowRecCint_892_0_46, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoRun",488,G__ShowRecCint_892_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - trackarray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoRun",488,G__ShowRecCint_892_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbTrackP' - 0 - shower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadTables",983,G__ShowRecCint_892_0_49, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadTables_Energy",1696,G__ShowRecCint_892_0_50, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteNewRootFile",1625,G__ShowRecCint_892_0_51, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__ShowRecCint_892_0_52, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Help",393,G__ShowRecCint_892_0_53, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ShowRecCint_892_0_54, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbShowAlgE_Simple::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowRecCint_892_0_55, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowAlgE_Simple::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowRecCint_892_0_56, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbShowAlgE_Simple::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowRecCint_892_0_57, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbShowAlgE_Simple::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowRecCint_892_0_61, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowRecCint_892_0_62, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowAlgE_Simple::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowRecCint_892_0_63, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowAlgE_Simple::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowRecCint_892_0_64, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowAlgE_Simple::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowRecCint_892_0_65, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowAlgE_Simple::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EdbShowAlgE_Simple", 1742, G__ShowRecCint_892_0_66, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgE_Simple), -1, 0, 1, 1, 1, 0, "u 'EdbShowAlgE_Simple' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EdbShowAlgE_Simple", 1868, G__ShowRecCint_892_0_67, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowRecCint_892_0_68, (int) ('u'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgE_Simple), -1, 1, 1, 1, 1, 0, "u 'EdbShowAlgE_Simple' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbShowAlgClean(void) {
   /* EdbShowAlgClean */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgClean));
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set0",348,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowAlgClean",1443,G__ShowRecCint_893_0_3, 105, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgClean), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowAlgClean",1443,G__ShowRecCint_893_0_4, 105, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgClean), -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - Source", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowAlgClean",1443,G__ShowRecCint_893_0_5, 105, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgClean), -1, 0, 2, 1, 1, 0, 
"U 'TObjArray' - 0 - Source U 'TObjArray' - 0 - Dirt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowAlgClean",1443,G__ShowRecCint_893_0_6, 105, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgClean), -1, 0, 3, 1, 1, 0, 
"U 'TObjArray' - 0 - Source U 'TObjArray' - 0 - Dirt "
"U 'TObjArray' - 0 - Target", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSource",913,G__ShowRecCint_893_0_7, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TObjArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDirt",691,G__ShowRecCint_893_0_8, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TObjArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTarget",903,G__ShowRecCint_893_0_9, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TObjArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSource",925,G__ShowRecCint_893_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - Source", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDirt",703,G__ShowRecCint_893_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - Dirt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTarget",915,G__ShowRecCint_893_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - Target", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSource",925,G__ShowRecCint_893_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbShowerP' - 0 - SourceShower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDirt",703,G__ShowRecCint_893_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbTrackP' - 0 - DirtTrack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTarget",915,G__ShowRecCint_893_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbShowerP' - 0 - TargetShower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCleaningType",1519,G__ShowRecCint_893_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - CleaningType i - 'Int_t' 0 - Value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckClassType",1398,G__ShowRecCint_893_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckClassTypeEntries",2128,G__ShowRecCint_893_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemovePassingDirtFromSource",2779,G__ShowRecCint_893_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", "General source/dirt remove function. one cleaning step", (void*) NULL, 0);
   G__memfunc_setup("RemoveStoppingDirtFromSource",2906,G__ShowRecCint_893_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", "General source/dirt remove function. another cleaning step", (void*) NULL, 0);
   G__memfunc_setup("SimpleRemoveTrackSegmentsFromShower",3615,G__ShowRecCint_893_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", "source = shower; dirt = track;", (void*) NULL, 0);
   G__memfunc_setup("SimpleRemoveTrackSegmentsFromShower",3615,G__ShowRecCint_893_0_22, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"U 'EdbShowerP' - 0 - shower U 'EdbTrackP' - 0 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SimpleRemoveDoubleBTViewOverlap",3133,G__ShowRecCint_893_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", "source = shower; dirt = shower;", (void*) NULL, 0);
   G__memfunc_setup("SimpleRemoveDoubleBTViewOverlap",3133,G__ShowRecCint_893_0_24, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'EdbShowerP' - 0 - shower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SimpleRemoveBGSegmentsFromShower",3251,G__ShowRecCint_893_0_25, 121, -1, -1, 0, 0, 1, 1, 0, "", "source = shower; dirt = shower;", (void*) NULL, 0);
   G__memfunc_setup("SimpleRemoveBGSegmentsFromShower",3251,G__ShowRecCint_893_0_26, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'EdbShowerP' - 0 - shower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Execute",723,G__ShowRecCint_893_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", "does the actual cleaning steps", (void*) NULL, 0);
   G__memfunc_setup("CompareSegmentsByPosition",2589,G__ShowRecCint_893_0_28, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"U 'EdbSegP' - 0 - s1 U 'EdbSegP' - 0 - s2 "
"i - 'Int_t' 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__ShowRecCint_893_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Help",393,G__ShowRecCint_893_0_30, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ShowRecCint_893_0_31, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbShowAlgClean::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowRecCint_893_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowAlgClean::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowRecCint_893_0_33, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbShowAlgClean::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowRecCint_893_0_34, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbShowAlgClean::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowRecCint_893_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowRecCint_893_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowAlgClean::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowRecCint_893_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowAlgClean::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowRecCint_893_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowAlgClean::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowRecCint_893_0_42, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowAlgClean::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EdbShowAlgClean", 1443, G__ShowRecCint_893_0_43, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgClean), -1, 0, 1, 1, 1, 0, "u 'EdbShowAlgClean' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EdbShowAlgClean", 1569, G__ShowRecCint_893_0_44, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowRecCint_893_0_45, (int) ('u'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgClean), -1, 1, 1, 1, 1, 0, "u 'EdbShowAlgClean' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbShowAlgID_E_G_Simple(void) {
   /* EdbShowAlgID_E_G_Simple */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgID_E_G_Simple));
   G__memfunc_setup("Set0",348,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowAlgID_E_G_Simple",2144,G__ShowRecCint_894_0_2, 105, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgID_E_G_Simple), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowAlgID_E_G_Simple",2144,G__ShowRecCint_894_0_3, 105, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgID_E_G_Simple), -1, 0, 1, 1, 1, 0, "U 'EdbShowerP' - 0 - shower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowAlgID_E_G_Simple",2144,G__ShowRecCint_894_0_4, 105, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgID_E_G_Simple), -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - RecoShowerArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecoShowerArray",1836,G__ShowRecCint_894_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - RecoShowerArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecoShowerArrayN",1914,G__ShowRecCint_894_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - RecoShowerArrayN", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecoShowerArrayN",1902,G__ShowRecCint_894_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCalibrationOffset",2043,G__ShowRecCint_894_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - CalibrationOffset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCalibrationSlope",1943,G__ShowRecCint_894_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - CalibrationSlope", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWeightFileString",1931,G__ShowRecCint_894_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - weightstring", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindClosestEfficiencyParametrization",3725,G__ShowRecCint_894_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - TestAngle d - 'Double_t' 0 - ReferenceEff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Execute",723,G__ShowRecCint_894_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__ShowRecCint_894_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ShowRecCint_894_0_14, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbShowAlgID_E_G_Simple::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowRecCint_894_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowAlgID_E_G_Simple::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowRecCint_894_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbShowAlgID_E_G_Simple::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowRecCint_894_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbShowAlgID_E_G_Simple::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowRecCint_894_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowRecCint_894_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowAlgID_E_G_Simple::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowRecCint_894_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowAlgID_E_G_Simple::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowRecCint_894_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowAlgID_E_G_Simple::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowRecCint_894_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowAlgID_E_G_Simple::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EdbShowAlgID_E_G_Simple", 2144, G__ShowRecCint_894_0_26, (int) ('i'), 
G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgID_E_G_Simple), -1, 0, 1, 1, 1, 0, "u 'EdbShowAlgID_E_G_Simple' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EdbShowAlgID_E_G_Simple", 2270, G__ShowRecCint_894_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowRecCint_894_0_28, (int) ('u'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowAlgID_E_G_Simple), -1, 1, 1, 1, 1, 0, "u 'EdbShowAlgID_E_G_Simple' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbShowPVRQuality(void) {
   /* EdbShowPVRQuality */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowPVRQuality));
   G__memfunc_setup("Set0",348,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowPVRQuality",1677,G__ShowRecCint_897_0_3, 105, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowPVRQuality), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowPVRQuality",1677,G__ShowRecCint_897_0_4, 105, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowPVRQuality), -1, 0, 1, 1, 1, 0, "U 'EdbPVRec' - 0 - ali", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowPVRQuality",1677,G__ShowRecCint_897_0_5, 105, G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowPVRQuality), -1, 0, 2, 1, 1, 0, 
"U 'EdbPVRec' - 0 - ali f - 'Float_t' 0 - BTDensityTargetLevel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCutMethod",1209,G__ShowRecCint_897_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - CutMethod", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBTDensityLevel",1690,G__ShowRecCint_897_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - BTDensityLevel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBTDensityLevelCalcMethodMC",2814,G__ShowRecCint_897_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - BTDensityLevelCalcMethodMC", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBTDensityLevelCalcMethodMCConfirmation",4071,G__ShowRecCint_897_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - BTDensityLevelCalcMethodMCConfirmationNumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBTDensityLevelCalcMethodMC",2802,G__ShowRecCint_897_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBTDensityLevelCalcMethodMCConfirmation",4059,G__ShowRecCint_897_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEdbPVRec",1003,G__ShowRecCint_897_0_12, 85, G__get_linked_tagnum(&G__ShowRecCintLN_EdbPVRec), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEdbPVRec",1003,G__ShowRecCint_897_0_13, 85, G__get_linked_tagnum(&G__ShowRecCintLN_EdbPVRec), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - EdbPVRecType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEdbPVRec",1003,G__ShowRecCint_897_0_14, 85, G__get_linked_tagnum(&G__ShowRecCintLN_EdbPVRec), -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - NeedModified", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEdbPVRec_orig",1531,G__ShowRecCint_897_0_15, 85, G__get_linked_tagnum(&G__ShowRecCintLN_EdbPVRec), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEdbPVRec_modified",1931,G__ShowRecCint_897_0_16, 85, G__get_linked_tagnum(&G__ShowRecCintLN_EdbPVRec), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEdbPVRec",1015,G__ShowRecCint_897_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbPVRec' - 0 - Ali_orig", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistChi2W",1109,G__ShowRecCint_897_0_18, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TH2F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistYX",873,G__ShowRecCint_897_0_19, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TH2F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCutMethod",1197,G__ShowRecCint_897_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCutMethodIsDone",1775,G__ShowRecCint_897_0_21, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBTDensityLevel",1678,G__ShowRecCint_897_0_22, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCutp0",748,G__ShowRecCint_897_0_23, 70, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCutp1",749,G__ShowRecCint_897_0_24, 70, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCutp0",748,G__ShowRecCint_897_0_25, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - patNR", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCutp1",749,G__ShowRecCint_897_0_26, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - patNR", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetagreementChi2CutMeanChi2",2577,G__ShowRecCint_897_0_27, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetagreementChi2CutRMSChi2",2434,G__ShowRecCint_897_0_28, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetagreementChi2CutMeanW",2338,G__ShowRecCint_897_0_29, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetagreementChi2CutRMSW",2195,G__ShowRecCint_897_0_30, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetagreementChi2Cut",1866,G__ShowRecCint_897_0_31, 70, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetagreementChi2Cut",1866,G__ShowRecCint_897_0_32, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - patNR", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHistGeometry_OPERA",2022,G__ShowRecCint_897_0_33, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHistGeometry_MC",1791,G__ShowRecCint_897_0_34, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHistGeometry_OPERAandMC",2473,G__ShowRecCint_897_0_35, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckEdbPVRec",1193,G__ShowRecCint_897_0_36, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Execute_ConstantBTDensity",2546,G__ShowRecCint_897_0_37, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Execute_ConstantQuality",2405,G__ShowRecCint_897_0_38, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Remove_DoubleBT",1470,G__ShowRecCint_897_0_39, 85, G__get_linked_tagnum(&G__ShowRecCintLN_EdbPVRec), -1, 0, 1, 1, 1, 0, "U 'EdbPVRec' - 0 - aliSource", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Remove_Passing",1442,G__ShowRecCint_897_0_40, 85, G__get_linked_tagnum(&G__ShowRecCintLN_EdbPVRec), -1, 0, 1, 1, 1, 0, "U 'EdbPVRec' - 0 - aliSource", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Remove_SegmentArray",1951,G__ShowRecCint_897_0_41, 85, G__get_linked_tagnum(&G__ShowRecCintLN_EdbPVRec), -1, 0, 3, 1, 1, 0, 
"U 'TObjArray' - 0 - segarray U 'EdbPVRec' - 0 '0' aliSource "
"i - 'Int_t' 0 '0' Option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Remove_Segment",1440,G__ShowRecCint_897_0_42, 85, G__get_linked_tagnum(&G__ShowRecCintLN_EdbPVRec), -1, 0, 3, 1, 1, 0, 
"U 'EdbSegP' - 0 - seg U 'EdbPVRec' - 0 '0' aliSource "
"i - 'Int_t' 0 '0' Option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Remove_TrackArray",1729,G__ShowRecCint_897_0_43, 85, G__get_linked_tagnum(&G__ShowRecCintLN_EdbPVRec), -1, 0, 3, 1, 1, 0, 
"U 'TObjArray' - 0 - trackArray U 'EdbPVRec' - 0 '0' aliSource "
"i - 'Int_t' 0 '0' Option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Remove_Track",1218,G__ShowRecCint_897_0_44, 85, G__get_linked_tagnum(&G__ShowRecCintLN_EdbPVRec), -1, 0, 3, 1, 1, 0, 
"U 'EdbTrackP' - 0 - track U 'EdbPVRec' - 0 '0' aliSource "
"i - 'Int_t' 0 '0' Option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackToSegmentArray",1930,G__ShowRecCint_897_0_45, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TObjArray), -1, 0, 1, 1, 1, 0, "U 'EdbTrackP' - 0 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackArrayToSegmentArray",2441,G__ShowRecCint_897_0_46, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TObjArray), -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - trackArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateEdbPVRec",1311,G__ShowRecCint_897_0_47, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckFilledXYSize",1658,G__ShowRecCint_897_0_48, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindFirstBinAbove",1679,G__ShowRecCint_897_0_49, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"U 'TH1' - 0 - hist d - 'Double_t' 0 - threshold "
"i - 'Int_t' 0 - axis", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindLastBinAbove",1563,G__ShowRecCint_897_0_50, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"U 'TH1' - 0 - hist d - 'Double_t' 0 - threshold "
"i - 'Int_t' 0 - axis", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTracksFromLinkedTracksRootFile",3327,G__ShowRecCint_897_0_51, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckSegmentQualityInPattern_ConstBTDens",4021,G__ShowRecCint_897_0_52, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"U 'EdbPVRec' - 0 - ali i - 'Int_t' 0 - PatternAtNr "
"U 'EdbSegP' - 0 - seg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckSegmentQualityInPattern_ConstQual",3880,G__ShowRecCint_897_0_53, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"U 'EdbPVRec' - 0 - ali i - 'Int_t' 0 - PatternAtNr "
"U 'EdbSegP' - 0 - seg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__ShowRecCint_897_0_54, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintCutType",1243,G__ShowRecCint_897_0_55, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintCutType0",1291,G__ShowRecCint_897_0_56, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintCutType1",1292,G__ShowRecCint_897_0_57, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Help",393,G__ShowRecCint_897_0_58, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ShowRecCint_897_0_59, 85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbShowPVRQuality::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowRecCint_897_0_60, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowPVRQuality::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowRecCint_897_0_61, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbShowPVRQuality::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowRecCint_897_0_62, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbShowPVRQuality::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ShowRecCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowRecCint_897_0_66, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowRecCint_897_0_67, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowPVRQuality::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowRecCint_897_0_68, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowPVRQuality::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowRecCint_897_0_69, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowPVRQuality::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowRecCint_897_0_70, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowPVRQuality::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EdbShowPVRQuality", 1677, G__ShowRecCint_897_0_71, (int) ('i'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowPVRQuality), -1, 0, 1, 1, 1, 0, "u 'EdbShowPVRQuality' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EdbShowPVRQuality", 1803, G__ShowRecCint_897_0_72, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowRecCint_897_0_73, (int) ('u'), G__get_linked_tagnum(&G__ShowRecCintLN_EdbShowPVRQuality), -1, 1, 1, 1, 1, 0, "u 'EdbShowPVRQuality' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncShowRecCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalShowRecCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {
}

static void G__cpp_setup_func32() {
}

static void G__cpp_setup_func33() {
}

static void G__cpp_setup_func34() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcShowRecCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
  G__cpp_setup_func32();
  G__cpp_setup_func33();
  G__cpp_setup_func34();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__ShowRecCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__ShowRecCintLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TArrayF = { "TArrayF" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TCut = { "TCut" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TMultiLayerPerceptron = { "TMultiLayerPerceptron" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TProfile = { "TProfile" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TArrayI = { "TArrayI" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbPoint = { "EdbPoint" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbPoint2D = { "EdbPoint2D" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbAngle2D = { "EdbAngle2D" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbTrack2D = { "EdbTrack2D" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbSegP = { "EdbSegP" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbVTA = { "EdbVTA" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbVertex = { "EdbVertex" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbTrackP = { "EdbTrackP" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbPattern = { "EdbPattern" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_listlEVERTEXcLcLRelationmUcOallocatorlEVERTEXcLcLRelationmUgRsPgR = { "list<VERTEX::Relation*,allocator<VERTEX::Relation*> >" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_listlEVERTEXcLcLMassCmUcOallocatorlEVERTEXcLcLMassCmUgRsPgR = { "list<VERTEX::MassC*,allocator<VERTEX::MassC*> >" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_vectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgR = { "vector<VERTEX::Track*,allocator<VERTEX::Track*> >" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_reverse_iteratorlEvectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<VERTEX::Track*,allocator<VERTEX::Track*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbPVRec = { "EdbPVRec" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__ShowRecCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbShowerP = { "EdbShowerP" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbShowerPcLcLPara_FJ = { "EdbShowerP::Para_FJ" , 115 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbShowerPcLcLPara_LT = { "EdbShowerP::Para_LT" , 115 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbShowerPcLcLPara_YC = { "EdbShowerP::Para_YC" , 115 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbShowerPcLcLPara_JC = { "EdbShowerP::Para_JC" , 115 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbShowerPcLcLPara_XX = { "EdbShowerP::Para_XX" , 115 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbShowerPcLcLPara_YY = { "EdbShowerP::Para_YY" , 115 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbShowerPcLcLPara_PP = { "EdbShowerP::Para_PP" , 115 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbShowerPcLcLPara_AS = { "EdbShowerP::Para_AS" , 115 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbShowerPcLcLPara_SE = { "EdbShowerP::Para_SE" , 115 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbShowerPcLcLPara_ExtraInfo = { "EdbShowerP::Para_ExtraInfo" , 115 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbShowerPcLcLMCInfo_PGun = { "EdbShowerP::MCInfo_PGun" , 115 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbShowerPcLcLMCInfo_Event = { "EdbShowerP::MCInfo_Event" , 115 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbShowerPcLcLReco_ID = { "EdbShowerP::Reco_ID" , 115 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbShowerPcLcLReco_E = { "EdbShowerP::Reco_E" , 115 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbShowerPcLcLReco_Vtx = { "EdbShowerP::Reco_Vtx" , 115 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbShowAlg = { "EdbShowAlg" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbShowAlg_SA = { "EdbShowAlg_SA" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbShowAlg_CA = { "EdbShowAlg_CA" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbShowAlg_OI = { "EdbShowAlg_OI" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbShowAlg_RC = { "EdbShowAlg_RC" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbShowAlg_GS = { "EdbShowAlg_GS" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbShowAlg_NN = { "EdbShowAlg_NN" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbShowAlgE = { "EdbShowAlgE" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbShowRec = { "EdbShowRec" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_TSpline3 = { "TSpline3" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbShowAlgE_Simple = { "EdbShowAlgE_Simple" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbShowAlgClean = { "EdbShowAlgClean" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbShowAlgID_E_G_Simple = { "EdbShowAlgID_E_G_Simple" , 99 , -1 };
G__linked_taginfo G__ShowRecCintLN_EdbShowPVRQuality = { "EdbShowPVRQuality" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableShowRecCint() {
  G__ShowRecCintLN_TClass.tagnum = -1 ;
  G__ShowRecCintLN_TBuffer.tagnum = -1 ;
  G__ShowRecCintLN_TMemberInspector.tagnum = -1 ;
  G__ShowRecCintLN_TObject.tagnum = -1 ;
  G__ShowRecCintLN_TString.tagnum = -1 ;
  G__ShowRecCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__ShowRecCintLN_string.tagnum = -1 ;
  G__ShowRecCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__ShowRecCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ShowRecCintLN_TObjArray.tagnum = -1 ;
  G__ShowRecCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__ShowRecCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ShowRecCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__ShowRecCintLN_TFile.tagnum = -1 ;
  G__ShowRecCintLN_TCanvas.tagnum = -1 ;
  G__ShowRecCintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__ShowRecCintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__ShowRecCintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__ShowRecCintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__ShowRecCintLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__ShowRecCintLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__ShowRecCintLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__ShowRecCintLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__ShowRecCintLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__ShowRecCintLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__ShowRecCintLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__ShowRecCintLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__ShowRecCintLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__ShowRecCintLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__ShowRecCintLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__ShowRecCintLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__ShowRecCintLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__ShowRecCintLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__ShowRecCintLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__ShowRecCintLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__ShowRecCintLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__ShowRecCintLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__ShowRecCintLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__ShowRecCintLN_TArrayF.tagnum = -1 ;
  G__ShowRecCintLN_TCut.tagnum = -1 ;
  G__ShowRecCintLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__ShowRecCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ShowRecCintLN_TTree.tagnum = -1 ;
  G__ShowRecCintLN_TMultiLayerPerceptron.tagnum = -1 ;
  G__ShowRecCintLN_TProfile.tagnum = -1 ;
  G__ShowRecCintLN_TArrayI.tagnum = -1 ;
  G__ShowRecCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__ShowRecCintLN_TH1.tagnum = -1 ;
  G__ShowRecCintLN_TH1F.tagnum = -1 ;
  G__ShowRecCintLN_TF1.tagnum = -1 ;
  G__ShowRecCintLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__ShowRecCintLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__ShowRecCintLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__ShowRecCintLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__ShowRecCintLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__ShowRecCintLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__ShowRecCintLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__ShowRecCintLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__ShowRecCintLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__ShowRecCintLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__ShowRecCintLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__ShowRecCintLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__ShowRecCintLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__ShowRecCintLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__ShowRecCintLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__ShowRecCintLN_TH2F.tagnum = -1 ;
  G__ShowRecCintLN_EdbPoint.tagnum = -1 ;
  G__ShowRecCintLN_EdbPoint2D.tagnum = -1 ;
  G__ShowRecCintLN_EdbAngle2D.tagnum = -1 ;
  G__ShowRecCintLN_EdbTrack2D.tagnum = -1 ;
  G__ShowRecCintLN_EdbSegP.tagnum = -1 ;
  G__ShowRecCintLN_EdbVTA.tagnum = -1 ;
  G__ShowRecCintLN_EdbVertex.tagnum = -1 ;
  G__ShowRecCintLN_EdbTrackP.tagnum = -1 ;
  G__ShowRecCintLN_EdbPattern.tagnum = -1 ;
  G__ShowRecCintLN_listlEVERTEXcLcLRelationmUcOallocatorlEVERTEXcLcLRelationmUgRsPgR.tagnum = -1 ;
  G__ShowRecCintLN_listlEVERTEXcLcLMassCmUcOallocatorlEVERTEXcLcLMassCmUgRsPgR.tagnum = -1 ;
  G__ShowRecCintLN_vectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgR.tagnum = -1 ;
  G__ShowRecCintLN_reverse_iteratorlEvectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ShowRecCintLN_EdbPVRec.tagnum = -1 ;
  G__ShowRecCintLN_TH1D.tagnum = -1 ;
  G__ShowRecCintLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__ShowRecCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__ShowRecCintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ShowRecCintLN_EdbShowerP.tagnum = -1 ;
  G__ShowRecCintLN_EdbShowerPcLcLPara_FJ.tagnum = -1 ;
  G__ShowRecCintLN_EdbShowerPcLcLPara_LT.tagnum = -1 ;
  G__ShowRecCintLN_EdbShowerPcLcLPara_YC.tagnum = -1 ;
  G__ShowRecCintLN_EdbShowerPcLcLPara_JC.tagnum = -1 ;
  G__ShowRecCintLN_EdbShowerPcLcLPara_XX.tagnum = -1 ;
  G__ShowRecCintLN_EdbShowerPcLcLPara_YY.tagnum = -1 ;
  G__ShowRecCintLN_EdbShowerPcLcLPara_PP.tagnum = -1 ;
  G__ShowRecCintLN_EdbShowerPcLcLPara_AS.tagnum = -1 ;
  G__ShowRecCintLN_EdbShowerPcLcLPara_SE.tagnum = -1 ;
  G__ShowRecCintLN_EdbShowerPcLcLPara_ExtraInfo.tagnum = -1 ;
  G__ShowRecCintLN_EdbShowerPcLcLMCInfo_PGun.tagnum = -1 ;
  G__ShowRecCintLN_EdbShowerPcLcLMCInfo_Event.tagnum = -1 ;
  G__ShowRecCintLN_EdbShowerPcLcLReco_ID.tagnum = -1 ;
  G__ShowRecCintLN_EdbShowerPcLcLReco_E.tagnum = -1 ;
  G__ShowRecCintLN_EdbShowerPcLcLReco_Vtx.tagnum = -1 ;
  G__ShowRecCintLN_EdbShowAlg.tagnum = -1 ;
  G__ShowRecCintLN_EdbShowAlg_SA.tagnum = -1 ;
  G__ShowRecCintLN_EdbShowAlg_CA.tagnum = -1 ;
  G__ShowRecCintLN_EdbShowAlg_OI.tagnum = -1 ;
  G__ShowRecCintLN_EdbShowAlg_RC.tagnum = -1 ;
  G__ShowRecCintLN_EdbShowAlg_GS.tagnum = -1 ;
  G__ShowRecCintLN_EdbShowAlg_NN.tagnum = -1 ;
  G__ShowRecCintLN_EdbShowAlgE.tagnum = -1 ;
  G__ShowRecCintLN_EdbShowRec.tagnum = -1 ;
  G__ShowRecCintLN_TSpline3.tagnum = -1 ;
  G__ShowRecCintLN_EdbShowAlgE_Simple.tagnum = -1 ;
  G__ShowRecCintLN_EdbShowAlgClean.tagnum = -1 ;
  G__ShowRecCintLN_EdbShowAlgID_E_G_Simple.tagnum = -1 ;
  G__ShowRecCintLN_EdbShowPVRQuality.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableShowRecCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TObject);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TString);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_string);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TFile);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TArrayF);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TCut);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TTree);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TMultiLayerPerceptron);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TProfile);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TArrayI);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TH1);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TH1F);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TF1);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TMatrixTSparseDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TH2F);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbPoint);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbPoint2D);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbAngle2D);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbTrack2D);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbSegP);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbVTA);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbVertex);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbTrackP);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbPattern);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_listlEVERTEXcLcLRelationmUcOallocatorlEVERTEXcLcLRelationmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_listlEVERTEXcLcLMassCmUcOallocatorlEVERTEXcLcLMassCmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_vectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_reverse_iteratorlEvectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbPVRec);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TH1D);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbShowerP),sizeof(EdbShowerP),-1,62720,"Root Class Definition for object EdbShowerP",G__setup_memvarEdbShowerP,G__setup_memfuncEdbShowerP);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbShowerPcLcLPara_FJ),sizeof(EdbShowerP::Para_FJ),-1,0,"maybe it works, when writing //ClassDef hereafter....?",G__setup_memvarEdbShowerPcLcLPara_FJ,G__setup_memfuncEdbShowerPcLcLPara_FJ);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbShowerPcLcLPara_LT),sizeof(EdbShowerP::Para_LT),-1,0,"maybe it works, when writing //ClassDef hereafter....?",G__setup_memvarEdbShowerPcLcLPara_LT,G__setup_memfuncEdbShowerPcLcLPara_LT);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbShowerPcLcLPara_YC),sizeof(EdbShowerP::Para_YC),-1,0,"maybe it works, when writing //ClassDef hereafter....?",G__setup_memvarEdbShowerPcLcLPara_YC,G__setup_memfuncEdbShowerPcLcLPara_YC);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbShowerPcLcLPara_JC),sizeof(EdbShowerP::Para_JC),-1,0,"maybe it works, when writing //ClassDef hereafter....?",G__setup_memvarEdbShowerPcLcLPara_JC,G__setup_memfuncEdbShowerPcLcLPara_JC);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbShowerPcLcLPara_XX),sizeof(EdbShowerP::Para_XX),-1,0,"maybe it works, when writing //ClassDef hereafter....?",G__setup_memvarEdbShowerPcLcLPara_XX,G__setup_memfuncEdbShowerPcLcLPara_XX);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbShowerPcLcLPara_YY),sizeof(EdbShowerP::Para_YY),-1,0,"maybe it works, when writing //ClassDef hereafter....?",G__setup_memvarEdbShowerPcLcLPara_YY,G__setup_memfuncEdbShowerPcLcLPara_YY);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbShowerPcLcLPara_PP),sizeof(EdbShowerP::Para_PP),-1,0,"maybe it works, when writing //ClassDef hereafter....?",G__setup_memvarEdbShowerPcLcLPara_PP,G__setup_memfuncEdbShowerPcLcLPara_PP);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbShowerPcLcLPara_AS),sizeof(EdbShowerP::Para_AS),-1,0,"maybe it works, when writing //ClassDef hereafter....?",G__setup_memvarEdbShowerPcLcLPara_AS,G__setup_memfuncEdbShowerPcLcLPara_AS);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbShowerPcLcLPara_SE),sizeof(EdbShowerP::Para_SE),-1,0,"maybe it works, when writing //ClassDef hereafter....?",G__setup_memvarEdbShowerPcLcLPara_SE,G__setup_memfuncEdbShowerPcLcLPara_SE);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbShowerPcLcLPara_ExtraInfo),sizeof(EdbShowerP::Para_ExtraInfo),-1,0,"maybe it works, when writing //ClassDef hereafter....?",G__setup_memvarEdbShowerPcLcLPara_ExtraInfo,G__setup_memfuncEdbShowerPcLcLPara_ExtraInfo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbShowerPcLcLMCInfo_PGun),sizeof(EdbShowerP::MCInfo_PGun),-1,0,"maybe it works, when writing //ClassDef hereafter....?",G__setup_memvarEdbShowerPcLcLMCInfo_PGun,G__setup_memfuncEdbShowerPcLcLMCInfo_PGun);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbShowerPcLcLMCInfo_Event),sizeof(EdbShowerP::MCInfo_Event),-1,0,"maybe it works, when writing //ClassDef hereafter....?",G__setup_memvarEdbShowerPcLcLMCInfo_Event,G__setup_memfuncEdbShowerPcLcLMCInfo_Event);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbShowerPcLcLReco_ID),sizeof(EdbShowerP::Reco_ID),-1,0,"maybe it works, when writing //ClassDef hereafter....?",G__setup_memvarEdbShowerPcLcLReco_ID,G__setup_memfuncEdbShowerPcLcLReco_ID);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbShowerPcLcLReco_E),sizeof(EdbShowerP::Reco_E),-1,0,"maybe it works, when writing //ClassDef hereafter....?",G__setup_memvarEdbShowerPcLcLReco_E,G__setup_memfuncEdbShowerPcLcLReco_E);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbShowerPcLcLReco_Vtx),sizeof(EdbShowerP::Reco_Vtx),-1,0,"maybe it works, when writing //ClassDef hereafter....?",G__setup_memvarEdbShowerPcLcLReco_Vtx,G__setup_memfuncEdbShowerPcLcLReco_Vtx);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbShowAlg),sizeof(EdbShowAlg),-1,62720,"Root Class Definition for my Objects",G__setup_memvarEdbShowAlg,G__setup_memfuncEdbShowAlg);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbShowAlg_SA),sizeof(EdbShowAlg_SA),-1,62720,"Root Class Definition for my Objects",G__setup_memvarEdbShowAlg_SA,G__setup_memfuncEdbShowAlg_SA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbShowAlg_CA),sizeof(EdbShowAlg_CA),-1,62720,"Root Class Definition for my Objects",G__setup_memvarEdbShowAlg_CA,G__setup_memfuncEdbShowAlg_CA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbShowAlg_OI),sizeof(EdbShowAlg_OI),-1,62720,"Root Class Definition for my Objects",G__setup_memvarEdbShowAlg_OI,G__setup_memfuncEdbShowAlg_OI);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbShowAlg_RC),sizeof(EdbShowAlg_RC),-1,62720,"Root Class Definition for my Objects",G__setup_memvarEdbShowAlg_RC,G__setup_memfuncEdbShowAlg_RC);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbShowAlg_GS),sizeof(EdbShowAlg_GS),-1,62720,"Root Class Definition for my Objects",G__setup_memvarEdbShowAlg_GS,G__setup_memfuncEdbShowAlg_GS);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbShowAlg_NN),sizeof(EdbShowAlg_NN),-1,62720,"Root Class Definition for my Objects",G__setup_memvarEdbShowAlg_NN,G__setup_memfuncEdbShowAlg_NN);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbShowAlgE),sizeof(EdbShowAlgE),-1,62720,"Root Class Definition for my Objects",G__setup_memvarEdbShowAlgE,G__setup_memfuncEdbShowAlgE);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbShowRec),sizeof(EdbShowRec),-1,62720,"Root Class Definition for my Objects",G__setup_memvarEdbShowRec,G__setup_memfuncEdbShowRec);
   G__get_linked_tagnum_fwd(&G__ShowRecCintLN_TSpline3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbShowAlgE_Simple),sizeof(EdbShowAlgE_Simple),-1,62720,"Root Class Definition for my Objects",G__setup_memvarEdbShowAlgE_Simple,G__setup_memfuncEdbShowAlgE_Simple);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbShowAlgClean),sizeof(EdbShowAlgClean),-1,62720,"Root Class Definition for my Objects",G__setup_memvarEdbShowAlgClean,G__setup_memfuncEdbShowAlgClean);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbShowAlgID_E_G_Simple),sizeof(EdbShowAlgID_E_G_Simple),-1,62720,"Root Class Definition for my Objects",G__setup_memvarEdbShowAlgID_E_G_Simple,G__setup_memfuncEdbShowAlgID_E_G_Simple);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowRecCintLN_EdbShowPVRQuality),sizeof(EdbShowPVRQuality),-1,62720,"Root Class Definition for EdbShowPVRQuality",G__setup_memvarEdbShowPVRQuality,G__setup_memfuncEdbShowPVRQuality);
}
extern "C" void G__cpp_setupShowRecCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupShowRecCint()");
  G__set_cpp_environmentShowRecCint();
  G__cpp_setup_tagtableShowRecCint();

  G__cpp_setup_inheritanceShowRecCint();

  G__cpp_setup_typetableShowRecCint();

  G__cpp_setup_memvarShowRecCint();

  G__cpp_setup_memfuncShowRecCint();
  G__cpp_setup_globalShowRecCint();
  G__cpp_setup_funcShowRecCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncShowRecCint();
  return;
}
class G__cpp_setup_initShowRecCint {
  public:
    G__cpp_setup_initShowRecCint() { G__add_setup_func("ShowRecCint",(G__incsetup)(&G__cpp_setupShowRecCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initShowRecCint() { G__remove_setup_func("ShowRecCint"); }
};
G__cpp_setup_initShowRecCint G__cpp_setup_initializerShowRecCint;

