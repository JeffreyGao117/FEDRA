//
// File generated by C:\root_v5.34.38\bin\rootcint.EXE at Tue Jun 02 09:06:33 2020

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME EddDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "EddDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void Edb3DView_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Edb3DView(void *p = 0);
   static void *newArray_Edb3DView(Long_t size, void *p);
   static void delete_Edb3DView(void *p);
   static void deleteArray_Edb3DView(void *p);
   static void destruct_Edb3DView(void *p);
   static void streamer_Edb3DView(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Edb3DView*)
   {
      ::Edb3DView *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Edb3DView >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Edb3DView", ::Edb3DView::Class_Version(), "./EdbDisplayBase.h", 47,
                  typeid(::Edb3DView), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Edb3DView::Dictionary, isa_proxy, 0,
                  sizeof(::Edb3DView) );
      instance.SetNew(&new_Edb3DView);
      instance.SetNewArray(&newArray_Edb3DView);
      instance.SetDelete(&delete_Edb3DView);
      instance.SetDeleteArray(&deleteArray_Edb3DView);
      instance.SetDestructor(&destruct_Edb3DView);
      instance.SetStreamerFunc(&streamer_Edb3DView);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Edb3DView*)
   {
      return GenerateInitInstanceLocal((::Edb3DView*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Edb3DView*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbDisplayBase_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbDisplayBase(void *p = 0);
   static void *newArray_EdbDisplayBase(Long_t size, void *p);
   static void delete_EdbDisplayBase(void *p);
   static void deleteArray_EdbDisplayBase(void *p);
   static void destruct_EdbDisplayBase(void *p);
   static void streamer_EdbDisplayBase(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbDisplayBase*)
   {
      ::EdbDisplayBase *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbDisplayBase >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbDisplayBase", ::EdbDisplayBase::Class_Version(), "./EdbDisplayBase.h", 72,
                  typeid(::EdbDisplayBase), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbDisplayBase::Dictionary, isa_proxy, 0,
                  sizeof(::EdbDisplayBase) );
      instance.SetNew(&new_EdbDisplayBase);
      instance.SetNewArray(&newArray_EdbDisplayBase);
      instance.SetDelete(&delete_EdbDisplayBase);
      instance.SetDeleteArray(&deleteArray_EdbDisplayBase);
      instance.SetDestructor(&destruct_EdbDisplayBase);
      instance.SetStreamerFunc(&streamer_EdbDisplayBase);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbDisplayBase*)
   {
      return GenerateInitInstanceLocal((::EdbDisplayBase*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbDisplayBase*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbSegG_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbSegG(void *p = 0);
   static void *newArray_EdbSegG(Long_t size, void *p);
   static void delete_EdbSegG(void *p);
   static void deleteArray_EdbSegG(void *p);
   static void destruct_EdbSegG(void *p);
   static void streamer_EdbSegG(TBuffer &buf, void *obj);
   static Long64_t merge_EdbSegG(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbSegG*)
   {
      ::EdbSegG *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbSegG >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbSegG", ::EdbSegG::Class_Version(), "./EdbDisplay.h", 196,
                  typeid(::EdbSegG), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbSegG::Dictionary, isa_proxy, 0,
                  sizeof(::EdbSegG) );
      instance.SetNew(&new_EdbSegG);
      instance.SetNewArray(&newArray_EdbSegG);
      instance.SetDelete(&delete_EdbSegG);
      instance.SetDeleteArray(&deleteArray_EdbSegG);
      instance.SetDestructor(&destruct_EdbSegG);
      instance.SetStreamerFunc(&streamer_EdbSegG);
      instance.SetMerge(&merge_EdbSegG);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbSegG*)
   {
      return GenerateInitInstanceLocal((::EdbSegG*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbSegG*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbDisplay_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbDisplay(void *p = 0);
   static void *newArray_EdbDisplay(Long_t size, void *p);
   static void delete_EdbDisplay(void *p);
   static void deleteArray_EdbDisplay(void *p);
   static void destruct_EdbDisplay(void *p);
   static void streamer_EdbDisplay(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbDisplay*)
   {
      ::EdbDisplay *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbDisplay >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbDisplay", ::EdbDisplay::Class_Version(), "./EdbDisplay.h", 21,
                  typeid(::EdbDisplay), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbDisplay::Dictionary, isa_proxy, 0,
                  sizeof(::EdbDisplay) );
      instance.SetNew(&new_EdbDisplay);
      instance.SetNewArray(&newArray_EdbDisplay);
      instance.SetDelete(&delete_EdbDisplay);
      instance.SetDeleteArray(&deleteArray_EdbDisplay);
      instance.SetDestructor(&destruct_EdbDisplay);
      instance.SetStreamerFunc(&streamer_EdbDisplay);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbDisplay*)
   {
      return GenerateInitInstanceLocal((::EdbDisplay*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbDisplay*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbVertexG_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbVertexG(void *p = 0);
   static void *newArray_EdbVertexG(Long_t size, void *p);
   static void delete_EdbVertexG(void *p);
   static void deleteArray_EdbVertexG(void *p);
   static void destruct_EdbVertexG(void *p);
   static void streamer_EdbVertexG(TBuffer &buf, void *obj);
   static Long64_t merge_EdbVertexG(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbVertexG*)
   {
      ::EdbVertexG *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbVertexG >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbVertexG", ::EdbVertexG::Class_Version(), "./EdbDisplay.h", 133,
                  typeid(::EdbVertexG), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbVertexG::Dictionary, isa_proxy, 0,
                  sizeof(::EdbVertexG) );
      instance.SetNew(&new_EdbVertexG);
      instance.SetNewArray(&newArray_EdbVertexG);
      instance.SetDelete(&delete_EdbVertexG);
      instance.SetDeleteArray(&deleteArray_EdbVertexG);
      instance.SetDestructor(&destruct_EdbVertexG);
      instance.SetStreamerFunc(&streamer_EdbVertexG);
      instance.SetMerge(&merge_EdbVertexG);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbVertexG*)
   {
      return GenerateInitInstanceLocal((::EdbVertexG*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbVertexG*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbTrackG_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbTrackG(void *p = 0);
   static void *newArray_EdbTrackG(Long_t size, void *p);
   static void delete_EdbTrackG(void *p);
   static void deleteArray_EdbTrackG(void *p);
   static void destruct_EdbTrackG(void *p);
   static void streamer_EdbTrackG(TBuffer &buf, void *obj);
   static Long64_t merge_EdbTrackG(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbTrackG*)
   {
      ::EdbTrackG *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbTrackG >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbTrackG", ::EdbTrackG::Class_Version(), "./EdbDisplay.h", 160,
                  typeid(::EdbTrackG), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbTrackG::Dictionary, isa_proxy, 0,
                  sizeof(::EdbTrackG) );
      instance.SetNew(&new_EdbTrackG);
      instance.SetNewArray(&newArray_EdbTrackG);
      instance.SetDelete(&delete_EdbTrackG);
      instance.SetDeleteArray(&deleteArray_EdbTrackG);
      instance.SetDestructor(&destruct_EdbTrackG);
      instance.SetStreamerFunc(&streamer_EdbTrackG);
      instance.SetMerge(&merge_EdbTrackG);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbTrackG*)
   {
      return GenerateInitInstanceLocal((::EdbTrackG*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbTrackG*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr Edb3DView::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Edb3DView::Class_Name()
{
   return "Edb3DView";
}

//______________________________________________________________________________
const char *Edb3DView::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Edb3DView*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Edb3DView::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Edb3DView*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Edb3DView::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Edb3DView*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Edb3DView::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Edb3DView*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbDisplayBase::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbDisplayBase::Class_Name()
{
   return "EdbDisplayBase";
}

//______________________________________________________________________________
const char *EdbDisplayBase::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbDisplayBase*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbDisplayBase::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbDisplayBase*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbDisplayBase::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbDisplayBase*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbDisplayBase::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbDisplayBase*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbSegG::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbSegG::Class_Name()
{
   return "EdbSegG";
}

//______________________________________________________________________________
const char *EdbSegG::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbSegG*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbSegG::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbSegG*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbSegG::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbSegG*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbSegG::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbSegG*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbDisplay::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbDisplay::Class_Name()
{
   return "EdbDisplay";
}

//______________________________________________________________________________
const char *EdbDisplay::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbDisplay*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbDisplay::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbDisplay*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbDisplay::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbDisplay*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbDisplay::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbDisplay*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbVertexG::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbVertexG::Class_Name()
{
   return "EdbVertexG";
}

//______________________________________________________________________________
const char *EdbVertexG::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbVertexG*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbVertexG::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbVertexG*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbVertexG::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbVertexG*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbVertexG::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbVertexG*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbTrackG::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbTrackG::Class_Name()
{
   return "EdbTrackG";
}

//______________________________________________________________________________
const char *EdbTrackG::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbTrackG*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbTrackG::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbTrackG*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbTrackG::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbTrackG*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbTrackG::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbTrackG*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void EdbDisplayBase::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbDisplayBase.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> fVx0;
      R__b >> fVy0;
      R__b >> fVz0;
      R__b >> fVx1;
      R__b >> fVy1;
      R__b >> fVz1;
      R__b >> fZoomMode;
      R__b >> fDrawAllViews;
      R__b >> fTheta;
      R__b >> fPhi;
      R__b >> fPsi;
      R__b.ReadStaticArray((double*)fZoomX0);
      R__b.ReadStaticArray((double*)fZoomY0);
      R__b.ReadStaticArray((double*)fZoomX1);
      R__b.ReadStaticArray((double*)fZoomY1);
      R__b >> fZooms;
      R__b >> fStyle;
      R__b >> fLineWidth;
      R__b >> fColorBG;
      R__b >> fView;
      R__b.ReadStaticArray((char*)fTitle);
      R__b >> fTrigPad;
      R__b >> fButtons;
      R__b >> fAllButton;
      R__b >> fEnvButton;
      R__b >> fUndButton;
      R__b >> fAccButton;
      R__b >> fCanButton;
      R__b >> fPickButton;
      R__b >> fZoomButton;
      R__b >> fUnZoomButton;
      R__b >> fArcButton;
      R__b >> fMain;
      R__b >> fHdrVTX;
      R__b >> fOldVTX;
      R__b >> fNewVTX;
      R__b >> fPreVTX;
      R__b >> fVTXTracks;
      R__b >> fOldBut;
      R__b >> fNewBut;
      R__b >> fPreBut;
      int R__i;
      for (R__i = 0; R__i < 50; R__i++)
         R__b >> fRemBut[R__i];
      R__b.ReadStaticArray((char*)fCanvasName);
      R__b >> fDrawDet;
      R__b >> fDetector;
      R__b >> fVTXTRKInfo;
      R__b >> fCanvas;
      R__b >> fCanvasVTX;
      R__b >> fCanvasTRK;
      R__b >> fPad;
      R__b.CheckByteCount(R__s, R__c, EdbDisplayBase::IsA());
   } else {
      R__c = R__b.WriteVersion(EdbDisplayBase::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << fVx0;
      R__b << fVy0;
      R__b << fVz0;
      R__b << fVx1;
      R__b << fVy1;
      R__b << fVz1;
      R__b << fZoomMode;
      R__b << fDrawAllViews;
      R__b << fTheta;
      R__b << fPhi;
      R__b << fPsi;
      R__b.WriteArray(fZoomX0, 30);
      R__b.WriteArray(fZoomY0, 30);
      R__b.WriteArray(fZoomX1, 30);
      R__b.WriteArray(fZoomY1, 30);
      R__b << fZooms;
      R__b << fStyle;
      R__b << fLineWidth;
      R__b << fColorBG;
      R__b << fView;
      R__b.WriteArray(fTitle, 128);
      R__b << fTrigPad;
      R__b << fButtons;
      R__b << fAllButton;
      R__b << fEnvButton;
      R__b << fUndButton;
      R__b << fAccButton;
      R__b << fCanButton;
      R__b << fPickButton;
      R__b << fZoomButton;
      R__b << fUnZoomButton;
      R__b << fArcButton;
      R__b << fMain;
      R__b << fHdrVTX;
      R__b << fOldVTX;
      R__b << fNewVTX;
      R__b << fPreVTX;
      R__b << fVTXTracks;
      R__b << fOldBut;
      R__b << fNewBut;
      R__b << fPreBut;
      int R__i;
      for (R__i = 0; R__i < 50; R__i++)
         R__b << fRemBut[R__i];
      R__b.WriteArray(fCanvasName, 128);
      R__b << fDrawDet;
      R__b << fDetector;
      R__b << fVTXTRKInfo;
      R__b << fCanvas;
      R__b << fCanvasVTX;
      R__b << fCanvasTRK;
      R__b << fPad;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbDisplayBase::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbDisplayBase.
      typedef ::EdbDisplayBase msvc_bug_workaround;
      TClass *R__cl = msvc_bug_workaround::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVx0", &fVx0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVy0", &fVy0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVz0", &fVz0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVx1", &fVx1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVy1", &fVy1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVz1", &fVz1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZoomMode", &fZoomMode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrawAllViews", &fDrawAllViews);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTheta", &fTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhi", &fPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPsi", &fPsi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZoomX0[30]", fZoomX0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZoomY0[30]", fZoomY0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZoomX1[30]", fZoomX1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZoomY1[30]", fZoomY1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZooms", &fZooms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStyle", &fStyle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLineWidth", &fLineWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fColorBG", &fColorBG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fView", &fView);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTitle[128]", fTitle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTrigPad", &fTrigPad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fButtons", &fButtons);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAllButton", &fAllButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEnvButton", &fEnvButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fUndButton", &fUndButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAccButton", &fAccButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCanButton", &fCanButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPickButton", &fPickButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fZoomButton", &fZoomButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fUnZoomButton", &fUnZoomButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fArcButton", &fArcButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMain", &fMain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHdrVTX", &fHdrVTX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOldVTX", &fOldVTX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNewVTX", &fNewVTX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPreVTX", &fPreVTX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVTXTracks", &fVTXTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOldBut", &fOldBut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNewBut", &fNewBut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPreBut", &fPreBut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRemBut[50]", &fRemBut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCanvasName[128]", fCanvasName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrawDet", &fDrawDet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDetector", &fDetector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVTXTRKInfo", &fVTXTRKInfo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCanvas", &fCanvas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCanvasVTX", &fCanvasVTX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCanvasTRK", &fCanvasTRK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPad", &fPad);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbDisplayBase(void *p) {
      return  p ? new(p) ::EdbDisplayBase : new ::EdbDisplayBase;
   }
   static void *newArray_EdbDisplayBase(Long_t nElements, void *p) {
      return p ? new(p) ::EdbDisplayBase[nElements] : new ::EdbDisplayBase[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbDisplayBase(void *p) {
      delete ((::EdbDisplayBase*)p);
   }
   static void deleteArray_EdbDisplayBase(void *p) {
      delete [] ((::EdbDisplayBase*)p);
   }
   static void destruct_EdbDisplayBase(void *p) {
      typedef ::EdbDisplayBase current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbDisplayBase(TBuffer &buf, void *obj) {
      ((::EdbDisplayBase*)obj)->::EdbDisplayBase::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbDisplayBase

//______________________________________________________________________________
void EdbDisplay::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbDisplay.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      EdbDisplayBase::Streamer(R__b);
      R__b >> eDrawTracks;
      R__b >> eDrawVertex;
      R__b >> eColors;
      R__b >> eDZs;
      int R__i;
      for (R__i = 0; R__i < 3; R__i++)
         R__b >> fNumericEntries[R__i];
      R__b >> eFromPlate;
      R__b >> eToPlate;
      R__b >> eVerRec;
      R__b >> eArrSegP;
      R__b >> eArrTr;
      R__b >> eArrV;
      R__b >> eArrSegPSave;
      R__b >> eArrTrSave;
      R__b >> eArrVSave;
      R__b >> eWorking;
      R__b >> eVertex;
      R__b >> ePrevious;
      R__b >> eSegment;
      R__b >> eTrack;
      R__b >> eTrack1;
      R__b >> eTrack2;
      R__b >> eSegPM;
      R__b >> eWait_Answer;
      R__b >> eIndVert;
      R__b >> eIndVertSave;
      eCreatedTracks.Streamer(R__b);
      R__b >> eRadMax;
      R__b >> eDpat;
      R__b >> eImpMax;
      R__b >> eP;
      R__b >> eM;
      R__b >> eTImpMax;
      R__b >> eTProbMin;
      R__b >> eSegWmin;
      R__b >> eArrSegG;
      R__b.CheckByteCount(R__s, R__c, EdbDisplay::IsA());
   } else {
      R__c = R__b.WriteVersion(EdbDisplay::IsA(), kTRUE);
      EdbDisplayBase::Streamer(R__b);
      R__b << eDrawTracks;
      R__b << eDrawVertex;
      R__b << eColors;
      R__b << eDZs;
      int R__i;
      for (R__i = 0; R__i < 3; R__i++)
         R__b << fNumericEntries[R__i];
      R__b << eFromPlate;
      R__b << eToPlate;
      R__b << eVerRec;
      R__b << eArrSegP;
      R__b << eArrTr;
      R__b << eArrV;
      R__b << eArrSegPSave;
      R__b << eArrTrSave;
      R__b << eArrVSave;
      R__b << eWorking;
      R__b << eVertex;
      R__b << ePrevious;
      R__b << eSegment;
      R__b << eTrack;
      R__b << eTrack1;
      R__b << eTrack2;
      R__b << eSegPM;
      R__b << eWait_Answer;
      R__b << eIndVert;
      R__b << eIndVertSave;
      eCreatedTracks.Streamer(R__b);
      R__b << eRadMax;
      R__b << eDpat;
      R__b << eImpMax;
      R__b << eP;
      R__b << eM;
      R__b << eTImpMax;
      R__b << eTProbMin;
      R__b << eSegWmin;
      R__b << eArrSegG;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbDisplay::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbDisplay.
      typedef ::EdbDisplay msvc_bug_workaround;
      TClass *R__cl = msvc_bug_workaround::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eDrawTracks", &eDrawTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eDrawVertex", &eDrawVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eColors", &eColors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eDZs", &eDZs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNumericEntries[3]", &fNumericEntries);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eFromPlate", &eFromPlate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eToPlate", &eToPlate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eVerRec", &eVerRec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eArrSegP", &eArrSegP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eArrTr", &eArrTr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eArrV", &eArrV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eArrSegPSave", &eArrSegPSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eArrTrSave", &eArrTrSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eArrVSave", &eArrVSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eWorking", &eWorking);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eVertex", &eVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ePrevious", &ePrevious);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eSegment", &eSegment);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eTrack", &eTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eTrack1", &eTrack1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eTrack2", &eTrack2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eSegPM", &eSegPM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eWait_Answer", &eWait_Answer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eIndVert", &eIndVert);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eIndVertSave", &eIndVertSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCreatedTracks", &eCreatedTracks);
      R__insp.InspectMember(eCreatedTracks, "eCreatedTracks.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eRadMax", &eRadMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eDpat", &eDpat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eImpMax", &eImpMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eP", &eP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eM", &eM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eTImpMax", &eTImpMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eTProbMin", &eTProbMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eSegWmin", &eSegWmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eArrSegG", &eArrSegG);
      EdbDisplayBase::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbDisplay(void *p) {
      return  p ? new(p) ::EdbDisplay : new ::EdbDisplay;
   }
   static void *newArray_EdbDisplay(Long_t nElements, void *p) {
      return p ? new(p) ::EdbDisplay[nElements] : new ::EdbDisplay[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbDisplay(void *p) {
      delete ((::EdbDisplay*)p);
   }
   static void deleteArray_EdbDisplay(void *p) {
      delete [] ((::EdbDisplay*)p);
   }
   static void destruct_EdbDisplay(void *p) {
      typedef ::EdbDisplay current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbDisplay(TBuffer &buf, void *obj) {
      ((::EdbDisplay*)obj)->::EdbDisplay::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EdbDisplay

//______________________________________________________________________________
void EdbSegG::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbSegG.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TPolyLine3D::Streamer(R__b);
      R__b >> const_cast<  EdbSegP* &>( eSeg );
      R__b >> eD;
      R__b.CheckByteCount(R__s, R__c, EdbSegG::IsA());
   } else {
      R__c = R__b.WriteVersion(EdbSegG::IsA(), kTRUE);
      TPolyLine3D::Streamer(R__b);
      R__b << const_cast<  EdbSegP* &>( eSeg );
      R__b << eD;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbSegG::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbSegG.
      typedef ::EdbSegG msvc_bug_workaround;
      TClass *R__cl = msvc_bug_workaround::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eSeg", &eSeg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eD", &eD);
      TPolyLine3D::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbSegG(void *p) {
      return  p ? new(p) ::EdbSegG : new ::EdbSegG;
   }
   static void *newArray_EdbSegG(Long_t nElements, void *p) {
      return p ? new(p) ::EdbSegG[nElements] : new ::EdbSegG[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbSegG(void *p) {
      delete ((::EdbSegG*)p);
   }
   static void deleteArray_EdbSegG(void *p) {
      delete [] ((::EdbSegG*)p);
   }
   static void destruct_EdbSegG(void *p) {
      typedef ::EdbSegG current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbSegG(TBuffer &buf, void *obj) {
      ((::EdbSegG*)obj)->::EdbSegG::Streamer(buf);
   }
   // Wrapper around the merge function.
   static Long64_t  merge_EdbSegG(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::EdbSegG*)obj)->Merge(coll);
   }
} // end of namespace ROOTDict for class ::EdbSegG

//______________________________________________________________________________
void EdbTrackG::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbTrackG.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TPolyMarker3D::Streamer(R__b);
      R__b >> eTr;
      R__b >> eD;
      R__b.CheckByteCount(R__s, R__c, EdbTrackG::IsA());
   } else {
      R__c = R__b.WriteVersion(EdbTrackG::IsA(), kTRUE);
      TPolyMarker3D::Streamer(R__b);
      R__b << eTr;
      R__b << eD;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbTrackG::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbTrackG.
      typedef ::EdbTrackG msvc_bug_workaround;
      TClass *R__cl = msvc_bug_workaround::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eTr", &eTr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eD", &eD);
      TPolyMarker3D::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbTrackG(void *p) {
      return  p ? new(p) ::EdbTrackG : new ::EdbTrackG;
   }
   static void *newArray_EdbTrackG(Long_t nElements, void *p) {
      return p ? new(p) ::EdbTrackG[nElements] : new ::EdbTrackG[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbTrackG(void *p) {
      delete ((::EdbTrackG*)p);
   }
   static void deleteArray_EdbTrackG(void *p) {
      delete [] ((::EdbTrackG*)p);
   }
   static void destruct_EdbTrackG(void *p) {
      typedef ::EdbTrackG current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbTrackG(TBuffer &buf, void *obj) {
      ((::EdbTrackG*)obj)->::EdbTrackG::Streamer(buf);
   }
   // Wrapper around the merge function.
   static Long64_t  merge_EdbTrackG(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::EdbTrackG*)obj)->Merge(coll);
   }
} // end of namespace ROOTDict for class ::EdbTrackG

//______________________________________________________________________________
void EdbVertexG::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbVertexG.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TPolyMarker3D::Streamer(R__b);
      R__b >> eV;
      R__b >> eD;
      R__b.CheckByteCount(R__s, R__c, EdbVertexG::IsA());
   } else {
      R__c = R__b.WriteVersion(EdbVertexG::IsA(), kTRUE);
      TPolyMarker3D::Streamer(R__b);
      R__b << eV;
      R__b << eD;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EdbVertexG::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbVertexG.
      typedef ::EdbVertexG msvc_bug_workaround;
      TClass *R__cl = msvc_bug_workaround::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eV", &eV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eD", &eD);
      TPolyMarker3D::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbVertexG(void *p) {
      return  p ? new(p) ::EdbVertexG : new ::EdbVertexG;
   }
   static void *newArray_EdbVertexG(Long_t nElements, void *p) {
      return p ? new(p) ::EdbVertexG[nElements] : new ::EdbVertexG[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbVertexG(void *p) {
      delete ((::EdbVertexG*)p);
   }
   static void deleteArray_EdbVertexG(void *p) {
      delete [] ((::EdbVertexG*)p);
   }
   static void destruct_EdbVertexG(void *p) {
      typedef ::EdbVertexG current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EdbVertexG(TBuffer &buf, void *obj) {
      ((::EdbVertexG*)obj)->::EdbVertexG::Streamer(buf);
   }
   // Wrapper around the merge function.
   static Long64_t  merge_EdbVertexG(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::EdbVertexG*)obj)->Merge(coll);
   }
} // end of namespace ROOTDict for class ::EdbVertexG

//______________________________________________________________________________
void Edb3DView::Streamer(TBuffer &R__b)
{
   // Stream an object of class Edb3DView.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TView3D::Streamer(R__b);
      R__b >> fRotateMode;
      R__b.CheckByteCount(R__s, R__c, Edb3DView::IsA());
   } else {
      R__c = R__b.WriteVersion(Edb3DView::IsA(), kTRUE);
      TView3D::Streamer(R__b);
      R__b << fRotateMode;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void Edb3DView::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Edb3DView.
      typedef ::Edb3DView msvc_bug_workaround;
      TClass *R__cl = msvc_bug_workaround::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRotateMode", &fRotateMode);
      TView3D::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Edb3DView(void *p) {
      return  p ? new(p) ::Edb3DView : new ::Edb3DView;
   }
   static void *newArray_Edb3DView(Long_t nElements, void *p) {
      return p ? new(p) ::Edb3DView[nElements] : new ::Edb3DView[nElements];
   }
   // Wrapper around operator delete
   static void delete_Edb3DView(void *p) {
      delete ((::Edb3DView*)p);
   }
   static void deleteArray_Edb3DView(void *p) {
      delete [] ((::Edb3DView*)p);
   }
   static void destruct_Edb3DView(void *p) {
      typedef ::Edb3DView current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_Edb3DView(TBuffer &buf, void *obj) {
      ((::Edb3DView*)obj)->::Edb3DView::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::Edb3DView

/********************************************************
* EddDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtableEddDict();

extern "C" void G__set_cpp_environmentEddDict() {
  G__add_ipath(".");
  G__add_ipath("..\\..\\include");
  G__cpp_reset_tagtableEddDict();
}
#include <new>
extern "C" int G__cpp_dllrevEddDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* Edb3DView */
static int G__EddDict_696_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Edb3DView* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Edb3DView[n];
     } else {
       p = new((void*) gvp) Edb3DView[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Edb3DView;
     } else {
       p = new((void*) gvp) Edb3DView;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EddDictLN_Edb3DView));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_696_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Edb3DView*) G__getstructoffset())->SetRotateMode((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Edb3DView*) G__getstructoffset())->SetRotateMode();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_696_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Edb3DView::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_696_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Edb3DView::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_696_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Edb3DView::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_696_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Edb3DView::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_696_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Edb3DView*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_696_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Edb3DView::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_696_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Edb3DView::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_696_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Edb3DView::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_696_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Edb3DView::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EddDict_696_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Edb3DView* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Edb3DView(*(Edb3DView*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EddDictLN_Edb3DView));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Edb3DView G__TEdb3DView;
static int G__EddDict_696_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Edb3DView*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Edb3DView*) (soff+(sizeof(Edb3DView)*i)))->~G__TEdb3DView();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Edb3DView*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Edb3DView*) (soff))->~G__TEdb3DView();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbDisplayBase */
static int G__EddDict_697_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbDisplayBase* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbDisplayBase[n];
     } else {
       p = new((void*) gvp) EdbDisplayBase[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbDisplayBase;
     } else {
       p = new((void*) gvp) EdbDisplayBase;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EddDictLN_EdbDisplayBase));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbDisplayBase* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbDisplayBase(
(const char*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (TCanvas*) G__int(libp->para[7]));
     } else {
       p = new((void*) gvp) EdbDisplayBase(
(const char*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (TCanvas*) G__int(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbDisplayBase(
(const char*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]));
     } else {
       p = new((void*) gvp) EdbDisplayBase(
(const char*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EddDictLN_EdbDisplayBase));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplayBase*) G__getstructoffset())->Set0();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplayBase*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplayBase*) G__getstructoffset())->Refresh();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplayBase*) G__getstructoffset())->DisplayButtons();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((EdbDisplayBase*) G__getstructoffset())->SetView((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((EdbDisplayBase*) G__getstructoffset())->SetView((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplayBase*) G__getstructoffset())->DrawAllViews();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplayBase*) G__getstructoffset())->DrawViewGL();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplayBase*) G__getstructoffset())->DrawViewX3D();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((EdbDisplayBase*) G__getstructoffset())->DrawTitle((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((EdbDisplayBase*) G__getstructoffset())->DrawTitle();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplayBase*) G__getstructoffset())->DrawPreVTX((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplayBase*) G__getstructoffset())->DrawOldVTX((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplayBase*) G__getstructoffset())->DrawNewVTX((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplayBase*) G__getstructoffset())->DrawPreBut((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplayBase*) G__getstructoffset())->DrawOldBut((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplayBase*) G__getstructoffset())->DrawNewBut((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplayBase*) G__getstructoffset())->ClearPreVTX();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplayBase*) G__getstructoffset())->ClearNewVTX();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplayBase*) G__getstructoffset())->CreateCanvasVTX();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplayBase*) G__getstructoffset())->DrawUnd();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplayBase*) G__getstructoffset())->DrawAcc();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplayBase*) G__getstructoffset())->DrawCan();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplayBase*) G__getstructoffset())->DrawEnv();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((EdbDisplayBase*) G__getstructoffset())->DrawView((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((EdbDisplayBase*) G__getstructoffset())->DrawView((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplayBase*) G__getstructoffset())->SetPickMode();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplayBase*) G__getstructoffset())->SetRange((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplayBase*) G__getstructoffset())->SetZoomMode();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplayBase*) G__getstructoffset())->UnZoom();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplayBase*) G__getstructoffset())->SetRotate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((EdbDisplayBase*) G__getstructoffset())->SetStyle((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((EdbDisplayBase*) G__getstructoffset())->SetStyle();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((EdbDisplayBase*) G__getstructoffset())->SetLineWidth((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((EdbDisplayBase*) G__getstructoffset())->SetLineWidth();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((EdbDisplayBase*) G__getstructoffset())->SetColorBG((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((EdbDisplayBase*) G__getstructoffset())->SetColorBG();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplayBase*) G__getstructoffset())->SetDrawDet((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplayBase*) G__getstructoffset())->SwDrawDet();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const EdbDisplayBase*) G__getstructoffset())->GetDrawDet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplayBase*) G__getstructoffset())->DrawDetector();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplayBase*) G__getstructoffset())->SetDetector((TGeoVolume*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbDisplayBase::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbDisplayBase::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbDisplayBase::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbDisplayBase::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplayBase*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbDisplayBase::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbDisplayBase::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbDisplayBase::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_697_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbDisplayBase::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EddDict_697_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbDisplayBase* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbDisplayBase(*(EdbDisplayBase*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EddDictLN_EdbDisplayBase));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbDisplayBase G__TEdbDisplayBase;
static int G__EddDict_697_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbDisplayBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbDisplayBase*) (soff+(sizeof(EdbDisplayBase)*i)))->~G__TEdbDisplayBase();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbDisplayBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbDisplayBase*) (soff))->~G__TEdbDisplayBase();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EddDict_697_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbDisplayBase* dest = (EdbDisplayBase*) G__getstructoffset();
   *dest = *(EdbDisplayBase*) libp->para[0].ref;
   const EdbDisplayBase& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbSegG */
static int G__EddDict_992_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbSegG* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbSegG[n];
     } else {
       p = new((void*) gvp) EdbSegG[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbSegG;
     } else {
       p = new((void*) gvp) EdbSegG;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EddDictLN_EdbSegG));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_992_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbSegG* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbSegG(*(EdbSegP*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) EdbSegG(*(EdbSegP*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EddDictLN_EdbSegG));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_992_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbSegG* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbSegG((EdbDisplay*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) EdbSegG((EdbDisplay*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EddDictLN_EdbSegG));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_992_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbSegG* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbSegG((Int_t) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) EdbSegG((Int_t) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EddDictLN_EdbSegG));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_992_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbSegG* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbSegG((Int_t) G__int(libp->para[0]), (EdbDisplay*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) EdbSegG((Int_t) G__int(libp->para[0]), (EdbDisplay*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EddDictLN_EdbSegG));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_992_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbSegG*) G__getstructoffset())->SetSeg((EdbSegP*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_992_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbSegG*) G__getstructoffset())->X());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_992_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbSegG*) G__getstructoffset())->Y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_992_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbSegG*) G__getstructoffset())->Z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_992_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbSegG*) G__getstructoffset())->DumpSegment();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_992_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbSegG*) G__getstructoffset())->InspectSegment();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_992_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbSegG*) G__getstructoffset())->AddAsTrackToVertex();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_992_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbSegG*) G__getstructoffset())->AddToNewTrack();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_992_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbSegG*) G__getstructoffset())->AddToNewTrackAndFit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_992_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbSegG*) G__getstructoffset())->RemoveFromTrack();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_992_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbSegG*) G__getstructoffset())->SplitTrack();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_992_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbSegG*) G__getstructoffset())->SetAsWorking();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_992_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbSegG*) G__getstructoffset())->InfoSegVert();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_992_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbSegG*) G__getstructoffset())->InfoSegSeg();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_992_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbSegG::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_992_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbSegG::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_992_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbSegG::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_992_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbSegG::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_992_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbSegG*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_992_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbSegG::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_992_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbSegG::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_992_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbSegG::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_992_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbSegG::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EddDict_992_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbSegG* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbSegG(*(EdbSegG*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EddDictLN_EdbSegG));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbSegG G__TEdbSegG;
static int G__EddDict_992_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbSegG*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbSegG*) (soff+(sizeof(EdbSegG)*i)))->~G__TEdbSegG();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbSegG*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbSegG*) (soff))->~G__TEdbSegG();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbDisplay */
static int G__EddDict_993_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbDisplay* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbDisplay[n];
     } else {
       p = new((void*) gvp) EdbDisplay[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbDisplay;
     } else {
       p = new((void*) gvp) EdbDisplay;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EddDictLN_EdbDisplay));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbDisplay* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbDisplay(
(const char*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (TCanvas*) G__int(libp->para[7]));
     } else {
       p = new((void*) gvp) EdbDisplay(
(const char*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (TCanvas*) G__int(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbDisplay(
(const char*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]));
     } else {
       p = new((void*) gvp) EdbDisplay(
(const char*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EddDictLN_EdbDisplay));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbDisplay* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbDisplay(
(const char*) G__int(libp->para[0]), *(EdbLayer*) libp->para[1].ref
, (TCanvas*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) EdbDisplay(
(const char*) G__int(libp->para[0]), *(EdbLayer*) libp->para[1].ref
, (TCanvas*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbDisplay((const char*) G__int(libp->para[0]), *(EdbLayer*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) EdbDisplay((const char*) G__int(libp->para[0]), *(EdbLayer*) libp->para[1].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EddDictLN_EdbDisplay));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbDisplay::EdbDisplayExist((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplay*) G__getstructoffset())->Delete();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((EdbDisplay*) G__getstructoffset())->GuessRange((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((EdbDisplay*) G__getstructoffset())->GuessRange((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((EdbDisplay*) G__getstructoffset())->GuessRange((float) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((EdbDisplay*) G__getstructoffset())->GuessRange();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplay*) G__getstructoffset())->SetVerRec((EdbVertexRec*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplay*) G__getstructoffset())->SetArrSegG((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplay*) G__getstructoffset())->SetArrSegP((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplay*) G__getstructoffset())->SetArrTr((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplay*) G__getstructoffset())->SetDrawTracks((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbDisplay*) G__getstructoffset())->VerRec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplay*) G__getstructoffset())->TrackDraw((EdbTrackP*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbDisplay*) G__getstructoffset())->SegLine((EdbSegP*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplay*) G__getstructoffset())->DrawRef((float*) G__int(libp->para[0]), (float*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplay*) G__getstructoffset())->SelectVertexTracks((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplay*) G__getstructoffset())->SetArrV((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplay*) G__getstructoffset())->VertexDraw((EdbVertex*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplay*) G__getstructoffset())->SetDrawVertex((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplay*) G__getstructoffset())->CancelModifiedVTX();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplay*) G__getstructoffset())->DeleteModifiedVTX();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplay*) G__getstructoffset())->AcceptModifiedVTX();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplay*) G__getstructoffset())->DialogModifiedVTX();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplay*) G__getstructoffset())->CloseDialogModifiedVTX();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplay*) G__getstructoffset())->UndoModifiedVTX();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplay*) G__getstructoffset())->DrawVertexEnvironment();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplay*) G__getstructoffset())->DrawAllObjects();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((EdbDisplay*) G__getstructoffset())->DrawVTXTracks((char*) G__int(libp->para[0]), (EdbVertex*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((EdbDisplay*) G__getstructoffset())->DrawVTXTracks((char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((EdbDisplay*) G__getstructoffset())->RemoveTrackFromTable((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((EdbDisplay*) G__getstructoffset())->RemoveTrackFromTable();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplay*) G__getstructoffset())->DialogNeighborParameters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplay*) G__getstructoffset())->AcceptModifiedParams();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplay*) G__getstructoffset())->CloseDialogModifiedParams();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplay*) G__getstructoffset())->CancelDialogModifiedParams();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplay*) G__getstructoffset())->DialogTrackParameters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplay*) G__getstructoffset())->AcceptModifiedTrackParams();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplay*) G__getstructoffset())->CloseDialogModifiedTrackParams();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplay*) G__getstructoffset())->CancelDialogModifiedTrackParams();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplay*) G__getstructoffset())->ClearSegmentEnv();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplay*) G__getstructoffset())->DrawSegmentExtrapolationLine(*(EdbSegP*) libp->para[0].ref, (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbDisplay::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbDisplay::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbDisplay::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbDisplay::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbDisplay*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbDisplay::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbDisplay::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbDisplay::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_993_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbDisplay::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbDisplay G__TEdbDisplay;
static int G__EddDict_993_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbDisplay*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbDisplay*) (soff+(sizeof(EdbDisplay)*i)))->~G__TEdbDisplay();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbDisplay*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbDisplay*) (soff))->~G__TEdbDisplay();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbVertexG */
static int G__EddDict_994_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbVertexG* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbVertexG[n];
     } else {
       p = new((void*) gvp) EdbVertexG[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbVertexG;
     } else {
       p = new((void*) gvp) EdbVertexG;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EddDictLN_EdbVertexG));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_994_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbVertexG* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbVertexG((EdbDisplay*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) EdbVertexG((EdbDisplay*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EddDictLN_EdbVertexG));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_994_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbVertexG*) G__getstructoffset())->SetVertex((EdbVertex*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_994_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbVertexG*) G__getstructoffset())->DumpVertex();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_994_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbVertexG*) G__getstructoffset())->InspectVertex();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_994_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbVertexG*) G__getstructoffset())->SetAsWorking();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_994_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbVertexG*) G__getstructoffset())->DeleteVertex();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_994_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbVertexG*) G__getstructoffset())->RemoveKink();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_994_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbVertexG*) G__getstructoffset())->TestVertex();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_994_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbVertexG::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_994_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbVertexG::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_994_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbVertexG::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_994_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbVertexG::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_994_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbVertexG*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_994_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbVertexG::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_994_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbVertexG::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_994_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbVertexG::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_994_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbVertexG::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EddDict_994_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbVertexG* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbVertexG(*(EdbVertexG*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EddDictLN_EdbVertexG));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbVertexG G__TEdbVertexG;
static int G__EddDict_994_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbVertexG*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbVertexG*) (soff+(sizeof(EdbVertexG)*i)))->~G__TEdbVertexG();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbVertexG*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbVertexG*) (soff))->~G__TEdbVertexG();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbTrackG */
static int G__EddDict_995_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbTrackG* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbTrackG[n];
     } else {
       p = new((void*) gvp) EdbTrackG[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbTrackG;
     } else {
       p = new((void*) gvp) EdbTrackG;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EddDictLN_EdbTrackG));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_995_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbTrackG* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbTrackG((EdbDisplay*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) EdbTrackG((EdbDisplay*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EddDictLN_EdbTrackG));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_995_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbTrackG* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbTrackG((Int_t) G__int(libp->para[0]), (EdbDisplay*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) EdbTrackG((Int_t) G__int(libp->para[0]), (EdbDisplay*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EddDictLN_EdbTrackG));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_995_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbTrackG*) G__getstructoffset())->SetTrack((EdbTrackP*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_995_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbTrackG*) G__getstructoffset())->DumpTrack();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_995_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbTrackG*) G__getstructoffset())->InspectTrack();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_995_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbTrackG*) G__getstructoffset())->SetAsWorkingVertex();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_995_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbTrackG*) G__getstructoffset())->RemoveTrackFromVertex();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_995_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbTrackG*) G__getstructoffset())->AddTrackToVertex();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_995_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbTrackG*) G__getstructoffset())->FixNewTrack();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_995_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbTrackG*) G__getstructoffset())->DeleteTrack();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_995_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbTrackG*) G__getstructoffset())->UndoNewTrack();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_995_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbTrackG*) G__getstructoffset())->UndoSplit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_995_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbTrackG*) G__getstructoffset())->UndoRemoveKink();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_995_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbTrackG*) G__getstructoffset())->AddToNewTrack();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_995_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbTrackG*) G__getstructoffset())->AddToNewTrackAndFit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_995_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbTrackG*) G__getstructoffset())->InfoTrackVert();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_995_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbTrackG*) G__getstructoffset())->EstimateMomentum();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_995_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbTrackG::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_995_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbTrackG::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_995_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbTrackG::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_995_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbTrackG::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_995_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbTrackG*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_995_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbTrackG::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_995_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbTrackG::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_995_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbTrackG::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EddDict_995_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbTrackG::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EddDict_995_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbTrackG* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbTrackG(*(EdbTrackG*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EddDictLN_EdbTrackG));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbTrackG G__TEdbTrackG;
static int G__EddDict_995_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbTrackG*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbTrackG*) (soff+(sizeof(EdbTrackG)*i)))->~G__TEdbTrackG();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbTrackG*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbTrackG*) (soff))->~G__TEdbTrackG();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* Edb3DView */

/* EdbDisplayBase */

/* EdbSegG */

/* EdbDisplay */

/* EdbVertexG */

/* EdbTrackG */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncEddDict {
 public:
  G__Sizep2memfuncEddDict(): p(&G__Sizep2memfuncEddDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncEddDict::*p)();
};

size_t G__get_sizep2memfuncEddDict()
{
  G__Sizep2memfuncEddDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceEddDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EddDictLN_Edb3DView))) {
     Edb3DView *G__Lderived;
     G__Lderived=(Edb3DView*)0x1000;
     {
       TView3D *G__Lpbase=(TView3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EddDictLN_Edb3DView),G__get_linked_tagnum(&G__EddDictLN_TView3D),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TView *G__Lpbase=(TView*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EddDictLN_Edb3DView),G__get_linked_tagnum(&G__EddDictLN_TView),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EddDictLN_Edb3DView),G__get_linked_tagnum(&G__EddDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EddDictLN_Edb3DView),G__get_linked_tagnum(&G__EddDictLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EddDictLN_EdbDisplayBase))) {
     EdbDisplayBase *G__Lderived;
     G__Lderived=(EdbDisplayBase*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EddDictLN_EdbDisplayBase),G__get_linked_tagnum(&G__EddDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EddDictLN_EdbDisplayBase),G__get_linked_tagnum(&G__EddDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EddDictLN_EdbSegG))) {
     EdbSegG *G__Lderived;
     G__Lderived=(EdbSegG*)0x1000;
     {
       TPolyLine3D *G__Lpbase=(TPolyLine3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EddDictLN_EdbSegG),G__get_linked_tagnum(&G__EddDictLN_TPolyLine3D),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EddDictLN_EdbSegG),G__get_linked_tagnum(&G__EddDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EddDictLN_EdbSegG),G__get_linked_tagnum(&G__EddDictLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EddDictLN_EdbSegG),G__get_linked_tagnum(&G__EddDictLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EddDictLN_EdbDisplay))) {
     EdbDisplay *G__Lderived;
     G__Lderived=(EdbDisplay*)0x1000;
     {
       EdbDisplayBase *G__Lpbase=(EdbDisplayBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EddDictLN_EdbDisplay),G__get_linked_tagnum(&G__EddDictLN_EdbDisplayBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EddDictLN_EdbDisplay),G__get_linked_tagnum(&G__EddDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EddDictLN_EdbDisplay),G__get_linked_tagnum(&G__EddDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EddDictLN_EdbVertexG))) {
     EdbVertexG *G__Lderived;
     G__Lderived=(EdbVertexG*)0x1000;
     {
       TPolyMarker3D *G__Lpbase=(TPolyMarker3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EddDictLN_EdbVertexG),G__get_linked_tagnum(&G__EddDictLN_TPolyMarker3D),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EddDictLN_EdbVertexG),G__get_linked_tagnum(&G__EddDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EddDictLN_EdbVertexG),G__get_linked_tagnum(&G__EddDictLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EddDictLN_EdbVertexG),G__get_linked_tagnum(&G__EddDictLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EddDictLN_EdbTrackG))) {
     EdbTrackG *G__Lderived;
     G__Lderived=(EdbTrackG*)0x1000;
     {
       TPolyMarker3D *G__Lpbase=(TPolyMarker3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EddDictLN_EdbTrackG),G__get_linked_tagnum(&G__EddDictLN_TPolyMarker3D),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EddDictLN_EdbTrackG),G__get_linked_tagnum(&G__EddDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EddDictLN_EdbTrackG),G__get_linked_tagnum(&G__EddDictLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EddDictLN_EdbTrackG),G__get_linked_tagnum(&G__EddDictLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableEddDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("iterator<iterator_traits<string::iterator>::iterator_category,iterator_traits<string::iterator>::value_type,iterator_traits<string::iterator>::difference_type,iterator_traits<string::iterator>::pointer,iterator_traits<string::iterator>::reference>",117,G__get_linked_tagnum(&G__EddDictLN_iteratorlErandom_access_iterator_tagcOcharcOlongcOcharmUcOcharaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,char>",117,G__get_linked_tagnum(&G__EddDictLN_iteratorlErandom_access_iterator_tagcOcharcOlongcOcharmUcOcharaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,char,long>",117,G__get_linked_tagnum(&G__EddDictLN_iteratorlErandom_access_iterator_tagcOcharcOlongcOcharmUcOcharaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,char,long,char*>",117,G__get_linked_tagnum(&G__EddDictLN_iteratorlErandom_access_iterator_tagcOcharcOlongcOcharmUcOcharaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<string::const_iterator>::iterator_category,iterator_traits<string::const_iterator>::value_type,iterator_traits<string::const_iterator>::difference_type,iterator_traits<string::const_iterator>::pointer,iterator_traits<string::const_iterator>::reference>",117,G__get_linked_tagnum(&G__EddDictLN_iteratorlErandom_access_iterator_tagcOcharcOlongcOcharmUcOcharaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__EddDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__EddDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__EddDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EddDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>::iterator_category,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>::value_type,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>::difference_type,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>::pointer,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>::reference>",117,G__get_linked_tagnum(&G__EddDictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__EddDictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,ROOT::TSchemaHelper,long>",117,G__get_linked_tagnum(&G__EddDictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,ROOT::TSchemaHelper,long,ROOT::TSchemaHelper*>",117,G__get_linked_tagnum(&G__EddDictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__EddDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLconst_iteratorgR),0,G__get_linked_tagnum(&G__EddDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::const_iterator>::iterator_category,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::const_iterator>::value_type,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::const_iterator>::difference_type,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::const_iterator>::pointer,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::const_iterator>::reference>",117,G__get_linked_tagnum(&G__EddDictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__EddDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__EddDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__EddDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EddDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>::iterator_category,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>::value_type,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>::difference_type,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>::pointer,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>::reference>",117,G__get_linked_tagnum(&G__EddDictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,TVirtualArray*>",117,G__get_linked_tagnum(&G__EddDictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,TVirtualArray*,long>",117,G__get_linked_tagnum(&G__EddDictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,TVirtualArray*,long,TVirtualArray**>",117,G__get_linked_tagnum(&G__EddDictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__EddDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLconst_iteratorgR),0,G__get_linked_tagnum(&G__EddDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::const_iterator>::iterator_category,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::const_iterator>::value_type,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::const_iterator>::difference_type,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::const_iterator>::pointer,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::const_iterator>::reference>",117,G__get_linked_tagnum(&G__EddDictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__EddDictLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__EddDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__EddDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__EddDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__EddDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EddDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>::iterator_category,iterator_traits<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>::value_type,iterator_traits<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>::difference_type,iterator_traits<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>::pointer,iterator_traits<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>::reference>",117,G__get_linked_tagnum(&G__EddDictLN_iteratorlErandom_access_iterator_tagcOpairlEunsignedsPintcOintgRcOlongcOpairlEunsignedsPintcOintgRmUcOpairlEunsignedsPintcOintgRaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__EddDictLN_iteratorlErandom_access_iterator_tagcOpairlEunsignedsPintcOintgRcOlongcOpairlEunsignedsPintcOintgRmUcOpairlEunsignedsPintcOintgRaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,pair<unsigned int,int>,long>",117,G__get_linked_tagnum(&G__EddDictLN_iteratorlErandom_access_iterator_tagcOpairlEunsignedsPintcOintgRcOlongcOpairlEunsignedsPintcOintgRmUcOpairlEunsignedsPintcOintgRaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,pair<unsigned int,int>,long,pair<unsigned int,int>*>",117,G__get_linked_tagnum(&G__EddDictLN_iteratorlErandom_access_iterator_tagcOpairlEunsignedsPintcOintgRcOlongcOpairlEunsignedsPintcOintgRmUcOpairlEunsignedsPintcOintgRaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__EddDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLconst_iteratorgR),0,G__get_linked_tagnum(&G__EddDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::const_iterator>::iterator_category,iterator_traits<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::const_iterator>::value_type,iterator_traits<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::const_iterator>::difference_type,iterator_traits<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::const_iterator>::pointer,iterator_traits<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::const_iterator>::reference>",117,G__get_linked_tagnum(&G__EddDictLN_iteratorlErandom_access_iterator_tagcOpairlEunsignedsPintcOintgRcOlongcOpairlEunsignedsPintcOintgRmUcOpairlEunsignedsPintcOintgRaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__EddDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__EddDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__EddDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__EddDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__EddDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,TGeoElementRN*>",117,G__get_linked_tagnum(&G__EddDictLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TGeoElementRN*>",117,G__get_linked_tagnum(&G__EddDictLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TGeoElementRN*,less<int> >",117,G__get_linked_tagnum(&G__EddDictLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ThreadData_t*>",117,G__get_linked_tagnum(&G__EddDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TGeoVolumeAssembly::ThreadData_t*>",117,G__get_linked_tagnum(&G__EddDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__EddDictLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EddDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >::iterator>::iterator_category,iterator_traits<vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >::iterator>::value_type,iterator_traits<vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >::iterator>::difference_type,iterator_traits<vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >::iterator>::pointer,iterator_traits<vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >::iterator>::reference>",117,G__get_linked_tagnum(&G__EddDictLN_iteratorlErandom_access_iterator_tagcOTGeoVolumeAssemblycLcLThreadData_tmUcOlongcOTGeoVolumeAssemblycLcLThreadData_tmUmUcOTGeoVolumeAssemblycLcLThreadData_tmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,TGeoVolumeAssembly::ThreadData_t*>",117,G__get_linked_tagnum(&G__EddDictLN_iteratorlErandom_access_iterator_tagcOTGeoVolumeAssemblycLcLThreadData_tmUcOlongcOTGeoVolumeAssemblycLcLThreadData_tmUmUcOTGeoVolumeAssemblycLcLThreadData_tmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,TGeoVolumeAssembly::ThreadData_t*,long>",117,G__get_linked_tagnum(&G__EddDictLN_iteratorlErandom_access_iterator_tagcOTGeoVolumeAssemblycLcLThreadData_tmUcOlongcOTGeoVolumeAssemblycLcLThreadData_tmUmUcOTGeoVolumeAssemblycLcLThreadData_tmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,TGeoVolumeAssembly::ThreadData_t*,long,TGeoVolumeAssembly::ThreadData_t**>",117,G__get_linked_tagnum(&G__EddDictLN_iteratorlErandom_access_iterator_tagcOTGeoVolumeAssemblycLcLThreadData_tmUcOlongcOTGeoVolumeAssemblycLcLThreadData_tmUmUcOTGeoVolumeAssemblycLcLThreadData_tmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__EddDictLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLconst_iteratorgR),0,G__get_linked_tagnum(&G__EddDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >::const_iterator>::iterator_category,iterator_traits<vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >::const_iterator>::value_type,iterator_traits<vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >::const_iterator>::difference_type,iterator_traits<vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >::const_iterator>::pointer,iterator_traits<vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >::const_iterator>::reference>",117,G__get_linked_tagnum(&G__EddDictLN_iteratorlErandom_access_iterator_tagcOTGeoVolumeAssemblycLcLThreadData_tmUcOlongcOTGeoVolumeAssemblycLcLThreadData_tmUmUcOTGeoVolumeAssemblycLcLThreadData_tmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__EddDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__EddDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__EddDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__EddDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__EddDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__EddDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__EddDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__EddDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__EddDictLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__EddDictLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__EddDictLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__EddDictLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__EddDictLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__EddDictLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__EddDictLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__EddDictLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__EddDictLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__EddDictLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__EddDictLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__EddDictLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__EddDictLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__EddDictLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__EddDictLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__EddDictLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__EddDictLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__EddDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__EddDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__EddDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__EddDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__EddDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__EddDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__EddDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__EddDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__EddDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__EddDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__EddDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__EddDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__EddDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__EddDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__EddDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__EddDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__EddDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<Relation*>",117,G__get_linked_tagnum(&G__EddDictLN_listlEVERTEXcLcLRelationmUcOallocatorlEVERTEXcLcLRelationmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<VERTEX::Relation*>",117,G__get_linked_tagnum(&G__EddDictLN_listlEVERTEXcLcLRelationmUcOallocatorlEVERTEXcLcLRelationmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<MassC*>",117,G__get_linked_tagnum(&G__EddDictLN_listlEVERTEXcLcLMassCmUcOallocatorlEVERTEXcLcLMassCmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<VERTEX::MassC*>",117,G__get_linked_tagnum(&G__EddDictLN_listlEVERTEXcLcLMassCmUcOallocatorlEVERTEXcLcLMassCmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Track*>",117,G__get_linked_tagnum(&G__EddDictLN_vectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<VERTEX::Track*>",117,G__get_linked_tagnum(&G__EddDictLN_vectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__EddDictLN_reverse_iteratorlEvectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EddDictLN_vectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<VERTEX::Track*,allocator<VERTEX::Track*> >::iterator>::iterator_category,iterator_traits<vector<VERTEX::Track*,allocator<VERTEX::Track*> >::iterator>::value_type,iterator_traits<vector<VERTEX::Track*,allocator<VERTEX::Track*> >::iterator>::difference_type,iterator_traits<vector<VERTEX::Track*,allocator<VERTEX::Track*> >::iterator>::pointer,iterator_traits<vector<VERTEX::Track*,allocator<VERTEX::Track*> >::iterator>::reference>",117,G__get_linked_tagnum(&G__EddDictLN_iteratorlErandom_access_iterator_tagcOVERTEXcLcLTrackmUcOlongcOVERTEXcLcLTrackmUmUcOVERTEXcLcLTrackmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,VERTEX::Track*>",117,G__get_linked_tagnum(&G__EddDictLN_iteratorlErandom_access_iterator_tagcOVERTEXcLcLTrackmUcOlongcOVERTEXcLcLTrackmUmUcOVERTEXcLcLTrackmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,VERTEX::Track*,long>",117,G__get_linked_tagnum(&G__EddDictLN_iteratorlErandom_access_iterator_tagcOVERTEXcLcLTrackmUcOlongcOVERTEXcLcLTrackmUmUcOVERTEXcLcLTrackmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,VERTEX::Track*,long,VERTEX::Track**>",117,G__get_linked_tagnum(&G__EddDictLN_iteratorlErandom_access_iterator_tagcOVERTEXcLcLTrackmUcOlongcOVERTEXcLcLTrackmUmUcOVERTEXcLcLTrackmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__EddDictLN_reverse_iteratorlEvectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgRcLcLconst_iteratorgR),0,G__get_linked_tagnum(&G__EddDictLN_vectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<VERTEX::Track*,allocator<VERTEX::Track*> >::const_iterator>::iterator_category,iterator_traits<vector<VERTEX::Track*,allocator<VERTEX::Track*> >::const_iterator>::value_type,iterator_traits<vector<VERTEX::Track*,allocator<VERTEX::Track*> >::const_iterator>::difference_type,iterator_traits<vector<VERTEX::Track*,allocator<VERTEX::Track*> >::const_iterator>::pointer,iterator_traits<vector<VERTEX::Track*,allocator<VERTEX::Track*> >::const_iterator>::reference>",117,G__get_linked_tagnum(&G__EddDictLN_iteratorlErandom_access_iterator_tagcOVERTEXcLcLTrackmUcOlongcOVERTEXcLcLTrackmUmUcOVERTEXcLcLTrackmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* Edb3DView */
static void G__setup_memvarEdb3DView(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EddDictLN_Edb3DView));
   { Edb3DView *p; p=(Edb3DView*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fRotateMode=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbDisplayBase */
static void G__setup_memvarEdbDisplayBase(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EddDictLN_EdbDisplayBase));
   { EdbDisplayBase *p; p=(EdbDisplayBase*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fVx0=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fVy0=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fVz0=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fVx1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fVy1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fVz1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fZoomMode=",0,"=1 if in zoom mode");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fDrawAllViews=",0,"Flag True if AllViews selected");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fTheta=",0,"Viewing angle theta");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fPhi=",0,"Viewing angle phi");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fPsi=",0,"Viewving angle psi (rotation on display)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZoomX0[30]=",0,"Low x range of zoom number i");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZoomY0[30]=",0,"Low y range of zoom number i");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZoomX1[30]=",0,"High x range of zoom number i");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZoomY1[30]=",0,"High y range of zoom number i");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fZooms=",0,"Number of zooms");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fStyle=",0,"Display style (line width, sizes etc)");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Width_t"),-1,2,"fLineWidth=",0,"Line width for tracks and segments");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fColorBG=",0,"color for the display BG");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_Edb3DView),-1,-1,2,"fView=",0,"Main View object");
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"fTitle[128]=",0,"EdbDisplay Object Name");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_TPad),-1,-1,2,"fTrigPad=",0,"Pointer to the trigger pad");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_TPad),-1,-1,2,"fButtons=",0,"Pointer to the buttons pad");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_TButton),-1,-1,2,"fAllButton=",0,"Button to draw all objects");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_TButton),-1,-1,2,"fEnvButton=",0,"Button to draw vertex environment");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_TButton),-1,-1,2,"fUndButton=",0,"Button to undo vertex modofication");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_TButton),-1,-1,2,"fAccButton=",0,"Button to accept modified vertex");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_TButton),-1,-1,2,"fCanButton=",0,"Button to cancel modified vertex");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_TButton),-1,-1,2,"fPickButton=",0,"Button to activate Pick mode");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_TButton),-1,-1,2,"fZoomButton=",0,"Button to activate Zoom mode");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_TButton),-1,-1,2,"fUnZoomButton=",0,"Button to Undo previous Zoom");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_TArc),-1,-1,2,"fArcButton=",0,"Gren/Red button to show Pick/Zoom mode");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_TGMainFrame),-1,-1,2,"fMain=",0,"Dialog frame");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_TText),-1,-1,2,"fHdrVTX=",0,"Vertex data header");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_TText),-1,-1,2,"fOldVTX=",0,"Old Vertex data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_TText),-1,-1,2,"fNewVTX=",0,"Modified Vertex data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_TText),-1,-1,2,"fPreVTX=",0,"Previous Vertex data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_TPaveText),-1,-1,2,"fVTXTracks=",0,"Vertex tracks information");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_TButton),-1,-1,2,"fOldBut=",0,"Old Vertex display button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_TButton),-1,-1,2,"fNewBut=",0,"Modified Vertex display button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_TButton),-1,-1,2,"fPreBut=",0,"Previous Vertex display button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_TButton),-1,-1,2,"fRemBut[50]=",0,"track removing buttons");
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"fCanvasName[128]=",0,"Name of main canvas");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fDrawDet=",0,"True if drawing detector is on");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_TGeoVolume),-1,-1,2,"fDetector=",0,"detector geometry");
   G__memvar_setup((void*)((long)(&p->fVTXTRKInfo)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EddDictLN_TPaveText),-1,-1,1,"fVTXTRKInfo=",0,"Vertex - tracks information");
   G__memvar_setup((void*)((long)(&p->fCanvas)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EddDictLN_TCanvas),-1,-1,1,"fCanvas=",0,"Pointer to the display canvas");
   G__memvar_setup((void*)((long)(&p->fCanvasVTX)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EddDictLN_TCanvas),-1,-1,1,"fCanvasVTX=",0,"Pointer to the vertex canvas");
   G__memvar_setup((void*)((long)(&p->fCanvasTRK)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EddDictLN_TCanvas),-1,-1,1,"fCanvasTRK=",0,"Pointer to the vertex canvas");
   G__memvar_setup((void*)((long)(&p->fPad)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EddDictLN_TPad),-1,-1,1,"fPad=",0,"Pointer to the event display main pad");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbSegG */
static void G__setup_memvarEdbSegG(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EddDictLN_EdbSegG));
   { EdbSegG *p; p=(EdbSegG*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__EddDictLN_EdbSegP),-1,-1,4,"eSeg=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_EdbDisplay),-1,-1,4,"eD=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbDisplay */
static void G__setup_memvarEdbDisplay(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EddDictLN_EdbDisplay));
   { EdbDisplay *p; p=(EdbDisplay*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eDrawTracks=",0,"tracks drawing option");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eDrawVertex=",0,"vertex drawing option");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_TArrayI),-1,-1,4,"eColors=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_TArrayF),-1,-1,4,"eDZs=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_TGNumberEntry),-1,-1,4,"fNumericEntries[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eFromPlate)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"eFromPlate=",0,"plates range (for colors normalization)");
   G__memvar_setup((void*)((long)(&p->eToPlate)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"eToPlate=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eVerRec)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EddDictLN_EdbVertexRec),-1,-1,1,"eVerRec=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eArrSegP)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EddDictLN_TObjArray),-1,-1,1,"eArrSegP=",0,"array of segments to be drawn");
   G__memvar_setup((void*)((long)(&p->eArrTr)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EddDictLN_TObjArray),-1,-1,1,"eArrTr=",0,"array of tracks to be drawn");
   G__memvar_setup((void*)((long)(&p->eArrV)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EddDictLN_TObjArray),-1,-1,1,"eArrV=",0,"array of vertices to be drawn");
   G__memvar_setup((void*)((long)(&p->eArrSegPSave)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EddDictLN_TObjArray),-1,-1,1,"eArrSegPSave=",0,"saved array of segments to be drawn");
   G__memvar_setup((void*)((long)(&p->eArrTrSave)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EddDictLN_TObjArray),-1,-1,1,"eArrTrSave=",0,"saved array of tracks to be drawn");
   G__memvar_setup((void*)((long)(&p->eArrVSave)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EddDictLN_TObjArray),-1,-1,1,"eArrVSave=",0,"saved array of vertices to be drawn");
   G__memvar_setup((void*)((long)(&p->eWorking)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EddDictLN_EdbVertex),-1,-1,1,"eWorking=",0,"working vertex");
   G__memvar_setup((void*)((long)(&p->eVertex)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EddDictLN_EdbVertex),-1,-1,1,"eVertex=",0,"current selected vertex");
   G__memvar_setup((void*)((long)(&p->ePrevious)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EddDictLN_EdbVertex),-1,-1,1,"ePrevious=",0,"saved previous vertex modifications");
   G__memvar_setup((void*)((long)(&p->eSegment)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EddDictLN_EdbSegP),-1,-1,1,"eSegment=",0,"working segment (for segment neighborhood)");
   G__memvar_setup((void*)((long)(&p->eTrack)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EddDictLN_EdbTrackP),-1,-1,1,"eTrack=",0,"working intermediate track (track creation)");
   G__memvar_setup((void*)((long)(&p->eTrack1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EddDictLN_EdbTrackP),-1,-1,1,"eTrack1=",0,"working intermediate track (track splitting)");
   G__memvar_setup((void*)((long)(&p->eTrack2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EddDictLN_EdbTrackP),-1,-1,1,"eTrack2=",0,"working intermediate track (track splitting)");
   G__memvar_setup((void*)((long)(&p->eSegPM)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EddDictLN_TPolyMarker3D),-1,-1,1,"eSegPM=",0,"green mark for segment selected as working");
   G__memvar_setup((void*)((long)(&p->eWait_Answer)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"eWait_Answer=",0,"set TRUE when answer received");
   G__memvar_setup((void*)((long)(&p->eIndVert)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"eIndVert=",0,"Index of selected vertex in ArrV");
   G__memvar_setup((void*)((long)(&p->eIndVertSave)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"eIndVertSave=",0,"Index of selected vertex in ArrV (seved)");
   G__memvar_setup((void*)((long)(&p->eCreatedTracks)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EddDictLN_TList),-1,-1,1,"eCreatedTracks=",0,"list of tracks, created during vertex operations ");
   G__memvar_setup((void*)((long)(&p->eRadMax)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"eRadMax=",0,"Maximal Radius for neighborhood");
   G__memvar_setup((void*)((long)(&p->eDpat)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"eDpat=",0,"+/- patterns for neighborhood");
   G__memvar_setup((void*)((long)(&p->eImpMax)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"eImpMax=",0,"Maximal impact for neighborhood");
   G__memvar_setup((void*)((long)(&p->eP)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"eP=",0,"track momentum (creation from segment, propagation)");
   G__memvar_setup((void*)((long)(&p->eM)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"eM=",0,"track mass (creation from segment, propagation)");
   G__memvar_setup((void*)((long)(&p->eTImpMax)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"eTImpMax=",0,"Maximal impact for interactive add track");
   G__memvar_setup((void*)((long)(&p->eTProbMin)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"eTProbMin=",0,"Minimal probability for interactive add track");
   G__memvar_setup((void*)((long)(&p->eSegWmin)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"eSegWmin=",0,"Minimal segment W for neighbouring selection");
   G__memvar_setup((void*)((long)(&p->eArrSegG)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EddDictLN_TObjArray),-1,-1,1,"eArrSegG=",0,"additional array of segments for the presentation purpose only");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbVertexG */
static void G__setup_memvarEdbVertexG(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EddDictLN_EdbVertexG));
   { EdbVertexG *p; p=(EdbVertexG*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_EdbVertex),-1,-1,4,"eV=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_EdbDisplay),-1,-1,4,"eD=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbTrackG */
static void G__setup_memvarEdbTrackG(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EddDictLN_EdbTrackG));
   { EdbTrackG *p; p=(EdbTrackG*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_EdbTrackP),-1,-1,4,"eTr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_EdbDisplay),-1,-1,4,"eD=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EddDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarEddDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncEdb3DView(void) {
   /* Edb3DView */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EddDictLN_Edb3DView));
   G__memfunc_setup("Edb3DView",797,G__EddDict_696_0_1, 105, G__get_linked_tagnum(&G__EddDictLN_Edb3DView), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTitle",802,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetObjectInfo",1283,(G__InterfaceMethod) NULL,67, -1, -1, 0, 2, 1, 1, 8, 
"i - - 0 - px i - - 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExecuteRotateView",1757,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - event i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRotateMode",1312,G__EddDict_696_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' Mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__EddDict_696_0_7, 85, G__get_linked_tagnum(&G__EddDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Edb3DView::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EddDict_696_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Edb3DView::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EddDict_696_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Edb3DView::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EddDict_696_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Edb3DView::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EddDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EddDict_696_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EddDict_696_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Edb3DView::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EddDict_696_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Edb3DView::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EddDict_696_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Edb3DView::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EddDict_696_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Edb3DView::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Edb3DView", 797, G__EddDict_696_0_19, (int) ('i'), G__get_linked_tagnum(&G__EddDictLN_Edb3DView), -1, 0, 1, 1, 1, 0, "u 'Edb3DView' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Edb3DView", 923, G__EddDict_696_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbDisplayBase(void) {
   /* EdbDisplayBase */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EddDictLN_EdbDisplayBase));
   G__memfunc_setup("EdbDisplayBase",1372,G__EddDict_697_0_1, 105, G__get_linked_tagnum(&G__EddDictLN_EdbDisplayBase), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbDisplayBase",1372,G__EddDict_697_0_2, 105, G__get_linked_tagnum(&G__EddDictLN_EdbDisplayBase), -1, 0, 8, 1, 1, 0, 
"C - - 10 - title f - 'Float_t' 0 - x0 "
"f - 'Float_t' 0 - x1 f - 'Float_t' 0 - y0 "
"f - 'Float_t' 0 - y1 f - 'Float_t' 0 - z0 "
"f - 'Float_t' 0 - z1 U 'TCanvas' - 0 '0' Canvas", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set0",348,G__EddDict_697_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,G__EddDict_697_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Refresh",719,G__EddDict_697_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExecuteEvent",1237,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - event i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DisplayButtons",1477,G__EddDict_697_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetView",711,G__EddDict_697_0_8, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 0 - theta f - 'Float_t' 0 - phi "
"f - 'Float_t' 0 '0' psi", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawAllViews",1205,G__EddDict_697_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawViewGL",956,G__EddDict_697_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawViewX3D",1016,G__EddDict_697_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawTitle",912,G__EddDict_697_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawPreVTX",951,G__EddDict_697_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - text", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawOldVTX",943,G__EddDict_697_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - text", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawNewVTX",954,G__EddDict_697_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - text", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawPreBut",992,G__EddDict_697_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - text", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawOldBut",984,G__EddDict_697_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - text", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawNewBut",995,G__EddDict_697_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - text", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ClearPreVTX",1040,G__EddDict_697_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ClearNewVTX",1043,G__EddDict_697_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateCanvasVTX",1458,G__EddDict_697_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawUnd",693,G__EddDict_697_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawAcc",661,G__EddDict_697_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawCan",672,G__EddDict_697_0_24, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawEnv",695,G__EddDict_697_0_25, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawView",809,G__EddDict_697_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 0 - theta f - 'Float_t' 0 - phi "
"f - 'Float_t' 0 '0' psi", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPickMode",1080,G__EddDict_697_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRange",793,G__EddDict_697_0_28, 121, -1, -1, 0, 6, 1, 1, 0, 
"f - 'Float_t' 0 - x0 f - 'Float_t' 0 - x1 "
"f - 'Float_t' 0 - y0 f - 'Float_t' 0 - y1 "
"f - 'Float_t' 0 - z0 f - 'Float_t' 0 - z1", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetZoomMode",1110,G__EddDict_697_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UnZoom",616,G__EddDict_697_0_30, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DistancetoPrimitive",1991,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetObjectInfo",1283,(G__InterfaceMethod) NULL,67, -1, -1, 0, 2, 1, 1, 8, 
"i - - 0 - px i - - 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRotate",923,G__EddDict_697_0_34, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetStyle",829,G__EddDict_697_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '0' Style", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLineWidth",1204,G__EddDict_697_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '1' width", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetColorBG",948,G__EddDict_697_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '1' color", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDrawDet",983,G__EddDict_697_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - fflag", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SwDrawDet",885,G__EddDict_697_0_39, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDrawDet",971,G__EddDict_697_0_40, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawDetector",1224,G__EddDict_697_0_41, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDetector",1126,G__EddDict_697_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TGeoVolume' - 0 - det", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__EddDict_697_0_43, 85, G__get_linked_tagnum(&G__EddDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbDisplayBase::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EddDict_697_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbDisplayBase::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EddDict_697_0_45, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbDisplayBase::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EddDict_697_0_46, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbDisplayBase::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EddDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EddDict_697_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EddDict_697_0_51, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbDisplayBase::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EddDict_697_0_52, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbDisplayBase::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EddDict_697_0_53, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbDisplayBase::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EddDict_697_0_54, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbDisplayBase::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EdbDisplayBase", 1372, G__EddDict_697_0_55, (int) ('i'), G__get_linked_tagnum(&G__EddDictLN_EdbDisplayBase), -1, 0, 1, 1, 1, 0, "u 'EdbDisplayBase' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EdbDisplayBase", 1498, G__EddDict_697_0_56, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EddDict_697_0_57, (int) ('u'), G__get_linked_tagnum(&G__EddDictLN_EdbDisplayBase), -1, 1, 1, 1, 1, 0, "u 'EdbDisplayBase' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbSegG(void) {
   /* EdbSegG */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EddDictLN_EdbSegG));
   G__memfunc_setup("EdbSegG",625,G__EddDict_992_0_1, 105, G__get_linked_tagnum(&G__EddDictLN_EdbSegG), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbSegG",625,G__EddDict_992_0_2, 105, G__get_linked_tagnum(&G__EddDictLN_EdbSegG), -1, 0, 1, 1, 1, 0, "u 'EdbSegP' - 1 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbSegG",625,G__EddDict_992_0_3, 105, G__get_linked_tagnum(&G__EddDictLN_EdbSegG), -1, 0, 1, 1, 1, 0, "U 'EdbDisplay' - 0 - D", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbSegG",625,G__EddDict_992_0_4, 105, G__get_linked_tagnum(&G__EddDictLN_EdbSegG), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nhits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbSegG",625,G__EddDict_992_0_5, 105, G__get_linked_tagnum(&G__EddDictLN_EdbSegG), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - nhits U 'EdbDisplay' - 0 - D", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSeg",587,G__EddDict_992_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbSegP' - 10 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("X",88,G__EddDict_992_0_7, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__EddDict_992_0_8, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Z",90,G__EddDict_992_0_9, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DumpSegment",1129,G__EddDict_992_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("InspectSegment",1449,G__EddDict_992_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("AddAsTrackToVertex",1779,G__EddDict_992_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("AddToNewTrack",1259,G__EddDict_992_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("AddToNewTrackAndFit",1825,G__EddDict_992_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("RemoveFromTrack",1527,G__EddDict_992_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("SplitTrack",1025,G__EddDict_992_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("SetAsWorking",1217,G__EddDict_992_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("InfoSegVert",1100,G__EddDict_992_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("InfoSegSeg",970,G__EddDict_992_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("GetTitle",802,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetObjectInfo",1283,(G__InterfaceMethod) NULL,67, -1, -1, 0, 2, 1, 1, 8, 
"i - - 0 - px i - - 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__EddDict_992_0_23, 85, G__get_linked_tagnum(&G__EddDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbSegG::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EddDict_992_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbSegG::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EddDict_992_0_25, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbSegG::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EddDict_992_0_26, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbSegG::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EddDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EddDict_992_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EddDict_992_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbSegG::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EddDict_992_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbSegG::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EddDict_992_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbSegG::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EddDict_992_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbSegG::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EdbSegG", 625, G__EddDict_992_0_35, (int) ('i'), G__get_linked_tagnum(&G__EddDictLN_EdbSegG), -1, 0, 1, 1, 1, 0, "u 'EdbSegG' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EdbSegG", 751, G__EddDict_992_0_36, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbDisplay(void) {
   /* EdbDisplay */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EddDictLN_EdbDisplay));
   G__memfunc_setup("EdbDisplay",993,G__EddDict_993_0_1, 105, G__get_linked_tagnum(&G__EddDictLN_EdbDisplay), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbDisplay",993,G__EddDict_993_0_2, 105, G__get_linked_tagnum(&G__EddDictLN_EdbDisplay), -1, 0, 8, 1, 1, 0, 
"C - - 10 - title f - 'Float_t' 0 - x0 "
"f - 'Float_t' 0 - x1 f - 'Float_t' 0 - y0 "
"f - 'Float_t' 0 - y1 f - 'Float_t' 0 - z0 "
"f - 'Float_t' 0 - z1 U 'TCanvas' - 0 '0' Canvas", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbDisplay",993,G__EddDict_993_0_3, 105, G__get_linked_tagnum(&G__EddDictLN_EdbDisplay), -1, 0, 3, 1, 1, 0, 
"C - - 10 - title u 'EdbLayer' - 1 - la "
"U 'TCanvas' - 0 '0' Canvas", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbDisplayExist",1518,G__EddDict_993_0_4, 85, G__get_linked_tagnum(&G__EddDictLN_EdbDisplay), -1, 0, 1, 3, 1, 0, "C - - 10 - title", (char*)NULL, (void*) G__func2void( (EdbDisplay* (*)(const char*))(&EdbDisplay::EdbDisplayExist) ), 0);
   G__memfunc_setup("Delete",595,G__EddDict_993_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set0",348,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GuessRange",1012,G__EddDict_993_0_7, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - - 0 '3000' margZmin f - - 0 '1000' margZmax "
"f - - 0 '300' margR", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVerRec",883,G__EddDict_993_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbVertexRec' - 0 - evr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Refresh",719,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetArrSegG",951,G__EddDict_993_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - arrg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetArrSegP",960,G__EddDict_993_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - arr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetArrTr",791,G__EddDict_993_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - arr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDrawTracks",1314,G__EddDict_993_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VerRec",583,G__EddDict_993_0_14, 85, G__get_linked_tagnum(&G__EddDictLN_EdbVertexRec), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackDraw",899,G__EddDict_993_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbTrackP' - 0 - tr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SegLine",679,G__EddDict_993_0_16, 85, G__get_linked_tagnum(&G__EddDictLN_EdbSegG), -1, 0, 1, 1, 1, 0, "U 'EdbSegP' - 10 - seg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawRef",683,G__EddDict_993_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"F - - 0 - start F - - 0 - end", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectVertexTracks",1862,G__EddDict_993_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - vtx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetArrV",679,G__EddDict_993_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - arrv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VertexDraw",1036,G__EddDict_993_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbVertex' - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDrawVertex",1336,G__EddDict_993_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CancelModifiedVTX",1641,G__EddDict_993_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteModifiedVTX",1654,G__EddDict_993_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AcceptModifiedVTX",1651,G__EddDict_993_0_24, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DialogModifiedVTX",1651,G__EddDict_993_0_25, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseDialogModifiedVTX",2153,G__EddDict_993_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UndoModifiedVTX",1465,G__EddDict_993_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawVertexEnvironment",2209,G__EddDict_993_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawAllObjects",1393,G__EddDict_993_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawVTXTracks",1272,G__EddDict_993_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - type U 'EdbVertex' - 0 '0' v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveTrackFromTable",2015,G__EddDict_993_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '0' ivt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DialogNeighborParameters",2450,G__EddDict_993_0_32, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AcceptModifiedParams",2005,G__EddDict_993_0_33, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseDialogModifiedParams",2507,G__EddDict_993_0_34, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CancelDialogModifiedParams",2587,G__EddDict_993_0_35, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DialogTrackParameters",2137,G__EddDict_993_0_36, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AcceptModifiedTrackParams",2506,G__EddDict_993_0_37, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseDialogModifiedTrackParams",3008,G__EddDict_993_0_38, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CancelDialogModifiedTrackParams",3088,G__EddDict_993_0_39, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearSegmentEnv",1507,G__EddDict_993_0_40, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawSegmentExtrapolationLine",2899,G__EddDict_993_0_41, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'EdbSegP' - 11 - s f - - 0 - zmin "
"f - - 0 - zmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EddDict_993_0_42, 85, G__get_linked_tagnum(&G__EddDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbDisplay::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EddDict_993_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbDisplay::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EddDict_993_0_44, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbDisplay::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EddDict_993_0_45, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbDisplay::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EddDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EddDict_993_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EddDict_993_0_50, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbDisplay::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EddDict_993_0_51, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbDisplay::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EddDict_993_0_52, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbDisplay::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EddDict_993_0_53, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbDisplay::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~EdbDisplay", 1119, G__EddDict_993_0_54, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbVertexG(void) {
   /* EdbVertexG */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EddDictLN_EdbVertexG));
   G__memfunc_setup("EdbVertexG",976,G__EddDict_994_0_1, 105, G__get_linked_tagnum(&G__EddDictLN_EdbVertexG), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbVertexG",976,G__EddDict_994_0_2, 105, G__get_linked_tagnum(&G__EddDictLN_EdbVertexG), -1, 0, 1, 1, 1, 0, "U 'EdbDisplay' - 0 - D", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVertex",938,G__EddDict_994_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbVertex' - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DumpVertex",1044,G__EddDict_994_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("InspectVertex",1364,G__EddDict_994_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("SetAsWorking",1217,G__EddDict_994_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("DeleteVertex",1233,G__EddDict_994_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("RemoveKink",1019,G__EddDict_994_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("TestVertex",1054,G__EddDict_994_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("GetTitle",802,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetObjectInfo",1283,(G__InterfaceMethod) NULL,67, -1, -1, 0, 2, 1, 1, 8, 
"i - - 0 - px i - - 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__EddDict_994_0_13, 85, G__get_linked_tagnum(&G__EddDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbVertexG::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EddDict_994_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbVertexG::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EddDict_994_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbVertexG::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EddDict_994_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbVertexG::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EddDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EddDict_994_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EddDict_994_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbVertexG::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EddDict_994_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbVertexG::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EddDict_994_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbVertexG::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EddDict_994_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbVertexG::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EdbVertexG", 976, G__EddDict_994_0_25, (int) ('i'), G__get_linked_tagnum(&G__EddDictLN_EdbVertexG), -1, 0, 1, 1, 1, 0, "u 'EdbVertexG' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EdbVertexG", 1102, G__EddDict_994_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbTrackG(void) {
   /* EdbTrackG */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EddDictLN_EdbTrackG));
   G__memfunc_setup("EdbTrackG",839,G__EddDict_995_0_1, 105, G__get_linked_tagnum(&G__EddDictLN_EdbTrackG), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbTrackG",839,G__EddDict_995_0_2, 105, G__get_linked_tagnum(&G__EddDictLN_EdbTrackG), -1, 0, 1, 1, 1, 0, "U 'EdbDisplay' - 0 - D", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbTrackG",839,G__EddDict_995_0_3, 105, G__get_linked_tagnum(&G__EddDictLN_EdbTrackG), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - nhits U 'EdbDisplay' - 0 - D", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrack",801,G__EddDict_995_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbTrackP' - 0 - tr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DumpTrack",907,G__EddDict_995_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("InspectTrack",1227,G__EddDict_995_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("SetAsWorkingVertex",1855,G__EddDict_995_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("RemoveTrackFromVertex",2165,G__EddDict_995_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("AddTrackToVertex",1599,G__EddDict_995_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("FixNewTrack",1094,G__EddDict_995_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("DeleteTrack",1096,G__EddDict_995_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("UndoNewTrack",1205,G__EddDict_995_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("UndoSplit",930,G__EddDict_995_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("UndoRemoveKink",1425,G__EddDict_995_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("AddToNewTrack",1259,G__EddDict_995_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("AddToNewTrackAndFit",1825,G__EddDict_995_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("InfoTrackVert",1314,G__EddDict_995_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("EstimateMomentum",1678,G__EddDict_995_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("GetTitle",802,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetObjectInfo",1283,(G__InterfaceMethod) NULL,67, -1, -1, 0, 2, 1, 1, 8, 
"i - - 0 - px i - - 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__EddDict_995_0_22, 85, G__get_linked_tagnum(&G__EddDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbTrackG::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EddDict_995_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbTrackG::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EddDict_995_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbTrackG::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EddDict_995_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbTrackG::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EddDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EddDict_995_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EddDict_995_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbTrackG::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EddDict_995_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbTrackG::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EddDict_995_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbTrackG::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EddDict_995_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbTrackG::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EdbTrackG", 839, G__EddDict_995_0_34, (int) ('i'), G__get_linked_tagnum(&G__EddDictLN_EdbTrackG), -1, 0, 1, 1, 1, 0, "u 'EdbTrackG' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EdbTrackG", 965, G__EddDict_995_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncEddDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalEddDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcEddDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__EddDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__EddDictLN_iteratorlErandom_access_iterator_tagcOcharcOlongcOcharmUcOcharaNgR = { "iterator<random_access_iterator_tag,char,long,char*,char&>" , 115 , -1 };
G__linked_taginfo G__EddDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__EddDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR = { "iterator<random_access_iterator_tag,ROOT::TSchemaHelper,long,ROOT::TSchemaHelper*,ROOT::TSchemaHelper&>" , 115 , -1 };
G__linked_taginfo G__EddDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLconst_iteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::const_iterator>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__EddDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__EddDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR = { "iterator<random_access_iterator_tag,TVirtualArray*,long,TVirtualArray**,TVirtualArray*&>" , 115 , -1 };
G__linked_taginfo G__EddDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLconst_iteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::const_iterator>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TAttMarker = { "TAttMarker" , 99 , -1 };
G__linked_taginfo G__EddDictLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__EddDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__EddDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_iteratorlErandom_access_iterator_tagcOpairlEunsignedsPintcOintgRcOlongcOpairlEunsignedsPintcOintgRmUcOpairlEunsignedsPintcOintgRaNgR = { "iterator<random_access_iterator_tag,pair<unsigned int,int>,long,pair<unsigned int,int>*,pair<unsigned int,int>&>" , 115 , -1 };
G__linked_taginfo G__EddDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLconst_iteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::const_iterator>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TView = { "TView" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TPad = { "TPad" , 99 , -1 };
G__linked_taginfo G__EddDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__EddDictLN_TAtt3D = { "TAtt3D" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TPolyLine3D = { "TPolyLine3D" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TPolyMarker3D = { "TPolyMarker3D" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TArrayF = { "TArrayF" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TArrayI = { "TArrayI" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TButton = { "TButton" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TGMainFrame = { "TGMainFrame" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TText = { "TText" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TPaveText = { "TPaveText" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TArc = { "TArc" , 99 , -1 };
G__linked_taginfo G__EddDictLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR = { "map<int,TGeoElementRN*,less<int>,allocator<pair<const int,TGeoElementRN*> > >" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TGeoVolume = { "TGeoVolume" , 99 , -1 };
G__linked_taginfo G__EddDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR = { "vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >" , 99 , -1 };
G__linked_taginfo G__EddDictLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_iteratorlErandom_access_iterator_tagcOTGeoVolumeAssemblycLcLThreadData_tmUcOlongcOTGeoVolumeAssemblycLcLThreadData_tmUmUcOTGeoVolumeAssemblycLcLThreadData_tmUaNgR = { "iterator<random_access_iterator_tag,TGeoVolumeAssembly::ThreadData_t*,long,TGeoVolumeAssembly::ThreadData_t**,TGeoVolumeAssembly::ThreadData_t*&>" , 115 , -1 };
G__linked_taginfo G__EddDictLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLconst_iteratorgR = { "reverse_iterator<vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >::const_iterator>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TView3D = { "TView3D" , 99 , -1 };
G__linked_taginfo G__EddDictLN_Edb3DView = { "Edb3DView" , 99 , -1 };
G__linked_taginfo G__EddDictLN_EdbDisplayBase = { "EdbDisplayBase" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TGNumberEntry = { "TGNumberEntry" , 99 , -1 };
G__linked_taginfo G__EddDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_EdbSegP = { "EdbSegP" , 99 , -1 };
G__linked_taginfo G__EddDictLN_EdbVertex = { "EdbVertex" , 99 , -1 };
G__linked_taginfo G__EddDictLN_EdbTrackP = { "EdbTrackP" , 99 , -1 };
G__linked_taginfo G__EddDictLN_EdbLayer = { "EdbLayer" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_listlEVERTEXcLcLRelationmUcOallocatorlEVERTEXcLcLRelationmUgRsPgR = { "list<VERTEX::Relation*,allocator<VERTEX::Relation*> >" , 99 , -1 };
G__linked_taginfo G__EddDictLN_listlEVERTEXcLcLMassCmUcOallocatorlEVERTEXcLcLMassCmUgRsPgR = { "list<VERTEX::MassC*,allocator<VERTEX::MassC*> >" , 99 , -1 };
G__linked_taginfo G__EddDictLN_vectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgR = { "vector<VERTEX::Track*,allocator<VERTEX::Track*> >" , 99 , -1 };
G__linked_taginfo G__EddDictLN_reverse_iteratorlEvectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<VERTEX::Track*,allocator<VERTEX::Track*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_iteratorlErandom_access_iterator_tagcOVERTEXcLcLTrackmUcOlongcOVERTEXcLcLTrackmUmUcOVERTEXcLcLTrackmUaNgR = { "iterator<random_access_iterator_tag,VERTEX::Track*,long,VERTEX::Track**,VERTEX::Track*&>" , 115 , -1 };
G__linked_taginfo G__EddDictLN_reverse_iteratorlEvectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgRcLcLconst_iteratorgR = { "reverse_iterator<vector<VERTEX::Track*,allocator<VERTEX::Track*> >::const_iterator>" , 99 , -1 };
G__linked_taginfo G__EddDictLN_EdbVertexRec = { "EdbVertexRec" , 99 , -1 };
G__linked_taginfo G__EddDictLN_EdbSegG = { "EdbSegG" , 99 , -1 };
G__linked_taginfo G__EddDictLN_EdbDisplay = { "EdbDisplay" , 99 , -1 };
G__linked_taginfo G__EddDictLN_EdbVertexG = { "EdbVertexG" , 99 , -1 };
G__linked_taginfo G__EddDictLN_EdbTrackG = { "EdbTrackG" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableEddDict() {
  G__EddDictLN_TClass.tagnum = -1 ;
  G__EddDictLN_TBuffer.tagnum = -1 ;
  G__EddDictLN_TMemberInspector.tagnum = -1 ;
  G__EddDictLN_TObject.tagnum = -1 ;
  G__EddDictLN_TNamed.tagnum = -1 ;
  G__EddDictLN_iteratorlErandom_access_iterator_tagcOcharcOlongcOcharmUcOcharaNgR.tagnum = -1 ;
  G__EddDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__EddDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__EddDictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR.tagnum = -1 ;
  G__EddDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLconst_iteratorgR.tagnum = -1 ;
  G__EddDictLN_TList.tagnum = -1 ;
  G__EddDictLN_TObjArray.tagnum = -1 ;
  G__EddDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__EddDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__EddDictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR.tagnum = -1 ;
  G__EddDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLconst_iteratorgR.tagnum = -1 ;
  G__EddDictLN_TAttLine.tagnum = -1 ;
  G__EddDictLN_TAttMarker.tagnum = -1 ;
  G__EddDictLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__EddDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__EddDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__EddDictLN_iteratorlErandom_access_iterator_tagcOpairlEunsignedsPintcOintgRcOlongcOpairlEunsignedsPintcOintgRmUcOpairlEunsignedsPintcOintgRaNgR.tagnum = -1 ;
  G__EddDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLconst_iteratorgR.tagnum = -1 ;
  G__EddDictLN_TView.tagnum = -1 ;
  G__EddDictLN_TCanvas.tagnum = -1 ;
  G__EddDictLN_TPad.tagnum = -1 ;
  G__EddDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__EddDictLN_TAtt3D.tagnum = -1 ;
  G__EddDictLN_TPolyLine3D.tagnum = -1 ;
  G__EddDictLN_TPolyMarker3D.tagnum = -1 ;
  G__EddDictLN_TArrayF.tagnum = -1 ;
  G__EddDictLN_TArrayI.tagnum = -1 ;
  G__EddDictLN_TButton.tagnum = -1 ;
  G__EddDictLN_TGMainFrame.tagnum = -1 ;
  G__EddDictLN_TText.tagnum = -1 ;
  G__EddDictLN_TPaveText.tagnum = -1 ;
  G__EddDictLN_TArc.tagnum = -1 ;
  G__EddDictLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR.tagnum = -1 ;
  G__EddDictLN_TGeoVolume.tagnum = -1 ;
  G__EddDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR.tagnum = -1 ;
  G__EddDictLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__EddDictLN_iteratorlErandom_access_iterator_tagcOTGeoVolumeAssemblycLcLThreadData_tmUcOlongcOTGeoVolumeAssemblycLcLThreadData_tmUmUcOTGeoVolumeAssemblycLcLThreadData_tmUaNgR.tagnum = -1 ;
  G__EddDictLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLconst_iteratorgR.tagnum = -1 ;
  G__EddDictLN_TView3D.tagnum = -1 ;
  G__EddDictLN_Edb3DView.tagnum = -1 ;
  G__EddDictLN_EdbDisplayBase.tagnum = -1 ;
  G__EddDictLN_TGNumberEntry.tagnum = -1 ;
  G__EddDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__EddDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__EddDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__EddDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__EddDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__EddDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__EddDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__EddDictLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__EddDictLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__EddDictLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__EddDictLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__EddDictLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__EddDictLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__EddDictLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__EddDictLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__EddDictLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__EddDictLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__EddDictLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__EddDictLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__EddDictLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__EddDictLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__EddDictLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__EddDictLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__EddDictLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__EddDictLN_EdbSegP.tagnum = -1 ;
  G__EddDictLN_EdbVertex.tagnum = -1 ;
  G__EddDictLN_EdbTrackP.tagnum = -1 ;
  G__EddDictLN_EdbLayer.tagnum = -1 ;
  G__EddDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__EddDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__EddDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__EddDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__EddDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__EddDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__EddDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__EddDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__EddDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__EddDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__EddDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__EddDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__EddDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__EddDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__EddDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__EddDictLN_listlEVERTEXcLcLRelationmUcOallocatorlEVERTEXcLcLRelationmUgRsPgR.tagnum = -1 ;
  G__EddDictLN_listlEVERTEXcLcLMassCmUcOallocatorlEVERTEXcLcLMassCmUgRsPgR.tagnum = -1 ;
  G__EddDictLN_vectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgR.tagnum = -1 ;
  G__EddDictLN_reverse_iteratorlEvectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__EddDictLN_iteratorlErandom_access_iterator_tagcOVERTEXcLcLTrackmUcOlongcOVERTEXcLcLTrackmUmUcOVERTEXcLcLTrackmUaNgR.tagnum = -1 ;
  G__EddDictLN_reverse_iteratorlEvectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgRcLcLconst_iteratorgR.tagnum = -1 ;
  G__EddDictLN_EdbVertexRec.tagnum = -1 ;
  G__EddDictLN_EdbSegG.tagnum = -1 ;
  G__EddDictLN_EdbDisplay.tagnum = -1 ;
  G__EddDictLN_EdbVertexG.tagnum = -1 ;
  G__EddDictLN_EdbTrackG.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableEddDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__EddDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__EddDictLN_iteratorlErandom_access_iterator_tagcOcharcOlongcOcharmUcOcharaNgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLconst_iteratorgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TList);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__EddDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLconst_iteratorgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TAttLine);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TAttMarker);
   G__get_linked_tagnum_fwd(&G__EddDictLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_iteratorlErandom_access_iterator_tagcOpairlEunsignedsPintcOintgRcOlongcOpairlEunsignedsPintcOintgRmUcOpairlEunsignedsPintcOintgRaNgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLconst_iteratorgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TView);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TPad);
   G__get_linked_tagnum_fwd(&G__EddDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TAtt3D);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TPolyLine3D);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TPolyMarker3D);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TArrayF);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TArrayI);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TButton);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TGMainFrame);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TText);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TPaveText);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TArc);
   G__get_linked_tagnum_fwd(&G__EddDictLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TGeoVolume);
   G__get_linked_tagnum_fwd(&G__EddDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_iteratorlErandom_access_iterator_tagcOTGeoVolumeAssemblycLcLThreadData_tmUcOlongcOTGeoVolumeAssemblycLcLThreadData_tmUmUcOTGeoVolumeAssemblycLcLThreadData_tmUaNgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLconst_iteratorgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TView3D);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EddDictLN_Edb3DView),sizeof(Edb3DView),-1,62720,"Event Display",G__setup_memvarEdb3DView,G__setup_memfuncEdb3DView);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EddDictLN_EdbDisplayBase),sizeof(EdbDisplayBase),-1,62720,"basic class for FEDRA Event Display",G__setup_memvarEdbDisplayBase,G__setup_memfuncEdbDisplayBase);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TGNumberEntry);
   G__get_linked_tagnum_fwd(&G__EddDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TMatrixTSparseDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_EdbSegP);
   G__get_linked_tagnum_fwd(&G__EddDictLN_EdbVertex);
   G__get_linked_tagnum_fwd(&G__EddDictLN_EdbTrackP);
   G__get_linked_tagnum_fwd(&G__EddDictLN_EdbLayer);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_listlEVERTEXcLcLRelationmUcOallocatorlEVERTEXcLcLRelationmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_listlEVERTEXcLcLMassCmUcOallocatorlEVERTEXcLcLMassCmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_vectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_reverse_iteratorlEvectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_iteratorlErandom_access_iterator_tagcOVERTEXcLcLTrackmUcOlongcOVERTEXcLcLTrackmUmUcOVERTEXcLcLTrackmUaNgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_reverse_iteratorlEvectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgRcLcLconst_iteratorgR);
   G__get_linked_tagnum_fwd(&G__EddDictLN_EdbVertexRec);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EddDictLN_EdbSegG),sizeof(EdbSegG),-1,62720,"Segment",G__setup_memvarEdbSegG,G__setup_memfuncEdbSegG);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EddDictLN_EdbDisplay),sizeof(EdbDisplay),-1,62720,"FEDRA Event Display",G__setup_memvarEdbDisplay,G__setup_memfuncEdbDisplay);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EddDictLN_EdbVertexG),sizeof(EdbVertexG),-1,62720,"Vertex",G__setup_memvarEdbVertexG,G__setup_memfuncEdbVertexG);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EddDictLN_EdbTrackG),sizeof(EdbTrackG),-1,62720,"Track",G__setup_memvarEdbTrackG,G__setup_memfuncEdbTrackG);
}
extern "C" void G__cpp_setupEddDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupEddDict()");
  G__set_cpp_environmentEddDict();
  G__cpp_setup_tagtableEddDict();

  G__cpp_setup_inheritanceEddDict();

  G__cpp_setup_typetableEddDict();

  G__cpp_setup_memvarEddDict();

  G__cpp_setup_memfuncEddDict();
  G__cpp_setup_globalEddDict();
  G__cpp_setup_funcEddDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncEddDict();
  return;
}
class G__cpp_setup_initEddDict {
  public:
    G__cpp_setup_initEddDict() { G__add_setup_func("EddDict",(G__incsetup)(&G__cpp_setupEddDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initEddDict() { G__remove_setup_func("EddDict"); }
};
G__cpp_setup_initEddDict G__cpp_setup_initializerEddDict;

