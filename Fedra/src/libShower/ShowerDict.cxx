//
// File generated by C:\root_v5.34.38\bin\rootcint.EXE at Tue Jun 02 09:10:42 2020

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME ShowerDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "ShowerDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void EdbShowerRec_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbShowerRec(void *p = 0);
   static void *newArray_EdbShowerRec(Long_t size, void *p);
   static void delete_EdbShowerRec(void *p);
   static void deleteArray_EdbShowerRec(void *p);
   static void destruct_EdbShowerRec(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbShowerRec*)
   {
      ::EdbShowerRec *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbShowerRec >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbShowerRec", ::EdbShowerRec::Class_Version(), "./EdbShowerRec.h", 25,
                  typeid(::EdbShowerRec), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbShowerRec::Dictionary, isa_proxy, 4,
                  sizeof(::EdbShowerRec) );
      instance.SetNew(&new_EdbShowerRec);
      instance.SetNewArray(&newArray_EdbShowerRec);
      instance.SetDelete(&delete_EdbShowerRec);
      instance.SetDeleteArray(&deleteArray_EdbShowerRec);
      instance.SetDestructor(&destruct_EdbShowerRec);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbShowerRec*)
   {
      return GenerateInitInstanceLocal((::EdbShowerRec*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbShowerRec*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbShowerAlg_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbShowerAlg(void *p = 0);
   static void *newArray_EdbShowerAlg(Long_t size, void *p);
   static void delete_EdbShowerAlg(void *p);
   static void deleteArray_EdbShowerAlg(void *p);
   static void destruct_EdbShowerAlg(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbShowerAlg*)
   {
      ::EdbShowerAlg *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbShowerAlg >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbShowerAlg", ::EdbShowerAlg::Class_Version(), "./EdbShowerAlg.h", 30,
                  typeid(::EdbShowerAlg), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbShowerAlg::Dictionary, isa_proxy, 4,
                  sizeof(::EdbShowerAlg) );
      instance.SetNew(&new_EdbShowerAlg);
      instance.SetNewArray(&newArray_EdbShowerAlg);
      instance.SetDelete(&delete_EdbShowerAlg);
      instance.SetDeleteArray(&deleteArray_EdbShowerAlg);
      instance.SetDestructor(&destruct_EdbShowerAlg);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbShowerAlg*)
   {
      return GenerateInitInstanceLocal((::EdbShowerAlg*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbShowerAlg*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbShowerAlg_GS_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbShowerAlg_GS(void *p = 0);
   static void *newArray_EdbShowerAlg_GS(Long_t size, void *p);
   static void delete_EdbShowerAlg_GS(void *p);
   static void deleteArray_EdbShowerAlg_GS(void *p);
   static void destruct_EdbShowerAlg_GS(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbShowerAlg_GS*)
   {
      ::EdbShowerAlg_GS *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbShowerAlg_GS >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbShowerAlg_GS", ::EdbShowerAlg_GS::Class_Version(), "./EdbShowerAlg.h", 191,
                  typeid(::EdbShowerAlg_GS), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbShowerAlg_GS::Dictionary, isa_proxy, 4,
                  sizeof(::EdbShowerAlg_GS) );
      instance.SetNew(&new_EdbShowerAlg_GS);
      instance.SetNewArray(&newArray_EdbShowerAlg_GS);
      instance.SetDelete(&delete_EdbShowerAlg_GS);
      instance.SetDeleteArray(&deleteArray_EdbShowerAlg_GS);
      instance.SetDestructor(&destruct_EdbShowerAlg_GS);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbShowerAlg_GS*)
   {
      return GenerateInitInstanceLocal((::EdbShowerAlg_GS*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbShowerAlg_GS*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbShowerAlgESimple_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbShowerAlgESimple(void *p = 0);
   static void *newArray_EdbShowerAlgESimple(Long_t size, void *p);
   static void delete_EdbShowerAlgESimple(void *p);
   static void deleteArray_EdbShowerAlgESimple(void *p);
   static void destruct_EdbShowerAlgESimple(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbShowerAlgESimple*)
   {
      ::EdbShowerAlgESimple *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbShowerAlgESimple >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbShowerAlgESimple", ::EdbShowerAlgESimple::Class_Version(), "./EdbShowerAlg.h", 323,
                  typeid(::EdbShowerAlgESimple), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbShowerAlgESimple::Dictionary, isa_proxy, 4,
                  sizeof(::EdbShowerAlgESimple) );
      instance.SetNew(&new_EdbShowerAlgESimple);
      instance.SetNewArray(&newArray_EdbShowerAlgESimple);
      instance.SetDelete(&delete_EdbShowerAlgESimple);
      instance.SetDeleteArray(&deleteArray_EdbShowerAlgESimple);
      instance.SetDestructor(&destruct_EdbShowerAlgESimple);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbShowerAlgESimple*)
   {
      return GenerateInitInstanceLocal((::EdbShowerAlgESimple*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbShowerAlgESimple*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbShowerAlgIDSimple_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbShowerAlgIDSimple(void *p = 0);
   static void *newArray_EdbShowerAlgIDSimple(Long_t size, void *p);
   static void delete_EdbShowerAlgIDSimple(void *p);
   static void deleteArray_EdbShowerAlgIDSimple(void *p);
   static void destruct_EdbShowerAlgIDSimple(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbShowerAlgIDSimple*)
   {
      ::EdbShowerAlgIDSimple *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbShowerAlgIDSimple >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbShowerAlgIDSimple", ::EdbShowerAlgIDSimple::Class_Version(), "./EdbShowerAlg.h", 596,
                  typeid(::EdbShowerAlgIDSimple), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbShowerAlgIDSimple::Dictionary, isa_proxy, 4,
                  sizeof(::EdbShowerAlgIDSimple) );
      instance.SetNew(&new_EdbShowerAlgIDSimple);
      instance.SetNewArray(&newArray_EdbShowerAlgIDSimple);
      instance.SetDelete(&delete_EdbShowerAlgIDSimple);
      instance.SetDeleteArray(&deleteArray_EdbShowerAlgIDSimple);
      instance.SetDestructor(&destruct_EdbShowerAlgIDSimple);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbShowerAlgIDSimple*)
   {
      return GenerateInitInstanceLocal((::EdbShowerAlgIDSimple*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbShowerAlgIDSimple*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EdbPVRQuality_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EdbPVRQuality(void *p = 0);
   static void *newArray_EdbPVRQuality(Long_t size, void *p);
   static void delete_EdbPVRQuality(void *p);
   static void deleteArray_EdbPVRQuality(void *p);
   static void destruct_EdbPVRQuality(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EdbPVRQuality*)
   {
      ::EdbPVRQuality *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EdbPVRQuality >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EdbPVRQuality", ::EdbPVRQuality::Class_Version(), "./EdbPVRQuality.h", 38,
                  typeid(::EdbPVRQuality), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EdbPVRQuality::Dictionary, isa_proxy, 4,
                  sizeof(::EdbPVRQuality) );
      instance.SetNew(&new_EdbPVRQuality);
      instance.SetNewArray(&newArray_EdbPVRQuality);
      instance.SetDelete(&delete_EdbPVRQuality);
      instance.SetDeleteArray(&deleteArray_EdbPVRQuality);
      instance.SetDestructor(&destruct_EdbPVRQuality);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EdbPVRQuality*)
   {
      return GenerateInitInstanceLocal((::EdbPVRQuality*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EdbPVRQuality*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr EdbShowerRec::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbShowerRec::Class_Name()
{
   return "EdbShowerRec";
}

//______________________________________________________________________________
const char *EdbShowerRec::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerRec*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbShowerRec::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerRec*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbShowerRec::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerRec*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbShowerRec::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerRec*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbShowerAlg::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbShowerAlg::Class_Name()
{
   return "EdbShowerAlg";
}

//______________________________________________________________________________
const char *EdbShowerAlg::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerAlg*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbShowerAlg::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerAlg*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbShowerAlg::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerAlg*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbShowerAlg::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerAlg*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbShowerAlg_GS::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbShowerAlg_GS::Class_Name()
{
   return "EdbShowerAlg_GS";
}

//______________________________________________________________________________
const char *EdbShowerAlg_GS::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerAlg_GS*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbShowerAlg_GS::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerAlg_GS*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbShowerAlg_GS::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerAlg_GS*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbShowerAlg_GS::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerAlg_GS*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbShowerAlgESimple::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbShowerAlgESimple::Class_Name()
{
   return "EdbShowerAlgESimple";
}

//______________________________________________________________________________
const char *EdbShowerAlgESimple::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerAlgESimple*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbShowerAlgESimple::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerAlgESimple*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbShowerAlgESimple::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerAlgESimple*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbShowerAlgESimple::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerAlgESimple*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbShowerAlgIDSimple::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbShowerAlgIDSimple::Class_Name()
{
   return "EdbShowerAlgIDSimple";
}

//______________________________________________________________________________
const char *EdbShowerAlgIDSimple::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerAlgIDSimple*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbShowerAlgIDSimple::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerAlgIDSimple*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbShowerAlgIDSimple::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerAlgIDSimple*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbShowerAlgIDSimple::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbShowerAlgIDSimple*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EdbPVRQuality::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EdbPVRQuality::Class_Name()
{
   return "EdbPVRQuality";
}

//______________________________________________________________________________
const char *EdbPVRQuality::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbPVRQuality*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EdbPVRQuality::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EdbPVRQuality*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EdbPVRQuality::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbPVRQuality*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EdbPVRQuality::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EdbPVRQuality*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void EdbShowerRec::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbShowerRec.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(EdbShowerRec::Class(),this);
   } else {
      R__b.WriteClassBuffer(EdbShowerRec::Class(),this);
   }
}

//______________________________________________________________________________
void EdbShowerRec::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbShowerRec.
      typedef ::EdbShowerRec msvc_bug_workaround;
      TClass *R__cl = msvc_bug_workaround::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAlgoParameterConeRadius", &eAlgoParameterConeRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAlgoParameterConeAngle", &eAlgoParameterConeAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAlgoParameterConnectionDR", &eAlgoParameterConnectionDR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAlgoParameterConnectionDT", &eAlgoParameterConnectionDT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAlgoParameterNPropagation", &eAlgoParameterNPropagation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eQualityPar[2]", eQualityPar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eUseQualityPar", &eUseQualityPar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eID", &eID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eX0", &eX0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eY0", &eY0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eZ0", &eZ0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eTx", &eTx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eTy", &eTy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eTrID", &eTrID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eChi20", &eChi20);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eW0", &eW0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eP0", &eP0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eFlag0", &eFlag0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "emcDigitIndexTop0", &emcDigitIndexTop0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "emcDigitIndexBottom0", &emcDigitIndexBottom0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eDz", &eDz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eL", &eL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eIDb[10000]", eIDb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePlateb[10000]", ePlateb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eXb[10000]", eXb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eYb[10000]", eYb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eZb[10000]", eZb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eTXb[10000]", eTXb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eTYb[10000]", eTYb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eChi2b[10000]", eChi2b);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePb[10000]", ePb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eWb[10000]", eWb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eFlagb[10000]", eFlagb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eNFilmb[10000]", eNFilmb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eDeltarb[10000]", eDeltarb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eDeltathetab[10000]", eDeltathetab);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eTagPrimary[10000]", eTagPrimary);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "emcDigitIndexTop[1000]", emcDigitIndexTop);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "emcDigitIndexBottom[1000]", emcDigitIndexBottom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eSize", &eSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eSize15", &eSize15);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eSize20", &eSize20);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eSize30", &eSize30);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eOutput", &eOutput);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eOutput15", &eOutput15);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eOutput20", &eOutput20);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eOutput30", &eOutput30);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eInitiatorBTIsCreated", &eInitiatorBTIsCreated);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eInBTArrayIsFilled", &eInBTArrayIsFilled);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eFilename_LinkedTracks", &eFilename_LinkedTracks);
      R__insp.InspectMember(eFilename_LinkedTracks, "eFilename_LinkedTracks.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eAli", &eAli);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eAli_Sub", &eAli_Sub);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAli_Sub_halfsize", &eAli_Sub_halfsize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAliNpat", &eAliNpat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAli_SubNpat", &eAli_SubNpat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAliNpatM1", &eAliNpatM1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eNumberPlate_eAliPID", &eNumberPlate_eAliPID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAliLoaded", &eAliLoaded);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eUseAliSub", &eUseAliSub);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eInBTArray", &eInBTArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eInBTArrayN", &eInBTArrayN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eInBTArrayLoaded", &eInBTArrayLoaded);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eInBTArrayMaxSize", &eInBTArrayMaxSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eRecoShowerArray", &eRecoShowerArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eRecoShowerArrayN", &eRecoShowerArrayN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eEnergyCorrectedb", &eEnergyCorrectedb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eEnergyUnCorrectedb", &eEnergyUnCorrectedb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eEnergySigmaCorrectedb", &eEnergySigmaCorrectedb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eEnergySigmaUnCorrectedb", &eEnergySigmaUnCorrectedb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy_shot_particle", &energy_shot_particle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eHistEnergyNominal", &eHistEnergyNominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eHistEnergyCorrectedb", &eHistEnergyCorrectedb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eHistEnergyUnCorrectedb", &eHistEnergyUnCorrectedb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eHistEnergySigmaCorrectedb", &eHistEnergySigmaCorrectedb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eHistEnergySigmaUnCorrectedb", &eHistEnergySigmaUnCorrectedb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eShowerTreeIsDone", &eShowerTreeIsDone);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eDoEnergyCalculation", &eDoEnergyCalculation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eEnergyIsDone", &eEnergyIsDone);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eEnergyANN", &eEnergyANN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eEnergyWeightFileString[9]", &eEnergyWeightFileString);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ANNInterimTreeInputvariables", &ANNInterimTreeInputvariables);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inANN[70]", inANN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eEnergyResolutionFitFunction_All", &eEnergyResolutionFitFunction_All);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eShowersN", &eShowersN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number_eventb", &number_eventb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sizeb15", &sizeb15);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sizeb20", &sizeb20);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sizeb30", &sizeb30);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "output15", &output15);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "output20", &output20);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "output30", &output30);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "output50", &output50);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_MC", &E_MC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sizeb", &sizeb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isizeb", &isizeb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "showerID", &showerID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idb[10000]", idb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "plateb[10000]", plateb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xb[10000]", xb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yb[10000]", yb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zb[10000]", zb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "txb[10000]", txb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tyb[10000]", tyb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nfilmb[10000]", nfilmb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ngrainb[10000]", ngrainb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ntrace1simub[10000]", ntrace1simub);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ntrace2simub[10000]", ntrace2simub);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ntrace3simub[10000]", ntrace3simub);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ntrace4simub[10000]", ntrace4simub);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chi2btkb[10000]", chi2btkb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "deltarb[10000]", deltarb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "deltathetab[10000]", deltathetab);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "deltaxb[10000]", deltaxb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "deltayb[10000]", deltayb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tagprimary[10000]", tagprimary);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mcDigitIndexTop[1000]", mcDigitIndexTop);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mcDigitIndexBottom[1000]", mcDigitIndexBottom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EnergyCorrectedb", &EnergyCorrectedb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EnergyUnCorrectedb", &EnergyUnCorrectedb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EnergySigmaCorrectedb", &EnergySigmaCorrectedb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EnergySigmaUnCorrectedb", &EnergySigmaUnCorrectedb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "purityb", &purityb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackdensb", &trackdensb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eProb90", &eProb90);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eProb1", &eProb1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fileout", &fileout);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*treesaveb", &treesaveb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*file", &file);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fileout2", &fileout2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*treesaveb2", &treesaveb2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fileout3", &fileout3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*treesaveb3", &treesaveb3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gAli", &gAli);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FileReconstructedShowerTree", &FileReconstructedShowerTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FileShowerParametrisationTree", &FileShowerParametrisationTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ShowerParametrisationTree", &ShowerParametrisationTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*varia", &varia);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dproc", &dproc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*a", &a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin1", &bin1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin2", &bin2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin3", &bin3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin4", &bin4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin5", &bin5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin6", &bin6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin7", &bin7);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin8", &bin8);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin9", &bin9);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin10", &bin10);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin11", &bin11);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin12", &bin12);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin13", &bin13);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin14", &bin14);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin15", &bin15);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin16", &bin16);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin17", &bin17);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin18", &bin18);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin19", &bin19);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin20", &bin20);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin21", &bin21);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin22", &bin22);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin23", &bin23);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin24", &bin24);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin25", &bin25);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin26", &bin26);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin27", &bin27);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin28", &bin28);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin29", &bin29);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin30", &bin30);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin31", &bin31);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin32", &bin32);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin33", &bin33);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin34", &bin34);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin35", &bin35);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin41", &bin41);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin42", &bin42);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin43", &bin43);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin44", &bin44);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin45", &bin45);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin46", &bin46);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin47", &bin47);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin48", &bin48);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin49", &bin49);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin50", &bin50);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin51", &bin51);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin52", &bin52);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin53", &bin53);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin54", &bin54);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin55", &bin55);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin56", &bin56);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin57", &bin57);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin58", &bin58);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin59", &bin59);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin60", &bin60);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "type", &type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mlp1", &mlp1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mlp2", &mlp2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mlp3", &mlp3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mlp4", &mlp4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cmd[500]", cmd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*histo_nbtk_av", &histo_nbtk_av);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*histo_longprofile_av", &histo_longprofile_av);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*histo_deltaR_mean", &histo_deltaR_mean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*histo_deltaT_mean", &histo_deltaT_mean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*histo_deltaR_rms", &histo_deltaR_rms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*histo_deltaT_rms", &histo_deltaT_rms);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbShowerRec(void *p) {
      return  p ? new(p) ::EdbShowerRec : new ::EdbShowerRec;
   }
   static void *newArray_EdbShowerRec(Long_t nElements, void *p) {
      return p ? new(p) ::EdbShowerRec[nElements] : new ::EdbShowerRec[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbShowerRec(void *p) {
      delete ((::EdbShowerRec*)p);
   }
   static void deleteArray_EdbShowerRec(void *p) {
      delete [] ((::EdbShowerRec*)p);
   }
   static void destruct_EdbShowerRec(void *p) {
      typedef ::EdbShowerRec current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::EdbShowerRec

//______________________________________________________________________________
void EdbShowerAlg::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbShowerAlg.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(EdbShowerAlg::Class(),this);
   } else {
      R__b.WriteClassBuffer(EdbShowerAlg::Class(),this);
   }
}

//______________________________________________________________________________
void EdbShowerAlg::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbShowerAlg.
      typedef ::EdbShowerAlg msvc_bug_workaround;
      TClass *R__cl = msvc_bug_workaround::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAlgName", &eAlgName);
      R__insp.InspectMember(eAlgName, "eAlgName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAlgValue", &eAlgValue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eParaValue[10]", eParaValue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eParaString[10]", eParaString);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eActualAlgParametersetNr", &eActualAlgParametersetNr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eAli", &eAli);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAliNpat", &eAliNpat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eInBTArray", &eInBTArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eInBTArrayN", &eInBTArrayN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eFirstPlate_eAliPID", &eFirstPlate_eAliPID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eLastPlate_eAliPID", &eLastPlate_eAliPID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eMiddlePlate_eAliPID", &eMiddlePlate_eAliPID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eNumberPlate_eAliPID", &eNumberPlate_eAliPID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eRecoShowerArray", &eRecoShowerArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eRecoShowerArrayN", &eRecoShowerArrayN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eAli_Sub", &eAli_Sub);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAli_SubNpat", &eAli_SubNpat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eUseAliSub", &eUseAliSub);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eRecoShower", &eRecoShower);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eDebug", &eDebug);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbShowerAlg(void *p) {
      return  p ? new(p) ::EdbShowerAlg : new ::EdbShowerAlg;
   }
   static void *newArray_EdbShowerAlg(Long_t nElements, void *p) {
      return p ? new(p) ::EdbShowerAlg[nElements] : new ::EdbShowerAlg[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbShowerAlg(void *p) {
      delete ((::EdbShowerAlg*)p);
   }
   static void deleteArray_EdbShowerAlg(void *p) {
      delete [] ((::EdbShowerAlg*)p);
   }
   static void destruct_EdbShowerAlg(void *p) {
      typedef ::EdbShowerAlg current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::EdbShowerAlg

//______________________________________________________________________________
void EdbShowerAlg_GS::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbShowerAlg_GS.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(EdbShowerAlg_GS::Class(),this);
   } else {
      R__b.WriteClassBuffer(EdbShowerAlg_GS::Class(),this);
   }
}

//______________________________________________________________________________
void EdbShowerAlg_GS::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbShowerAlg_GS.
      typedef ::EdbShowerAlg_GS msvc_bug_workaround;
      TClass *R__cl = msvc_bug_workaround::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eInVtxArray", &eInVtxArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eInVtxArrayN", &eInVtxArrayN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eInVtxArraySet", &eInVtxArraySet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eFindPairsPreselected", &eFindPairsPreselected);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eRecoMode", &eRecoMode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCutModeFull", &eCutModeFull);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eSetCleanPairs", &eSetCleanPairs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eANNPair", &eANNPair);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eANNPairCaseA", &eANNPairCaseA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eANNPairCaseB", &eANNPairCaseB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eANNPairCaseC", &eANNPairCaseC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eANNPairTree", &eANNPairTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANNPairCut[3]", eANNPairCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eValueGSNN_var00", &eValueGSNN_var00);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eValueGSNN_var01", &eValueGSNN_var01);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eValueGSNN_var02", &eValueGSNN_var02);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eValueGSNN_var03", &eValueGSNN_var03);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eValueGSNN_var04", &eValueGSNN_var04);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eValueGSNN_var05", &eValueGSNN_var05);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eValueGSNN_var06", &eValueGSNN_var06);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eValueGSNN_varInput", &eValueGSNN_varInput);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eValueGSNN_varOutput", &eValueGSNN_varOutput);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eSegmentPIDArray", &eSegmentPIDArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eSegmentIDArray", &eSegmentIDArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eSegment2PIDArray", &eSegment2PIDArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eSegment2IDArray", &eSegment2IDArray);
      EdbShowerAlg::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbShowerAlg_GS(void *p) {
      return  p ? new(p) ::EdbShowerAlg_GS : new ::EdbShowerAlg_GS;
   }
   static void *newArray_EdbShowerAlg_GS(Long_t nElements, void *p) {
      return p ? new(p) ::EdbShowerAlg_GS[nElements] : new ::EdbShowerAlg_GS[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbShowerAlg_GS(void *p) {
      delete ((::EdbShowerAlg_GS*)p);
   }
   static void deleteArray_EdbShowerAlg_GS(void *p) {
      delete [] ((::EdbShowerAlg_GS*)p);
   }
   static void destruct_EdbShowerAlg_GS(void *p) {
      typedef ::EdbShowerAlg_GS current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::EdbShowerAlg_GS

//______________________________________________________________________________
void EdbPVRQuality::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbPVRQuality.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(EdbPVRQuality::Class(),this);
   } else {
      R__b.WriteClassBuffer(EdbPVRQuality::Class(),this);
   }
}

//______________________________________________________________________________
void EdbPVRQuality::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbPVRQuality.
      typedef ::EdbPVRQuality msvc_bug_workaround;
      TClass *R__cl = msvc_bug_workaround::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eAli_orig", &eAli_orig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eAli_modified", &eAli_modified);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eNeedModified", &eNeedModified);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eIsSource", &eIsSource);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eIsTarget", &eIsTarget);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eHistGeometry", &eHistGeometry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAli_maxNpatterns", &eAli_maxNpatterns);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCutMethod", &eCutMethod);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCutMethodString", &eCutMethodString);
      R__insp.InspectMember(eCutMethodString, "eCutMethodString.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCutMethodIsDone[7]", eCutMethodIsDone);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eBTDensityLevel", &eBTDensityLevel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eBTDensityLevelAngularSpace[20]", eBTDensityLevelAngularSpace);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eBTDensityLevelCalcMethodMC", &eBTDensityLevelCalcMethodMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eBTDensityLevelCalcMethodMCConfirmationNumber", &eBTDensityLevelCalcMethodMCConfirmationNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePatternBTDensity_orig[114]", ePatternBTDensity_orig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePatternBTDensity_modified[114]", ePatternBTDensity_modified);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eHistChi2W", &eHistChi2W);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eHistYX", &eHistYX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eHistTYTX", &eHistTYTX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eHistTT", &eHistTT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eHistTanTheta", &eHistTanTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NbinsX", &NbinsX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NbinsY", &NbinsY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "minX", &minX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxX", &maxX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "minY", &minY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxY", &maxY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eProfileBTdens_vs_PID_source", &eProfileBTdens_vs_PID_source);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eProfileBTdens_vs_PID_source_meanX", &eProfileBTdens_vs_PID_source_meanX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eProfileBTdens_vs_PID_source_meanY", &eProfileBTdens_vs_PID_source_meanY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eProfileBTdens_vs_PID_source_rmsX", &eProfileBTdens_vs_PID_source_rmsX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eProfileBTdens_vs_PID_source_rmsY", &eProfileBTdens_vs_PID_source_rmsY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eProfileBTdens_vs_PID_target", &eProfileBTdens_vs_PID_target);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eProfileBTdens_vs_PID_target_meanX", &eProfileBTdens_vs_PID_target_meanX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eProfileBTdens_vs_PID_target_meanY", &eProfileBTdens_vs_PID_target_meanY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eProfileBTdens_vs_PID_target_rmsX", &eProfileBTdens_vs_PID_target_rmsX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eProfileBTdens_vs_PID_target_rmsY", &eProfileBTdens_vs_PID_target_rmsY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCutTTSqueezeFactor", &eCutTTSqueezeFactor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCutp0[114]", eCutp0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCutp1[114]", eCutp1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCutTTp0[114][20]", eCutTTp0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCutTTp1[114][20]", eCutTTp1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCutDistChi2[114]", eCutDistChi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCutDistW[114]", eCutDistW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAgreementChi2WDistCut[114]", eAgreementChi2WDistCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAgreementChi2CutMeanChi2", &eAgreementChi2CutMeanChi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAgreementChi2CutRMSChi2", &eAgreementChi2CutRMSChi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAgreementChi2CutMeanW", &eAgreementChi2CutMeanW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAgreementChi2CutRMSW", &eAgreementChi2CutRMSW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eX2Hat", &eX2Hat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eX2HatCut[114]", eX2HatCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eXi2Hat_m_chi2[114]", eXi2Hat_m_chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eXi2Hat_s_chi2[114]", eXi2Hat_s_chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eXi2Hat_m_WTilde[114]", eXi2Hat_m_WTilde);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eXi2Hat_s_WTilde[114]", eXi2Hat_s_WTilde);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eXi2HatTT_m_chi2[114][20]", eXi2HatTT_m_chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eXi2HatTT_s_chi2[114][20]", eXi2HatTT_s_chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eXi2HatTT_m_WTilde[114][20]", eXi2HatTT_m_WTilde);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eXi2HatTT_s_WTilde[114][20]", eXi2HatTT_s_WTilde);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eRandomCutThreshold", &eRandomCutThreshold);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbPVRQuality(void *p) {
      return  p ? new(p) ::EdbPVRQuality : new ::EdbPVRQuality;
   }
   static void *newArray_EdbPVRQuality(Long_t nElements, void *p) {
      return p ? new(p) ::EdbPVRQuality[nElements] : new ::EdbPVRQuality[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbPVRQuality(void *p) {
      delete ((::EdbPVRQuality*)p);
   }
   static void deleteArray_EdbPVRQuality(void *p) {
      delete [] ((::EdbPVRQuality*)p);
   }
   static void destruct_EdbPVRQuality(void *p) {
      typedef ::EdbPVRQuality current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::EdbPVRQuality

//______________________________________________________________________________
void EdbShowerAlgESimple::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbShowerAlgESimple.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(EdbShowerAlgESimple::Class(),this);
   } else {
      R__b.WriteClassBuffer(EdbShowerAlgESimple::Class(),this);
   }
}

//______________________________________________________________________________
void EdbShowerAlgESimple::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbShowerAlgESimple.
      typedef ::EdbShowerAlgESimple msvc_bug_workaround;
      TClass *R__cl = msvc_bug_workaround::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eRecoShowerArray", &eRecoShowerArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eRecoShowerArrayN", &eRecoShowerArrayN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eParaName", &eParaName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCalibrationOffset", &eCalibrationOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCalibrationSlope", &eCalibrationSlope);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePlateNumberType", &ePlateNumberType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePlateNumber", &ePlateNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eWeightFileString", &eWeightFileString);
      R__insp.InspectMember(eWeightFileString, "eWeightFileString.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eSpecificationType[7]", eSpecificationType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eSpecificationTypeString[7]", eSpecificationTypeString);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eSpecificationTypeStringArray[7][7]", eSpecificationTypeStringArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eSpecificationIsChanged", &eSpecificationIsChanged);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eForceSpecificationReload", &eForceSpecificationReload);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ePlateBinning[15]", ePlateBinning);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ANN_MLP", &ANN_MLP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ANN_MLP_ARRAY[15]", &ANN_MLP_ARRAY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ANNTree", &ANNTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inANN[70]", inANN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outANN", &outANN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ANN_nPlates_ARRAY[15]", ANN_nPlates_ARRAY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ANN_n_InputNeurons_ARRAY[15]", ANN_n_InputNeurons_ARRAY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ANN_n_InputNeurons", &ANN_n_InputNeurons);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ANN_Layout", &ANN_Layout);
      R__insp.InspectMember(ANN_Layout, "ANN_Layout.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ANN_WeightFile_ARRAY[15]", ANN_WeightFile_ARRAY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_MLP_CORR_0[15]", eANN_MLP_CORR_0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANN_MLP_CORR_1[15]", eANN_MLP_CORR_1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eParaShowerAxisAngle", &eParaShowerAxisAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eParanseg", &eParanseg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eParaBT_deltaR_mean", &eParaBT_deltaR_mean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eParaBT_deltaR_rms", &eParaBT_deltaR_rms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eParaBT_deltaT_mean", &eParaBT_deltaT_mean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eParaBT_deltaT_rms", &eParaBT_deltaT_rms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eParalongprofile[57]", eParalongprofile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eHisto_nbtk_av", &eHisto_nbtk_av);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eHisto_longprofile_av", &eHisto_longprofile_av);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eHisto_transprofile_av", &eHisto_transprofile_av);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eHisto_deltaR_mean", &eHisto_deltaR_mean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eHisto_deltaT_mean", &eHisto_deltaT_mean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eHisto_deltaR_rms", &eHisto_deltaR_rms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eHisto_deltaT_rms", &eHisto_deltaT_rms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eHisto_nbtk", &eHisto_nbtk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eHisto_longprofile", &eHisto_longprofile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eHisto_transprofile", &eHisto_transprofile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eHisto_deltaR", &eHisto_deltaR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eHisto_deltaT", &eHisto_deltaT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EffFunc_all", &EffFunc_all);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EffFunc_edefault", &EffFunc_edefault);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EffFunc_elletroni", &EffFunc_elletroni);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EffFunc_neuchmicro", &EffFunc_neuchmicro);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EffFunc_MiddleFix", &EffFunc_MiddleFix);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EffFunc_LowEff", &EffFunc_LowEff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EffFunc_UserEfficiency", &EffFunc_UserEfficiency);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eEfficiencyParametrisation", &eEfficiencyParametrisation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eEnergyArray", &eEnergyArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eEnergyArrayUnCorrected", &eEnergyArrayUnCorrected);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eEnergyArraySigmaCorrected", &eEnergyArraySigmaCorrected);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eEnergy", &eEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eEnergyCorr", &eEnergyCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eEnergyUnCorr", &eEnergyUnCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eEnergySigmaCorr", &eEnergySigmaCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eEnergyArrayCount", &eEnergyArrayCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eSplineArray_Energy_Stat_Electron", &eSplineArray_Energy_Stat_Electron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eSplineArray_Energy_Stat_Gamma", &eSplineArray_Energy_Stat_Gamma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eSplineArray_Energy_Sys_Electron", &eSplineArray_Energy_Sys_Electron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eSplineArray_Energy_Sys_Gamma", &eSplineArray_Energy_Sys_Gamma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eSplineCurrent", &eSplineCurrent);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbShowerAlgESimple(void *p) {
      return  p ? new(p) ::EdbShowerAlgESimple : new ::EdbShowerAlgESimple;
   }
   static void *newArray_EdbShowerAlgESimple(Long_t nElements, void *p) {
      return p ? new(p) ::EdbShowerAlgESimple[nElements] : new ::EdbShowerAlgESimple[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbShowerAlgESimple(void *p) {
      delete ((::EdbShowerAlgESimple*)p);
   }
   static void deleteArray_EdbShowerAlgESimple(void *p) {
      delete [] ((::EdbShowerAlgESimple*)p);
   }
   static void destruct_EdbShowerAlgESimple(void *p) {
      typedef ::EdbShowerAlgESimple current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::EdbShowerAlgESimple

//______________________________________________________________________________
void EdbShowerAlgIDSimple::Streamer(TBuffer &R__b)
{
   // Stream an object of class EdbShowerAlgIDSimple.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(EdbShowerAlgIDSimple::Class(),this);
   } else {
      R__b.WriteClassBuffer(EdbShowerAlgIDSimple::Class(),this);
   }
}

//______________________________________________________________________________
void EdbShowerAlgIDSimple::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EdbShowerAlgIDSimple.
      typedef ::EdbShowerAlgIDSimple msvc_bug_workaround;
      TClass *R__cl = msvc_bug_workaround::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eIDEnergySigmaCorr", &eIDEnergySigmaCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eANNIDCutValue", &eANNIDCutValue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eIDCutTypeValue[3]", eIDCutTypeValue);
      EdbShowerAlgESimple::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EdbShowerAlgIDSimple(void *p) {
      return  p ? new(p) ::EdbShowerAlgIDSimple : new ::EdbShowerAlgIDSimple;
   }
   static void *newArray_EdbShowerAlgIDSimple(Long_t nElements, void *p) {
      return p ? new(p) ::EdbShowerAlgIDSimple[nElements] : new ::EdbShowerAlgIDSimple[nElements];
   }
   // Wrapper around operator delete
   static void delete_EdbShowerAlgIDSimple(void *p) {
      delete ((::EdbShowerAlgIDSimple*)p);
   }
   static void deleteArray_EdbShowerAlgIDSimple(void *p) {
      delete [] ((::EdbShowerAlgIDSimple*)p);
   }
   static void destruct_EdbShowerAlgIDSimple(void *p) {
      typedef ::EdbShowerAlgIDSimple current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::EdbShowerAlgIDSimple

/********************************************************
* ShowerDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtableShowerDict();

extern "C" void G__set_cpp_environmentShowerDict() {
  G__add_ipath(".");
  G__add_ipath("..\\..\\include");
  G__cpp_reset_tagtableShowerDict();
}
#include <new>
extern "C" int G__cpp_dllrevShowerDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* EdbShowerRec */
static int G__ShowerDict_817_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerRec* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerRec[n];
     } else {
       p = new((void*) gvp) EdbShowerRec[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerRec;
     } else {
       p = new((void*) gvp) EdbShowerRec;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerRec));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerRec* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbShowerRec(
(TObjArray*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (EdbPVRec*) G__int(libp->para[7]));
   } else {
     p = new((void*) gvp) EdbShowerRec(
(TObjArray*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (EdbPVRec*) G__int(libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerRec));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerRec* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbShowerRec((EdbPVRec*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) EdbShowerRec((EdbPVRec*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerRec));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerRec* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbShowerRec((EdbPVRec*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) EdbShowerRec((EdbPVRec*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerRec));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerRec*) G__getstructoffset())->GetN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerRec*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbShowerRec*) G__getstructoffset())->GetX0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbShowerRec*) G__getstructoffset())->GetY0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbShowerRec*) G__getstructoffset())->GetZ0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbShowerRec*) G__getstructoffset())->GetChi20());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerRec*) G__getstructoffset())->GetW0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbShowerRec*) G__getstructoffset())->GetP0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerRec*) G__getstructoffset())->GetFlag0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbShowerRec*) G__getstructoffset())->GetTx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbShowerRec*) G__getstructoffset())->GetTy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbShowerRec*) G__getstructoffset())->GetDz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerRec*) G__getstructoffset())->GetL());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerRec*) G__getstructoffset())->GetTrID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerRec*) G__getstructoffset())->GetSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerRec*) G__getstructoffset())->GetSize15());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerRec*) G__getstructoffset())->GetSize20());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerRec*) G__getstructoffset())->GetSize30());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerRec*) G__getstructoffset())->GetPlateb((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerRec*) G__getstructoffset())->GetIDb((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbShowerRec*) G__getstructoffset())->GetXb((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbShowerRec*) G__getstructoffset())->GetYb((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbShowerRec*) G__getstructoffset())->GetZb((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbShowerRec*) G__getstructoffset())->GetTXb((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbShowerRec*) G__getstructoffset())->GetTYb((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbShowerRec*) G__getstructoffset())->GetChi2b((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerRec*) G__getstructoffset())->GetWb((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbShowerRec*) G__getstructoffset())->GetPb((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerRec*) G__getstructoffset())->GetFlagb((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerRec*) G__getstructoffset())->GetNFilmb((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbShowerRec*) G__getstructoffset())->GetDeltarb((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbShowerRec*) G__getstructoffset())->GetDeltathetab((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerRec*) G__getstructoffset())->GetTagPrimaryb((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbShowerRec*) G__getstructoffset())->GetOutput());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbShowerRec*) G__getstructoffset())->GetOutput15());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbShowerRec*) G__getstructoffset())->GetOutput20());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbShowerRec*) G__getstructoffset())->GetOutput30());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbShowerRec*) G__getstructoffset())->GetEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbShowerRec*) G__getstructoffset())->GetEnergyUn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbShowerRec*) G__getstructoffset())->GetEnergySigma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbShowerRec*) G__getstructoffset())->GetEnergyUnSigma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbShowerRec*) G__getstructoffset())->GetmcDigitIndexTop((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const EdbShowerRec*) G__getstructoffset())->GetmcDigitIndexBottom((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetID((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetX0((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetY0((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetZ0((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetChi20((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetW0((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetP0((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetFlag0((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetmcDigitIndexTop0((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetmcDigitIndexBottom0((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetTx((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetTy((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetTrID((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetSize((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetSize15((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetSize20((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetSize30((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetDz((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetL((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetOutput((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetOutput15((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetOutput20((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetOutput30((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetXb((float) G__double(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetIDb((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetPlateb((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetYb((float) G__double(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetZb((float) G__double(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetTXb((float) G__double(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetTYb((float) G__double(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetChi2b((float) G__double(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetWb((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetPb((float) G__double(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetFlagb((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetNFilmb((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetDeltarb((float) G__double(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetDelthetab((float) G__double(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetPrimary((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetmcDigitIndexTop((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetmcDigitIndexBottom((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->InitPiece(*(EdbDataPiece*) libp->para[0].ref, (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbShowerRec*) G__getstructoffset())->ReadPiece(*(EdbDataPiece*) libp->para[0].ref, *(EdbPattern*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->rec(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double*) G__int(libp->para[4]), (double*) G__int(libp->para[5])
, (double*) G__int(libp->para[6]), (double*) G__int(libp->para[7])
, (double*) G__int(libp->para[8]), (int*) G__int(libp->para[9])
, (int*) G__int(libp->para[10]), (int*) G__int(libp->para[11])
, (double*) G__int(libp->para[12]), (int*) G__int(libp->para[13])
, (int*) G__int(libp->para[14]), (int) G__int(libp->para[15])
, (int) G__int(libp->para[16]), (int) G__int(libp->para[17])
, (EdbPVRec*) G__int(libp->para[18]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->rec(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double*) G__int(libp->para[4]), (double*) G__int(libp->para[5])
, (double*) G__int(libp->para[6]), (double*) G__int(libp->para[7])
, (double*) G__int(libp->para[8]), (double*) G__int(libp->para[9])
, (int*) G__int(libp->para[10]), (double*) G__int(libp->para[11])
, (int*) G__int(libp->para[12]), (int*) G__int(libp->para[13])
, (int*) G__int(libp->para[14]), (int*) G__int(libp->para[15])
, (double*) G__int(libp->para[16]), (int) G__int(libp->para[17])
, (int) G__int(libp->para[18]), (int) G__int(libp->para[19])
, (EdbPVRec*) G__int(libp->para[20]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->recdown(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double*) G__int(libp->para[4]), (double*) G__int(libp->para[5])
, (double*) G__int(libp->para[6]), (double*) G__int(libp->para[7])
, (double*) G__int(libp->para[8]), (double*) G__int(libp->para[9])
, (int*) G__int(libp->para[10]), (double*) G__int(libp->para[11])
, (int*) G__int(libp->para[12]), (int*) G__int(libp->para[13])
, (int*) G__int(libp->para[14]), (int*) G__int(libp->para[15])
, (double*) G__int(libp->para[16]), (int*) G__int(libp->para[17])
, (int*) G__int(libp->para[18]), (int) G__int(libp->para[19])
, (int) G__int(libp->para[20]), (EdbPVRec*) G__int(libp->para[21]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->recup(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double*) G__int(libp->para[4]), (double*) G__int(libp->para[5])
, (double*) G__int(libp->para[6]), (double*) G__int(libp->para[7])
, (double*) G__int(libp->para[8]), (double*) G__int(libp->para[9])
, (int*) G__int(libp->para[10]), (double*) G__int(libp->para[11])
, (int*) G__int(libp->para[12]), (int*) G__int(libp->para[13])
, (int*) G__int(libp->para[14]), (int*) G__int(libp->para[15])
, (double*) G__int(libp->para[16]), (int*) G__int(libp->para[17])
, (int*) G__int(libp->para[18]), (int) G__int(libp->para[19])
, (int) G__int(libp->para[20]), (EdbPVRec*) G__int(libp->para[21]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->rec((TObjArray*) G__int(libp->para[0]), (EdbPVRec*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->remove((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->vert((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SaveResults();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->initproc((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->ReadAffAndZ(
(char*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (Float_t*) G__int(libp->para[2]), (Float_t*) G__int(libp->para[3])
, (Float_t*) G__int(libp->para[4]), (Float_t*) G__int(libp->para[5])
, (Float_t*) G__int(libp->para[6]), (Float_t*) G__int(libp->para[7]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->NeuralNet();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbShowerRec*) G__getstructoffset())->SaveLNK());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowerRec*) G__getstructoffset())->ShowerToEdbSegPArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetDoEnergyCalculation((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->CalculateEnergyValues();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->Energy_ExtractShowerParametrisationProfile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->Energy_CreateANNTree();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbShowerRec*) G__getstructoffset())->Energy_CorrectEnergy((Float_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->Energy_CreateEnergyResolutionFitFunction();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbShowerRec*) G__getstructoffset())->Energy_CalcSigma((Float_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->LoadShowerFile(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowerRec*) G__getstructoffset())->GetHistEnergyNominal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowerRec*) G__getstructoffset())->GetHistEnergyCorrectedb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowerRec*) G__getstructoffset())->GetHistEnergyUnCorrectedb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowerRec*) G__getstructoffset())->GetHistEnergySigmaCorrectedb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowerRec*) G__getstructoffset())->GetHistEnergySigmaUnCorrectedb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowerRec*) G__getstructoffset())->GetHistLongProfile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_118(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowerRec*) G__getstructoffset())->GetHistNBaseTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_119(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowerRec*) G__getstructoffset())->GetHistdeltaR_mean());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_120(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowerRec*) G__getstructoffset())->GetHistdeltaT_mean());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_121(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowerRec*) G__getstructoffset())->GetHistdeltaR_rms());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_122(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowerRec*) G__getstructoffset())->GetHistdeltaT_rms());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_123(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->PrintInitiatorBTs();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_124(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbShowerRec*) G__getstructoffset())->AddInitiatorBT((EdbSegP*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_125(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((EdbShowerRec*) G__getstructoffset())->GetEnergyValues((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_126(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((EdbShowerRec*) G__getstructoffset())->GetShowerValues((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_127(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbShowerRec*) G__getstructoffset())->GetTreeBranchEntryNr((EdbSegP*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_128(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetUseAliSub((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_129(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetEdbPVRec((EdbPVRec*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_130(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetInBTArray((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_131(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetInBTArrayN((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_132(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetInBTArray((EdbSegP*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_133(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((EdbShowerRec*) G__getstructoffset())->SetInBTArray((EdbPVRec*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((EdbShowerRec*) G__getstructoffset())->SetInBTArray((EdbPVRec*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_134(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetRecoShowerArrayN((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_135(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetRecoShowerArray((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_136(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetAlgoParameter((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_137(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->ResetAlgoParameters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_138(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->SetQualityCutValues((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_139(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((EdbShowerRec*) G__getstructoffset())->GetUseAliSub());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_140(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowerRec*) G__getstructoffset())->GetEdbPVRec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_141(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerRec*) G__getstructoffset())->GetEdbPVRecNpat());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_142(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerRec*) G__getstructoffset())->GetEdbPVRecNplateNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_143(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const EdbShowerRec*) G__getstructoffset())->GetAliLoaded());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_144(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowerRec*) G__getstructoffset())->GetEdbPVRecSub());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_145(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowerRec*) G__getstructoffset())->GetInBTArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_146(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowerRec*) G__getstructoffset())->GetInBT((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_147(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowerRec*) G__getstructoffset())->GetRecoShowerArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_148(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerRec*) G__getstructoffset())->GetInBTArrayN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_149(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerRec*) G__getstructoffset())->GetRecoShowerArrayN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_150(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((EdbShowerRec*) G__getstructoffset())->GetAlgoParameter((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_151(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->ResetInBTArray();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_152(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->ResetRecoShowerArray();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_153(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->Fill_eInBTArray_ByLinkTracks_eFilename_LinkedTracks();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_154(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->ClearInBTArray();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_155(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->ClearRecoShowerArray();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_156(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->LoadEdbPVRec();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_157(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->Transform_eAli((EdbSegP*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_158(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->CalcTrackDensity((EdbPattern*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(Int_t*) G__Intref(&libp->para[2]), *(Int_t*) G__Intref(&libp->para[3])
, *(Int_t*) G__Intref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_159(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbShowerRec*) G__getstructoffset())->GetEdbPVRecNSeg((EdbPVRec*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_160(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->CheckEdbPVRecSetUseAliSub();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_161(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const EdbShowerRec*) G__getstructoffset())->PrintEdbPVRec();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_162(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->PrintRecoShowerArray();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_163(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->PrintParameters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_164(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((EdbShowerRec*) G__getstructoffset())->DeltaThetaComponentwise((EdbSegP*) G__int(libp->para[0]), (EdbSegP*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_165(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((EdbShowerRec*) G__getstructoffset())->DeltaR_WithPropagation((EdbSegP*) G__int(libp->para[0]), (EdbSegP*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_166(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((EdbShowerRec*) G__getstructoffset())->DeltaR_WithoutPropagation((EdbSegP*) G__int(libp->para[0]), (EdbSegP*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_167(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((EdbShowerRec*) G__getstructoffset())->FindPrecedingBTs((EdbSegP*) G__int(libp->para[0]), (EdbSegP*) G__int(libp->para[1])
, (EdbPVRec*) G__int(libp->para[2]), (EdbTrackP*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_168(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((EdbShowerRec*) G__getstructoffset())->IsInConeTube((EdbSegP*) G__int(libp->para[0]), (EdbSegP*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_169(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letdouble(result7, 100, (double) ((EdbShowerRec*) G__getstructoffset())->InvariantMass((EdbSegP*) G__int(libp->para[0]), (EdbSegP*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])));
      break;
   case 5:
      G__letdouble(result7, 100, (double) ((EdbShowerRec*) G__getstructoffset())->InvariantMass((EdbSegP*) G__int(libp->para[0]), (EdbSegP*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4])));
      break;
   case 4:
      G__letdouble(result7, 100, (double) ((EdbShowerRec*) G__getstructoffset())->InvariantMass((EdbSegP*) G__int(libp->para[0]), (EdbSegP*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((EdbShowerRec*) G__getstructoffset())->InvariantMass((EdbSegP*) G__int(libp->para[0]), (EdbSegP*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((EdbShowerRec*) G__getstructoffset())->InvariantMass((EdbSegP*) G__int(libp->para[0]), (EdbSegP*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_170(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->Execute();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_171(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->TransferShowerObjectArrayIntoEntryOfTreebranchShowerTree((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_172(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->TransferTreebranchShowerTreeIntoShowerObjectArray((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_173(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_174(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->Help();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_175(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->Set0();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_176(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbShowerRec::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_177(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerRec::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_178(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbShowerRec::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_179(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbShowerRec::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_183(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerRec*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_184(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerRec::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_185(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerRec::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_186(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerRec::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_817_0_187(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerRec::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowerDict_817_0_188(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbShowerRec* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbShowerRec(*(EdbShowerRec*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerRec));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbShowerRec G__TEdbShowerRec;
static int G__ShowerDict_817_0_189(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbShowerRec*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbShowerRec*) (soff+(sizeof(EdbShowerRec)*i)))->~G__TEdbShowerRec();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbShowerRec*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbShowerRec*) (soff))->~G__TEdbShowerRec();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowerDict_817_0_190(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerRec* dest = (EdbShowerRec*) G__getstructoffset();
   *dest = *(EdbShowerRec*) libp->para[0].ref;
   const EdbShowerRec& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbShowerAlg */
static int G__ShowerDict_960_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerAlg* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerAlg[n];
     } else {
       p = new((void*) gvp) EdbShowerAlg[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerAlg;
     } else {
       p = new((void*) gvp) EdbShowerAlg;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlg));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerAlg* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbShowerAlg(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) EdbShowerAlg(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlg));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg*) G__getstructoffset())->SetEdbPVRec((EdbPVRec*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg*) G__getstructoffset())->SetInBTArray((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg*) G__getstructoffset())->SetEdbPVRecPIDNumbers((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg*) G__getstructoffset())->SetRecoShowerArray((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg*) G__getstructoffset())->SetRecoShowerArrayN((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg*) G__getstructoffset())->AddRecoShowerArray((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg*) G__getstructoffset())->SetActualAlgParameterset((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerAlg*) G__getstructoffset())->GetAlgValue());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const EdbShowerAlg*) G__getstructoffset())->GetAlgName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerAlg*) G__getstructoffset())->GetRecoShowerArrayN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowerAlg*) G__getstructoffset())->GetRecoShowerArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg*) G__getstructoffset())->SetUseAliSub((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((EdbShowerAlg*) G__getstructoffset())->DeltaR_WithPropagation((EdbSegP*) G__int(libp->para[0]), (EdbSegP*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((EdbShowerAlg*) G__getstructoffset())->DeltaR_WithoutPropagation((EdbSegP*) G__int(libp->para[0]), (EdbSegP*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((EdbShowerAlg*) G__getstructoffset())->DeltaR_NoPropagation((EdbSegP*) G__int(libp->para[0]), (EdbSegP*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((EdbShowerAlg*) G__getstructoffset())->DeltaTheta((EdbSegP*) G__int(libp->para[0]), (EdbSegP*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((EdbShowerAlg*) G__getstructoffset())->DeltaThetaComponentwise((EdbSegP*) G__int(libp->para[0]), (EdbSegP*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((EdbShowerAlg*) G__getstructoffset())->DeltaThetaSingleAngles((EdbSegP*) G__int(libp->para[0]), (EdbSegP*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((EdbShowerAlg*) G__getstructoffset())->GetSpatialDist((EdbSegP*) G__int(libp->para[0]), (EdbSegP*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((EdbShowerAlg*) G__getstructoffset())->GetMinimumDist((EdbSegP*) G__int(libp->para[0]), (EdbSegP*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg*) G__getstructoffset())->SetParameter((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg*) G__getstructoffset())->SetParameters((Float_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg*) G__getstructoffset())->Transform_eAli((EdbSegP*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((EdbShowerAlg*) G__getstructoffset())->IsInConeTube((EdbSegP*) G__int(libp->para[0]), (EdbSegP*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg*) G__getstructoffset())->Convert_EdbPVRec_To_InBTArray();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowerAlg*) G__getstructoffset())->CalcVertex((TObjArray*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg*) G__getstructoffset())->PrintParameters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg*) G__getstructoffset())->PrintParametersShort();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg*) G__getstructoffset())->PrintRecoShowerArray();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg*) G__getstructoffset())->PrintMore();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg*) G__getstructoffset())->PrintAll();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg*) G__getstructoffset())->SetDebug();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg*) G__getstructoffset())->Execute();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg*) G__getstructoffset())->Finalize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbShowerAlg::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerAlg::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbShowerAlg::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbShowerAlg::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerAlg::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerAlg::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerAlg::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_960_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerAlg::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowerDict_960_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbShowerAlg* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbShowerAlg(*(EdbShowerAlg*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlg));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbShowerAlg G__TEdbShowerAlg;
static int G__ShowerDict_960_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbShowerAlg*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbShowerAlg*) (soff+(sizeof(EdbShowerAlg)*i)))->~G__TEdbShowerAlg();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbShowerAlg*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbShowerAlg*) (soff))->~G__TEdbShowerAlg();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowerDict_960_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerAlg* dest = (EdbShowerAlg*) G__getstructoffset();
   *dest = *(EdbShowerAlg*) libp->para[0].ref;
   const EdbShowerAlg& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbShowerAlg_GS */
static int G__ShowerDict_961_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerAlg_GS* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerAlg_GS[n];
     } else {
       p = new((void*) gvp) EdbShowerAlg_GS[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerAlg_GS;
     } else {
       p = new((void*) gvp) EdbShowerAlg_GS;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlg_GS));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_961_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg_GS*) G__getstructoffset())->Set0();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_961_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg_GS*) G__getstructoffset())->Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_961_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg_GS*) G__getstructoffset())->SetInVtxArray((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_961_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg_GS*) G__getstructoffset())->SetInVtx((EdbVertex*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_961_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg_GS*) G__getstructoffset())->AddInVtx((EdbVertex*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_961_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerAlg_GS*) G__getstructoffset())->GetInVtxArrayN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_961_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EdbShowerAlg_GS*) G__getstructoffset())->GetInVtxArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_961_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg_GS*) G__getstructoffset())->SetFindPairsPreselected((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_961_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg_GS*) G__getstructoffset())->SetCleanPairs((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_961_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg_GS*) G__getstructoffset())->SetCutModeFull((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_961_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowerAlg_GS*) G__getstructoffset())->SelectHighestPInMCArray((TObjArray*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_961_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((EdbShowerAlg_GS*) G__getstructoffset())->CheckInput());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_961_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg_GS*) G__getstructoffset())->SetRecoMode((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_961_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg_GS*) G__getstructoffset())->Convert_InVtxArray_To_InBTArray();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_961_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((EdbShowerAlg_GS*) G__getstructoffset())->CheckPairDuplications(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (TArrayI*) G__int(libp->para[4]), (TArrayI*) G__int(libp->para[5])
, (TArrayI*) G__int(libp->para[6]), (TArrayI*) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_961_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((EdbShowerAlg_GS*) G__getstructoffset())->CalcIP((EdbSegP*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_961_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((EdbShowerAlg_GS*) G__getstructoffset())->CalcIP((EdbSegP*) G__int(libp->para[0]), (EdbVertex*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_961_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((EdbShowerAlg_GS*) G__getstructoffset())->IsPossibleFakeDoublet((EdbSegP*) G__int(libp->para[0]), (EdbSegP*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_961_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((EdbShowerAlg_GS*) G__getstructoffset())->FindPairsPreselected((EdbSegP*) G__int(libp->para[0]), (EdbPVRec*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_961_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowerAlg_GS*) G__getstructoffset())->FindPairs((EdbSegP*) G__int(libp->para[0]), (EdbPVRec*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_961_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowerAlg_GS*) G__getstructoffset())->CheckCleanPairs((EdbSegP*) G__int(libp->para[0]), (TObjArray*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_961_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowerAlg_GS*) G__getstructoffset())->FindPairsPreselected((EdbPVRec*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_961_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg_GS*) G__getstructoffset())->FillANNTree((TObjArray*) G__int(libp->para[0]), (EdbSegP*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_961_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg_GS*) G__getstructoffset())->CreateANNPair();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_961_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg_GS*) G__getstructoffset())->ReloadANNs((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_961_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg_GS*) G__getstructoffset())->CreateANNPlots();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_961_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbShowerAlg_GS::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_961_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerAlg_GS::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_961_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbShowerAlg_GS::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_961_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbShowerAlg_GS::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_961_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlg_GS*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_961_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerAlg_GS::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_961_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerAlg_GS::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_961_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerAlg_GS::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_961_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerAlg_GS::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowerDict_961_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbShowerAlg_GS* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbShowerAlg_GS(*(EdbShowerAlg_GS*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlg_GS));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbShowerAlg_GS G__TEdbShowerAlg_GS;
static int G__ShowerDict_961_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbShowerAlg_GS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbShowerAlg_GS*) (soff+(sizeof(EdbShowerAlg_GS)*i)))->~G__TEdbShowerAlg_GS();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbShowerAlg_GS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbShowerAlg_GS*) (soff))->~G__TEdbShowerAlg_GS();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowerDict_961_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerAlg_GS* dest = (EdbShowerAlg_GS*) G__getstructoffset();
   *dest = *(EdbShowerAlg_GS*) libp->para[0].ref;
   const EdbShowerAlg_GS& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbShowerAlgESimple */
static int G__ShowerDict_962_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerAlgESimple* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerAlgESimple[n];
     } else {
       p = new((void*) gvp) EdbShowerAlgESimple[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerAlgESimple;
     } else {
       p = new((void*) gvp) EdbShowerAlgESimple;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlgESimple));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerAlgESimple* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbShowerAlgESimple((EdbTrackP*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) EdbShowerAlgESimple((EdbTrackP*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlgESimple));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerAlgESimple* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbShowerAlgESimple((TObjArray*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) EdbShowerAlgESimple((TObjArray*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlgESimple));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgESimple*) G__getstructoffset())->SetRecoShowerArray((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgESimple*) G__getstructoffset())->SetRecoShowerArrayN((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EdbShowerAlgESimple*) G__getstructoffset())->GetRecoShowerArrayN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowerAlgESimple*) G__getstructoffset())->GetEnergyArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowerAlgESimple*) G__getstructoffset())->GetEnergyArrayUnCorrected());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbShowerAlgESimple*) G__getstructoffset())->GetEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbShowerAlgESimple*) G__getstructoffset())->GetEnergy((EdbTrackP*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgESimple*) G__getstructoffset())->GetPara((EdbTrackP*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowerAlgESimple*) G__getstructoffset())->GetEffFunc_all());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowerAlgESimple*) G__getstructoffset())->GetEffFunc_edefault());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowerAlgESimple*) G__getstructoffset())->GetEffFunc_elletroni());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowerAlgESimple*) G__getstructoffset())->GetEffFunc_neuchmicro());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowerAlgESimple*) G__getstructoffset())->GetEffFunc_MiddleFix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowerAlgESimple*) G__getstructoffset())->GetEffFunc_LowEff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowerAlgESimple*) G__getstructoffset())->GetEffFunc_UserEfficiency());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((EdbShowerAlgESimple*) G__getstructoffset())->GetNeuralNetwork((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((EdbShowerAlgESimple*) G__getstructoffset())->GetNeuralNetwork());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((EdbShowerAlgESimple*) G__getstructoffset())->TrainNeuralNetwork(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((EdbShowerAlgESimple*) G__getstructoffset())->TrainNeuralNetwork(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((EdbShowerAlgESimple*) G__getstructoffset())->DumpNeuralNetworkWeight(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((EdbShowerAlgESimple*) G__getstructoffset())->DumpNeuralNetworkWeight(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgESimple*) G__getstructoffset())->SetCalibrationOffset((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgESimple*) G__getstructoffset())->SetCalibrationSlope((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgESimple*) G__getstructoffset())->SetPlateNumberType((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgESimple*) G__getstructoffset())->SetPlateNumber((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbShowerAlgESimple*) G__getstructoffset())->GetSpecType((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgESimple*) G__getstructoffset())->SetForceSpecificationReload();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgESimple*) G__getstructoffset())->UnSetForceSpecificationReload();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgESimple*) G__getstructoffset())->SetEfficiencyParametrisationValues((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgESimple*) G__getstructoffset())->SetEfficiencyParametrisation((TSpline3*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbShowerAlgESimple*) G__getstructoffset())->GetEfficiencyParametrisation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgESimple*) G__getstructoffset())->PrintEfficiencyParametrisation();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgESimple*) G__getstructoffset())->SetEfficiencyParametrisationAngles();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgESimple*) G__getstructoffset())->SetWeightFileString(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgESimple*) G__getstructoffset())->InitStrings();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbShowerAlgESimple*) G__getstructoffset())->FindClosestEfficiencyParametrization((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgESimple*) G__getstructoffset())->GetNplIndexNr((Int_t) G__int(libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgESimple*) G__getstructoffset())->GetSpecifications();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgESimple*) G__getstructoffset())->SetSpecifications((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgESimple*) G__getstructoffset())->SetSpecificationType((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgESimple*) G__getstructoffset())->PrintSpecifications();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgESimple*) G__getstructoffset())->LoadSpecificationWeightFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgESimple*) G__getstructoffset())->ReadCorrectionFactors(*((TString*) G__int(libp->para[0])), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgESimple*) G__getstructoffset())->CreateANN();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgESimple*) G__getstructoffset())->Update();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgESimple*) G__getstructoffset())->DoRun();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgESimple*) G__getstructoffset())->DoRun((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgESimple*) G__getstructoffset())->DoRun((EdbTrackP*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgESimple*) G__getstructoffset())->ReadTables();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgESimple*) G__getstructoffset())->ReadTables_Energy();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgESimple*) G__getstructoffset())->WriteNewRootFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgESimple*) G__getstructoffset())->WriteNewRootFile(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgESimple*) G__getstructoffset())->WriteNewRootFile(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgESimple*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgESimple*) G__getstructoffset())->Help();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbShowerAlgESimple::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerAlgESimple::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbShowerAlgESimple::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbShowerAlgESimple::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgESimple*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerAlgESimple::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerAlgESimple::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerAlgESimple::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_962_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerAlgESimple::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowerDict_962_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbShowerAlgESimple* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbShowerAlgESimple(*(EdbShowerAlgESimple*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlgESimple));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbShowerAlgESimple G__TEdbShowerAlgESimple;
static int G__ShowerDict_962_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbShowerAlgESimple*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbShowerAlgESimple*) (soff+(sizeof(EdbShowerAlgESimple)*i)))->~G__TEdbShowerAlgESimple();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbShowerAlgESimple*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbShowerAlgESimple*) (soff))->~G__TEdbShowerAlgESimple();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowerDict_962_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerAlgESimple* dest = (EdbShowerAlgESimple*) G__getstructoffset();
   *dest = *(EdbShowerAlgESimple*) libp->para[0].ref;
   const EdbShowerAlgESimple& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbShowerAlgIDSimple */
static int G__ShowerDict_963_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerAlgIDSimple* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerAlgIDSimple[n];
     } else {
       p = new((void*) gvp) EdbShowerAlgIDSimple[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbShowerAlgIDSimple;
     } else {
       p = new((void*) gvp) EdbShowerAlgIDSimple;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlgIDSimple));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_963_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerAlgIDSimple* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbShowerAlgIDSimple((EdbTrackP*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) EdbShowerAlgIDSimple((EdbTrackP*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlgIDSimple));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_963_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerAlgIDSimple* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbShowerAlgIDSimple((TObjArray*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) EdbShowerAlgIDSimple((TObjArray*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlgIDSimple));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_963_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerAlgIDSimple* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbShowerAlgIDSimple((EdbTrackP*) G__int(libp->para[0]), (EdbVertex*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) EdbShowerAlgIDSimple((EdbTrackP*) G__int(libp->para[0]), (EdbVertex*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlgIDSimple));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_963_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerAlgIDSimple* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbShowerAlgIDSimple((TObjArray*) G__int(libp->para[0]), (TObjArray*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) EdbShowerAlgIDSimple((TObjArray*) G__int(libp->para[0]), (TObjArray*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlgIDSimple));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_963_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgIDSimple*) G__getstructoffset())->Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_963_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgIDSimple*) G__getstructoffset())->SetANNIDCutValue((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_963_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgIDSimple*) G__getstructoffset())->SetSpecificationType((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_963_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgIDSimple*) G__getstructoffset())->PrintSpecifications();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_963_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgIDSimple*) G__getstructoffset())->CreateANN();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_963_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgIDSimple*) G__getstructoffset())->Update();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_963_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgIDSimple*) G__getstructoffset())->InitStrings();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_963_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgIDSimple*) G__getstructoffset())->ReadTables();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_963_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgIDSimple*) G__getstructoffset())->ReadTables_ID();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_963_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgIDSimple*) G__getstructoffset())->DoRun((EdbTrackP*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_963_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgIDSimple*) G__getstructoffset())->DoRun((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_963_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgIDSimple*) G__getstructoffset())->DoRun();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_963_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbShowerAlgIDSimple*) G__getstructoffset())->DetermineIDType((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_963_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbShowerAlgIDSimple*) G__getstructoffset())->DetermineIDFlag((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_963_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgIDSimple*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_963_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgIDSimple*) G__getstructoffset())->Help();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_963_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbShowerAlgIDSimple::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_963_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerAlgIDSimple::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_963_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbShowerAlgIDSimple::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_963_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbShowerAlgIDSimple::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_963_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbShowerAlgIDSimple*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_963_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerAlgIDSimple::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_963_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerAlgIDSimple::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_963_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbShowerAlgIDSimple::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_963_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbShowerAlgIDSimple::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowerDict_963_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbShowerAlgIDSimple* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbShowerAlgIDSimple(*(EdbShowerAlgIDSimple*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlgIDSimple));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbShowerAlgIDSimple G__TEdbShowerAlgIDSimple;
static int G__ShowerDict_963_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbShowerAlgIDSimple*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbShowerAlgIDSimple*) (soff+(sizeof(EdbShowerAlgIDSimple)*i)))->~G__TEdbShowerAlgIDSimple();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbShowerAlgIDSimple*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbShowerAlgIDSimple*) (soff))->~G__TEdbShowerAlgIDSimple();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowerDict_963_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbShowerAlgIDSimple* dest = (EdbShowerAlgIDSimple*) G__getstructoffset();
   *dest = *(EdbShowerAlgIDSimple*) libp->para[0].ref;
   const EdbShowerAlgIDSimple& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EdbPVRQuality */
static int G__ShowerDict_969_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbPVRQuality* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbPVRQuality[n];
     } else {
       p = new((void*) gvp) EdbPVRQuality[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EdbPVRQuality;
     } else {
       p = new((void*) gvp) EdbPVRQuality;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowerDictLN_EdbPVRQuality));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbPVRQuality* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbPVRQuality((EdbPVRec*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) EdbPVRQuality((EdbPVRec*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowerDictLN_EdbPVRQuality));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbPVRQuality* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EdbPVRQuality((EdbPVRec*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
   } else {
     p = new((void*) gvp) EdbPVRQuality((EdbPVRec*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowerDictLN_EdbPVRQuality));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->SetCutMethod((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->SetBTDensityLevel((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->SetCutTTSqueezeFactor((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->SetBTDensityLevelCalcMethodMC((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->SetBTDensityLevelCalcMethodMCConfirmation((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((EdbPVRQuality*) G__getstructoffset())->GetBTDensityLevelCalcMethodMC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbPVRQuality*) G__getstructoffset())->GetBTDensityLevelCalcMethodMCConfirmation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbPVRQuality*) G__getstructoffset())->GetEdbPVRec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbPVRQuality*) G__getstructoffset())->GetEdbPVRec((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbPVRQuality*) G__getstructoffset())->GetEdbPVRec((Bool_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbPVRQuality*) G__getstructoffset())->GetEdbPVRec_orig());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbPVRQuality*) G__getstructoffset())->GetEdbPVRec_modified());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->SetEdbPVRec((EdbPVRec*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbPVRQuality*) G__getstructoffset())->GetHistChi2W());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbPVRQuality*) G__getstructoffset())->GetHistYX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbPVRQuality*) G__getstructoffset())->GetCutMethod());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((EdbPVRQuality*) G__getstructoffset())->GetCutMethodIsDone((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbPVRQuality*) G__getstructoffset())->GetBTDensityLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((EdbPVRQuality*) G__getstructoffset())->GetCutp0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((EdbPVRQuality*) G__getstructoffset())->GetCutp1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbPVRQuality*) G__getstructoffset())->GetCutp0((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbPVRQuality*) G__getstructoffset())->GetCutp1((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbPVRQuality*) G__getstructoffset())->GetagreementChi2CutMeanChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbPVRQuality*) G__getstructoffset())->GetagreementChi2CutRMSChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbPVRQuality*) G__getstructoffset())->GetagreementChi2CutMeanW());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbPVRQuality*) G__getstructoffset())->GetagreementChi2CutRMSW());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((EdbPVRQuality*) G__getstructoffset())->GetagreementChi2Cut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EdbPVRQuality*) G__getstructoffset())->GetagreementChi2Cut((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->SetHistGeometry_OPERA();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->SetHistGeometry_MC();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->SetHistGeometry_OPERAandMC();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->SetHistGeometry_OPERAandMCBinArea625();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->CheckEdbPVRec();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->CheckEdbPVRecThetaSpace((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->Execute();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->Execute((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->Execute_ConstantBTDensity();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->Execute_ConstantBTDensityInAngularBins();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->Execute_ConstantBTQuality();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->Execute_ConstantBTQualityInAngularBins();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->Execute_ConstantBTX2Hat();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->Execute_ConstantBTX2HatInAngularBins();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->Execute_RandomCut();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->Execute_RandomCutInAngularBins();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->Execute_EqualizeTanThetaSpace();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->Execute_EqualizeTanThetaSpace_ConstantBTDensity();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->Execute_EqualizeTanThetaSpace_ConstantBTQuality();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->Execute_EqualizeTanThetaSpace_ConstantBTX2Hat();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->Execute_EqualizeTanThetaSpace_RandomCut();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbPVRQuality*) G__getstructoffset())->Find_DoubleBT((EdbPVRec*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbPVRQuality*) G__getstructoffset())->Remove_DoubleBT((EdbPVRec*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbPVRQuality*) G__getstructoffset())->Remove_Passing((EdbPVRec*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((EdbPVRQuality*) G__getstructoffset())->Remove_SegmentArray((TObjArray*) G__int(libp->para[0]), (EdbPVRec*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((EdbPVRQuality*) G__getstructoffset())->Remove_SegmentArray((TObjArray*) G__int(libp->para[0]), (EdbPVRec*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((EdbPVRQuality*) G__getstructoffset())->Remove_SegmentArray((TObjArray*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((EdbPVRQuality*) G__getstructoffset())->Remove_Segment((EdbSegP*) G__int(libp->para[0]), (EdbPVRec*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((EdbPVRQuality*) G__getstructoffset())->Remove_Segment((EdbSegP*) G__int(libp->para[0]), (EdbPVRec*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((EdbPVRQuality*) G__getstructoffset())->Remove_Segment((EdbSegP*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((EdbPVRQuality*) G__getstructoffset())->Remove_TrackArray((TObjArray*) G__int(libp->para[0]), (EdbPVRec*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((EdbPVRQuality*) G__getstructoffset())->Remove_TrackArray((TObjArray*) G__int(libp->para[0]), (EdbPVRec*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((EdbPVRQuality*) G__getstructoffset())->Remove_TrackArray((TObjArray*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((EdbPVRQuality*) G__getstructoffset())->Remove_Track((EdbTrackP*) G__int(libp->para[0]), (EdbPVRec*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((EdbPVRQuality*) G__getstructoffset())->Remove_Track((EdbTrackP*) G__int(libp->para[0]), (EdbPVRec*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((EdbPVRQuality*) G__getstructoffset())->Remove_Track((EdbTrackP*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbPVRQuality*) G__getstructoffset())->TrackToSegmentArray((EdbTrackP*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbPVRQuality*) G__getstructoffset())->TrackArrayToSegmentArray((TObjArray*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbPVRQuality*) G__getstructoffset())->CreateEdbPVRec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbPVRQuality*) G__getstructoffset())->CheckFilledXYSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbPVRQuality*) G__getstructoffset())->GetAngularSpaceBin((EdbSegP*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbPVRQuality*) G__getstructoffset())->FindFirstBinAbove((TH1*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EdbPVRQuality*) G__getstructoffset())->FindLastBinAbove((TH1*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EdbPVRQuality*) G__getstructoffset())->GetTracksFromLinkedTracksRootFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((EdbPVRQuality*) G__getstructoffset())->CheckSegmentQualityInPattern_ConstBTDens((EdbPVRec*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (EdbSegP*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((EdbPVRQuality*) G__getstructoffset())->CheckSegmentQualityInPattern_ConstQual((EdbPVRec*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (EdbSegP*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->PrintCutType();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->PrintCutType0();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->PrintCutType1();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->PrintCutType2();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->PrintCutType3();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->PrintCutType4();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->PrintCutType5();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->PrintCutType6();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->PrintCutType7();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->PrintCutValues((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->Help();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EdbPVRQuality::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbPVRQuality::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EdbPVRQuality::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EdbPVRQuality::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EdbPVRQuality*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbPVRQuality::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbPVRQuality::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EdbPVRQuality::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerDict_969_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EdbPVRQuality::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowerDict_969_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EdbPVRQuality* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EdbPVRQuality(*(EdbPVRQuality*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowerDictLN_EdbPVRQuality));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EdbPVRQuality G__TEdbPVRQuality;
static int G__ShowerDict_969_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EdbPVRQuality*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EdbPVRQuality*) (soff+(sizeof(EdbPVRQuality)*i)))->~G__TEdbPVRQuality();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EdbPVRQuality*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EdbPVRQuality*) (soff))->~G__TEdbPVRQuality();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowerDict_969_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EdbPVRQuality* dest = (EdbPVRQuality*) G__getstructoffset();
   *dest = *(EdbPVRQuality*) libp->para[0].ref;
   const EdbPVRQuality& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* EdbShowerRec */

/* EdbShowerAlg */

/* EdbShowerAlg_GS */

/* EdbShowerAlgESimple */

/* EdbShowerAlgIDSimple */

/* EdbPVRQuality */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncShowerDict {
 public:
  G__Sizep2memfuncShowerDict(): p(&G__Sizep2memfuncShowerDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncShowerDict::*p)();
};

size_t G__get_sizep2memfuncShowerDict()
{
  G__Sizep2memfuncShowerDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceShowerDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerRec))) {
     EdbShowerRec *G__Lderived;
     G__Lderived=(EdbShowerRec*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerRec),G__get_linked_tagnum(&G__ShowerDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlg))) {
     EdbShowerAlg *G__Lderived;
     G__Lderived=(EdbShowerAlg*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlg),G__get_linked_tagnum(&G__ShowerDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlg_GS))) {
     EdbShowerAlg_GS *G__Lderived;
     G__Lderived=(EdbShowerAlg_GS*)0x1000;
     {
       EdbShowerAlg *G__Lpbase=(EdbShowerAlg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlg_GS),G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlg),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlg_GS),G__get_linked_tagnum(&G__ShowerDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlgESimple))) {
     EdbShowerAlgESimple *G__Lderived;
     G__Lderived=(EdbShowerAlgESimple*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlgESimple),G__get_linked_tagnum(&G__ShowerDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlgIDSimple))) {
     EdbShowerAlgIDSimple *G__Lderived;
     G__Lderived=(EdbShowerAlgIDSimple*)0x1000;
     {
       EdbShowerAlgESimple *G__Lpbase=(EdbShowerAlgESimple*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlgIDSimple),G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlgESimple),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlgIDSimple),G__get_linked_tagnum(&G__ShowerDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ShowerDictLN_EdbPVRQuality))) {
     EdbPVRQuality *G__Lderived;
     G__Lderived=(EdbPVRQuality*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowerDictLN_EdbPVRQuality),G__get_linked_tagnum(&G__ShowerDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableShowerDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("iterator<iterator_traits<string::iterator>::iterator_category,iterator_traits<string::iterator>::value_type,iterator_traits<string::iterator>::difference_type,iterator_traits<string::iterator>::pointer,iterator_traits<string::iterator>::reference>",117,G__get_linked_tagnum(&G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOcharcOlongcOcharmUcOcharaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,char>",117,G__get_linked_tagnum(&G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOcharcOlongcOcharmUcOcharaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,char,long>",117,G__get_linked_tagnum(&G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOcharcOlongcOcharmUcOcharaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,char,long,char*>",117,G__get_linked_tagnum(&G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOcharcOlongcOcharmUcOcharaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<string::const_iterator>::iterator_category,iterator_traits<string::const_iterator>::value_type,iterator_traits<string::const_iterator>::difference_type,iterator_traits<string::const_iterator>::pointer,iterator_traits<string::const_iterator>::reference>",117,G__get_linked_tagnum(&G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOcharcOlongcOcharmUcOcharaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__ShowerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__ShowerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ShowerDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ShowerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>::iterator_category,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>::value_type,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>::difference_type,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>::pointer,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>::reference>",117,G__get_linked_tagnum(&G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,ROOT::TSchemaHelper,long>",117,G__get_linked_tagnum(&G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,ROOT::TSchemaHelper,long,ROOT::TSchemaHelper*>",117,G__get_linked_tagnum(&G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ShowerDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLconst_iteratorgR),0,G__get_linked_tagnum(&G__ShowerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::const_iterator>::iterator_category,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::const_iterator>::value_type,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::const_iterator>::difference_type,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::const_iterator>::pointer,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::const_iterator>::reference>",117,G__get_linked_tagnum(&G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__ShowerDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__ShowerDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ShowerDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ShowerDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>::iterator_category,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>::value_type,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>::difference_type,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>::pointer,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>::reference>",117,G__get_linked_tagnum(&G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,TVirtualArray*>",117,G__get_linked_tagnum(&G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,TVirtualArray*,long>",117,G__get_linked_tagnum(&G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,TVirtualArray*,long,TVirtualArray**>",117,G__get_linked_tagnum(&G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ShowerDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLconst_iteratorgR),0,G__get_linked_tagnum(&G__ShowerDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::const_iterator>::iterator_category,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::const_iterator>::value_type,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::const_iterator>::difference_type,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::const_iterator>::pointer,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::const_iterator>::reference>",117,G__get_linked_tagnum(&G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__ShowerDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__ShowerDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__ShowerDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__ShowerDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__ShowerDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__ShowerDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__ShowerDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__ShowerDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__ShowerDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__ShowerDictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__ShowerDictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ShowerDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ShowerDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<TString,allocator<TString> >::iterator>::iterator_category,iterator_traits<vector<TString,allocator<TString> >::iterator>::value_type,iterator_traits<vector<TString,allocator<TString> >::iterator>::difference_type,iterator_traits<vector<TString,allocator<TString> >::iterator>::pointer,iterator_traits<vector<TString,allocator<TString> >::iterator>::reference>",117,G__get_linked_tagnum(&G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOTStringcOlongcOTStringmUcOTStringaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,TString>",117,G__get_linked_tagnum(&G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOTStringcOlongcOTStringmUcOTStringaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,TString,long>",117,G__get_linked_tagnum(&G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOTStringcOlongcOTStringmUcOTStringaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,TString,long,TString*>",117,G__get_linked_tagnum(&G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOTStringcOlongcOTStringmUcOTStringaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ShowerDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLconst_iteratorgR),0,G__get_linked_tagnum(&G__ShowerDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<TString,allocator<TString> >::const_iterator>::iterator_category,iterator_traits<vector<TString,allocator<TString> >::const_iterator>::value_type,iterator_traits<vector<TString,allocator<TString> >::const_iterator>::difference_type,iterator_traits<vector<TString,allocator<TString> >::const_iterator>::pointer,iterator_traits<vector<TString,allocator<TString> >::const_iterator>::reference>",117,G__get_linked_tagnum(&G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOTStringcOlongcOTStringmUcOTStringaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<Relation*>",117,G__get_linked_tagnum(&G__ShowerDictLN_listlEVERTEXcLcLRelationmUcOallocatorlEVERTEXcLcLRelationmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<VERTEX::Relation*>",117,G__get_linked_tagnum(&G__ShowerDictLN_listlEVERTEXcLcLRelationmUcOallocatorlEVERTEXcLcLRelationmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<MassC*>",117,G__get_linked_tagnum(&G__ShowerDictLN_listlEVERTEXcLcLMassCmUcOallocatorlEVERTEXcLcLMassCmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<VERTEX::MassC*>",117,G__get_linked_tagnum(&G__ShowerDictLN_listlEVERTEXcLcLMassCmUcOallocatorlEVERTEXcLcLMassCmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Track*>",117,G__get_linked_tagnum(&G__ShowerDictLN_vectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<VERTEX::Track*>",117,G__get_linked_tagnum(&G__ShowerDictLN_vectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ShowerDictLN_reverse_iteratorlEvectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ShowerDictLN_vectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<VERTEX::Track*,allocator<VERTEX::Track*> >::iterator>::iterator_category,iterator_traits<vector<VERTEX::Track*,allocator<VERTEX::Track*> >::iterator>::value_type,iterator_traits<vector<VERTEX::Track*,allocator<VERTEX::Track*> >::iterator>::difference_type,iterator_traits<vector<VERTEX::Track*,allocator<VERTEX::Track*> >::iterator>::pointer,iterator_traits<vector<VERTEX::Track*,allocator<VERTEX::Track*> >::iterator>::reference>",117,G__get_linked_tagnum(&G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOVERTEXcLcLTrackmUcOlongcOVERTEXcLcLTrackmUmUcOVERTEXcLcLTrackmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,VERTEX::Track*>",117,G__get_linked_tagnum(&G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOVERTEXcLcLTrackmUcOlongcOVERTEXcLcLTrackmUmUcOVERTEXcLcLTrackmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,VERTEX::Track*,long>",117,G__get_linked_tagnum(&G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOVERTEXcLcLTrackmUcOlongcOVERTEXcLcLTrackmUmUcOVERTEXcLcLTrackmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,VERTEX::Track*,long,VERTEX::Track**>",117,G__get_linked_tagnum(&G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOVERTEXcLcLTrackmUcOlongcOVERTEXcLcLTrackmUmUcOVERTEXcLcLTrackmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ShowerDictLN_reverse_iteratorlEvectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgRcLcLconst_iteratorgR),0,G__get_linked_tagnum(&G__ShowerDictLN_vectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<VERTEX::Track*,allocator<VERTEX::Track*> >::const_iterator>::iterator_category,iterator_traits<vector<VERTEX::Track*,allocator<VERTEX::Track*> >::const_iterator>::value_type,iterator_traits<vector<VERTEX::Track*,allocator<VERTEX::Track*> >::const_iterator>::difference_type,iterator_traits<vector<VERTEX::Track*,allocator<VERTEX::Track*> >::const_iterator>::pointer,iterator_traits<vector<VERTEX::Track*,allocator<VERTEX::Track*> >::const_iterator>::reference>",117,G__get_linked_tagnum(&G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOVERTEXcLcLTrackmUcOlongcOVERTEXcLcLTrackmUmUcOVERTEXcLcLTrackmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__ShowerDictLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__ShowerDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__ShowerDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__ShowerDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ShowerDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ShowerDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>::iterator_category,iterator_traits<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>::value_type,iterator_traits<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>::difference_type,iterator_traits<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>::pointer,iterator_traits<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>::reference>",117,G__get_linked_tagnum(&G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOpairlEunsignedsPintcOintgRcOlongcOpairlEunsignedsPintcOintgRmUcOpairlEunsignedsPintcOintgRaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOpairlEunsignedsPintcOintgRcOlongcOpairlEunsignedsPintcOintgRmUcOpairlEunsignedsPintcOintgRaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,pair<unsigned int,int>,long>",117,G__get_linked_tagnum(&G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOpairlEunsignedsPintcOintgRcOlongcOpairlEunsignedsPintcOintgRmUcOpairlEunsignedsPintcOintgRaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,pair<unsigned int,int>,long,pair<unsigned int,int>*>",117,G__get_linked_tagnum(&G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOpairlEunsignedsPintcOintgRcOlongcOpairlEunsignedsPintcOintgRmUcOpairlEunsignedsPintcOintgRaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ShowerDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLconst_iteratorgR),0,G__get_linked_tagnum(&G__ShowerDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::const_iterator>::iterator_category,iterator_traits<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::const_iterator>::value_type,iterator_traits<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::const_iterator>::difference_type,iterator_traits<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::const_iterator>::pointer,iterator_traits<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::const_iterator>::reference>",117,G__get_linked_tagnum(&G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOpairlEunsignedsPintcOintgRcOlongcOpairlEunsignedsPintcOintgRmUcOpairlEunsignedsPintcOintgRaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* EdbShowerRec */
static void G__setup_memvarEdbShowerRec(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerRec));
   { EdbShowerRec *p; p=(EdbShowerRec*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"eAlgoParameterConeRadius=",0,"Radius of spanning cone from first BT");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"eAlgoParameterConeAngle=",0,"Opening angle of spanning cone from first BT");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"eAlgoParameterConnectionDR=",0,"Connection Criterium: delta R");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"eAlgoParameterConnectionDT=",0,"Connection Criterium: delta T");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eAlgoParameterNPropagation=",0,"N plates backpropagating");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"eQualityPar[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eUseQualityPar=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eID=",0,"shower ID");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eX0=",0,"|_coordinates of the first shower segment");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eY0=",0,"| in the SAME FOR ALL SEGMENTS aligned  coordinate system");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eZ0=",0,"|");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eTx=",0,"tanX: deltaX/deltaZ for the first shower segment");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eTy=",0,"tanY: deltaY/deltaZ for the first shower segment");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eTrID=",0,"ID of the tracks of the first BT (in cp file if simulation!)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eChi20=",0,"Chi2 of the first shower segment");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eW0=",0,"W of the first shower segment");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eP0=",0,"P of the first shower segment");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eFlag0=",0,"Flag of the first shower segment");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"emcDigitIndexTop0=",0,"Top Digit index of the first shower segment");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"emcDigitIndexBottom0=",0,"Bottom Digit index of the first shower segment");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eDz=",0,"length of the shower along Z");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eL=",0,"length of the shower in number of film");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eIDb[10000]=",0,"ID of basetrack");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ePlateb[10000]=",0,"Plate ID of basetrack");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eXb[10000]=",0,"X position of basetrack");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eYb[10000]=",0,"Y position of basetrack");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eZb[10000]=",0,"Z position of basetrack");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eTXb[10000]=",0,"Slope X position of basetrack");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eTYb[10000]=",0,"Slope Y position of basetrack");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eChi2b[10000]=",0,"Chi2 of basetrack");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"ePb[10000]=",0,"P of basetrack");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eWb[10000]=",0,"W of basetrack");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eFlagb[10000]=",0,"Flag of basetrack");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eNFilmb[10000]=",0,"Plate number of basetrack in the shower reference");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eDeltarb[10000]=",0,"Distance criteria of  basetrack");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eDeltathetab[10000]=",0,"Angular criteria of  basetrack");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eTagPrimary[10000]=",0,"1 for first Basetrack - 0 for the other");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"emcDigitIndexTop[1000]=",0,"mc top digit index  of basetrack");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"emcDigitIndexBottom[1000]=",0,"mc bottom digit index  of basetrack");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eSize=",0,"number of BT in the shower");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eSize15=",0,"number of BT in the shower (for 15 films crossed)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eSize20=",0,"number of BT in the shower (for 20 films crossed)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eSize30=",0,"number of BT in the shower (for 30 films crossed)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eOutput=",0,"Neural Network output for e/pi separation");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eOutput15=",0,"Neural Network output for e/pi separation (for 15 films crossed)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eOutput20=",0,"Neural Network output for e/pi separation (for 20 films crossed)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eOutput30=",0,"Neural Network output for e/pi separation (for 30 films crossed)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eInitiatorBTIsCreated=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eInBTArrayIsFilled=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TString),-1,-1,4,"eFilename_LinkedTracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_EdbPVRec),-1,-1,4,"eAli=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_EdbPVRec),-1,-1,4,"eAli_Sub=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eAli_Sub_halfsize=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eAliNpat=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eAli_SubNpat=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eAliNpatM1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eNumberPlate_eAliPID=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eAliLoaded=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eUseAliSub=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TObjArray),-1,-1,4,"eInBTArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eInBTArrayN=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eInBTArrayLoaded=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eInBTArrayMaxSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TObjArray),-1,-1,4,"eRecoShowerArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eRecoShowerArrayN=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eEnergyCorrectedb=",0,"Neural Network output for   Corrected Energy");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eEnergyUnCorrectedb=",0,"Neural Network output for UnCorrected Energy");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eEnergySigmaCorrectedb=",0,"Neural Network output for   Corrected Energy Sigma");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eEnergySigmaUnCorrectedb=",0,"Neural Network output for UnCorrected Energy Sigma");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"energy_shot_particle=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TH1F),-1,-1,4,"eHistEnergyNominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TH1F),-1,-1,4,"eHistEnergyCorrectedb=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TH1F),-1,-1,4,"eHistEnergyUnCorrectedb=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TH1F),-1,-1,4,"eHistEnergySigmaCorrectedb=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TH1F),-1,-1,4,"eHistEnergySigmaUnCorrectedb=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eShowerTreeIsDone=",0,"ShowerReconstruction already done or not");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eDoEnergyCalculation=",0,"EnergyEstimation to do or not.");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eEnergyIsDone=",0,"EnergyEstimation already done or not");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TObjArray),-1,-1,4,"eEnergyANN=",0,"Container for the ANNs trained on different");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TString),-1,-1,4,"eEnergyWeightFileString[9]=",0,"Container for the weightfiles trained on different");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TTree),-1,-1,4,"ANNInterimTreeInputvariables=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"inANN[70]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TF1),-1,-1,4,"eEnergyResolutionFitFunction_All=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eShowersN=",0,"Number how many showers have been reconstructed.");
   G__memvar_setup((void*)((long)(&p->number_eventb)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"number_eventb=",0,"MC number of the shower");
   G__memvar_setup((void*)((long)(&p->sizeb15)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"sizeb15=",0,"sizeb15: basetracks within the first 15 plates");
   G__memvar_setup((void*)((long)(&p->sizeb20)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"sizeb20=",0,"sizeb20: basetracks within the first 20 plates");
   G__memvar_setup((void*)((long)(&p->sizeb30)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"sizeb30=",0,"sizeb30: basetracks within the first 30 plates");
   G__memvar_setup((void*)((long)(&p->output15)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"output15=",0,"old neural net variables for e/pi separation");
   G__memvar_setup((void*)((long)(&p->output20)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"output20=",0,"old neural net variables for e/pi separation");
   G__memvar_setup((void*)((long)(&p->output30)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"output30=",0,"old neural net variables for e/pi separation");
   G__memvar_setup((void*)((long)(&p->output50)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"output50=",0,"old neural net variables for e/pi separation");
   G__memvar_setup((void*)((long)(&p->E_MC)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"E_MC=",0,"energy of the first starting basetrack");
   G__memvar_setup((void*)((long)(&p->sizeb)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"sizeb=",0,"number of basetracks");
   G__memvar_setup((void*)((long)(&p->isizeb)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"isizeb=",0,"??? forgot what it was ???");
   G__memvar_setup((void*)((long)(&p->showerID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"showerID=",0,"??? forgot what it was ???");
   G__memvar_setup((void*)((long)(&p->idb)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"idb[10000]=",0,"??? forgot what it was ???");
   G__memvar_setup((void*)((long)(&p->plateb)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"plateb[10000]=",0,"plate id of segment i");
   G__memvar_setup((void*)((long)(&p->xb)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"xb[10000]=",0,"position of segment i");
   G__memvar_setup((void*)((long)(&p->yb)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"yb[10000]=",0,"position of segment i");
   G__memvar_setup((void*)((long)(&p->zb)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"zb[10000]=",0,"position of segment i");
   G__memvar_setup((void*)((long)(&p->txb)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"txb[10000]=",0,"position of segment i");
   G__memvar_setup((void*)((long)(&p->tyb)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tyb[10000]=",0,"position of segment i");
   G__memvar_setup((void*)((long)(&p->nfilmb)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nfilmb[10000]=",0,"plate position of segment i w.r.t. starting segment.");
   G__memvar_setup((void*)((long)(&p->ngrainb)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ngrainb[10000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ntrace1simub)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ntrace1simub[10000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ntrace2simub)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ntrace2simub[10000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ntrace3simub)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ntrace3simub[10000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ntrace4simub)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ntrace4simub[10000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chi2btkb)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"chi2btkb[10000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->deltarb)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"deltarb[10000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->deltathetab)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"deltathetab[10000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->deltaxb)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"deltaxb[10000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->deltayb)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"deltayb[10000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tagprimary)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tagprimary[10000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mcDigitIndexTop)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"mcDigitIndexTop[1000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mcDigitIndexBottom)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"mcDigitIndexBottom[1000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EnergyCorrectedb)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"EnergyCorrectedb=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EnergyUnCorrectedb)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"EnergyUnCorrectedb=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EnergySigmaCorrectedb)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"EnergySigmaCorrectedb=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EnergySigmaUnCorrectedb)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"EnergySigmaUnCorrectedb=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->purityb)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"purityb=",0,"purity of the shower (MC info needed).");
   G__memvar_setup((void*)((long)(&p->trackdensb)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"trackdensb=",0,"Track density _around_ the shower (BT/mm2) (using eAli_Sub_halfsize).");
   G__memvar_setup((void*)((long)(&p->eProb90)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"eProb90=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eProb1)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"eProb1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fileout)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TFile),-1,-1,1,"fileout=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->treesaveb)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TTree),-1,-1,1,"treesaveb=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->file)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TFile),-1,-1,1,"file=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fileout2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TFile),-1,-1,1,"fileout2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->treesaveb2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TTree),-1,-1,1,"treesaveb2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fileout3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TFile),-1,-1,1,"fileout3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->treesaveb3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TTree),-1,-1,1,"treesaveb3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gAli)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_EdbPVRec),-1,-1,1,"gAli=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FileReconstructedShowerTree)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TFile),-1,-1,1,"FileReconstructedShowerTree=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FileShowerParametrisationTree)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TFile),-1,-1,1,"FileShowerParametrisationTree=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ShowerParametrisationTree)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TTree),-1,-1,1,"ShowerParametrisationTree=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->varia)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TTree),-1,-1,1,"varia=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dproc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_EdbDataProc),-1,-1,1,"dproc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->a)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_EdbDataProc),-1,-1,1,"a=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin1)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin2)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin3)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin4)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin4=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin5)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin5=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin6)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin6=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin7)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin7=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin8)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin8=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin9)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin9=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin10)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin10=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin11)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin11=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin12)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin12=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin13)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin13=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin14)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin14=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin15)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin15=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin16)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin16=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin17)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin17=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin18)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin18=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin19)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin19=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin20)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin20=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin21)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin21=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin22)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin22=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin23)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin23=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin24)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin24=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin25)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin25=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin26)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin26=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin27)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin27=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin28)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin28=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin29)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin29=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin30)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin30=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin31)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin31=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin32)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin32=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin33)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin33=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin34)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin34=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin35)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin35=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin41)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin41=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin42)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin42=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin43)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin43=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin44)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin44=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin45)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin45=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin46)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin46=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin47)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin47=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin48)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin48=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin49)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin49=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin50)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin50=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin51)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin51=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin52)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin52=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin53)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin53=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin54)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin54=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin55)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin55=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin56)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin56=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin57)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin57=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin58)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin58=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin59)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin59=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bin60)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"bin60=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->type)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"type=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mlp1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TMultiLayerPerceptron),-1,-1,1,"mlp1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mlp2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TMultiLayerPerceptron),-1,-1,1,"mlp2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mlp3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TMultiLayerPerceptron),-1,-1,1,"mlp3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mlp4)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TMultiLayerPerceptron),-1,-1,1,"mlp4=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cmd)-(long)(p)),99,0,0,-1,-1,-1,1,"cmd[500]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->histo_nbtk_av)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TH1D),-1,-1,1,"histo_nbtk_av=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->histo_longprofile_av)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TH1D),-1,-1,1,"histo_longprofile_av=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->histo_deltaR_mean)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TH1D),-1,-1,1,"histo_deltaR_mean=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->histo_deltaT_mean)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TH1D),-1,-1,1,"histo_deltaT_mean=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->histo_deltaR_rms)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TH1D),-1,-1,1,"histo_deltaR_rms=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->histo_deltaT_rms)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TH1D),-1,-1,1,"histo_deltaT_rms=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbShowerAlg */
static void G__setup_memvarEdbShowerAlg(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlg));
   { EdbShowerAlg *p; p=(EdbShowerAlg*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TString),-1,-1,2,"eAlgName=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eAlgValue=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"eParaValue[10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TString),-1,-1,2,"eParaString[10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eActualAlgParametersetNr=",0,"Used when more sets of same algorithm");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_EdbPVRec),-1,-1,2,"eAli=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eAliNpat=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TObjArray),-1,-1,2,"eInBTArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eInBTArrayN=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eFirstPlate_eAliPID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eLastPlate_eAliPID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eMiddlePlate_eAliPID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eNumberPlate_eAliPID=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TObjArray),-1,-1,2,"eRecoShowerArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eRecoShowerArrayN=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_EdbPVRec),-1,-1,2,"eAli_Sub=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eAli_SubNpat=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eUseAliSub=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_EdbTrackP),-1,-1,2,"eRecoShower=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"eDebug=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbShowerAlg_GS */
static void G__setup_memvarEdbShowerAlg_GS(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlg_GS));
   { EdbShowerAlg_GS *p; p=(EdbShowerAlg_GS*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TObjArray),-1,-1,4,"eInVtxArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eInVtxArrayN=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eInVtxArraySet=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eFindPairsPreselected=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eRecoMode=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eCutModeFull=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eSetCleanPairs=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TMultiLayerPerceptron),-1,-1,4,"eANNPair=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TMultiLayerPerceptron),-1,-1,4,"eANNPairCaseA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TMultiLayerPerceptron),-1,-1,4,"eANNPairCaseB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TMultiLayerPerceptron),-1,-1,4,"eANNPairCaseC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TTree),-1,-1,4,"eANNPairTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eANNPairCut[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eValueGSNN_var00=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eValueGSNN_var01=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eValueGSNN_var02=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eValueGSNN_var03=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eValueGSNN_var04=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eValueGSNN_var05=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eValueGSNN_var06=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eValueGSNN_varInput=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eValueGSNN_varOutput=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TArrayI),-1,-1,4,"eSegmentPIDArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TArrayI),-1,-1,4,"eSegmentIDArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TArrayI),-1,-1,4,"eSegment2PIDArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TArrayI),-1,-1,4,"eSegment2IDArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbShowerAlgESimple */
static void G__setup_memvarEdbShowerAlgESimple(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlgESimple));
   { EdbShowerAlgESimple *p; p=(EdbShowerAlgESimple*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TObjArray),-1,-1,2,"eRecoShowerArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eRecoShowerArrayN=",0,"nothing...");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eParaName=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"eCalibrationOffset=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"eCalibrationSlope=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"ePlateNumberType=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"ePlateNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TString),-1,-1,2,"eWeightFileString=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eSpecificationType[7]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TString),-1,-1,2,"eSpecificationTypeString[7]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TString),-1,-1,2,"eSpecificationTypeStringArray[7][7]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"eSpecificationIsChanged=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"eForceSpecificationReload=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"ePlateBinning[15]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TMultiLayerPerceptron),-1,-1,2,"ANN_MLP=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TMultiLayerPerceptron),-1,-1,2,"ANN_MLP_ARRAY[15]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TTree),-1,-1,2,"ANNTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"inANN[70]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"outANN=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"ANN_nPlates_ARRAY[15]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"ANN_n_InputNeurons_ARRAY[15]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"ANN_n_InputNeurons=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TString),-1,-1,2,"ANN_Layout=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TString),-1,-1,2,"ANN_WeightFile_ARRAY[15]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"eANN_MLP_CORR_0[15]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"eANN_MLP_CORR_1[15]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"eParaShowerAxisAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eParanseg=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"eParaBT_deltaR_mean=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"eParaBT_deltaR_rms=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"eParaBT_deltaT_mean=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"eParaBT_deltaT_rms=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eParalongprofile[57]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TH1D),-1,-1,2,"eHisto_nbtk_av=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TH1D),-1,-1,2,"eHisto_longprofile_av=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TH1D),-1,-1,2,"eHisto_transprofile_av=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TH1D),-1,-1,2,"eHisto_deltaR_mean=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TH1D),-1,-1,2,"eHisto_deltaT_mean=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TH1D),-1,-1,2,"eHisto_deltaR_rms=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TH1D),-1,-1,2,"eHisto_deltaT_rms=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TH1D),-1,-1,2,"eHisto_nbtk=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TH1D),-1,-1,2,"eHisto_longprofile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TH1D),-1,-1,2,"eHisto_transprofile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TH1D),-1,-1,2,"eHisto_deltaR=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TH1D),-1,-1,2,"eHisto_deltaT=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TF1),-1,-1,2,"EffFunc_all=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TF1),-1,-1,2,"EffFunc_edefault=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TF1),-1,-1,2,"EffFunc_elletroni=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TF1),-1,-1,2,"EffFunc_neuchmicro=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TF1),-1,-1,2,"EffFunc_MiddleFix=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TF1),-1,-1,2,"EffFunc_LowEff=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TF1),-1,-1,2,"EffFunc_UserEfficiency=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TSpline3),-1,-1,2,"eEfficiencyParametrisation=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TArrayF),-1,-1,2,"eEnergyArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TArrayF),-1,-1,2,"eEnergyArrayUnCorrected=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TArrayF),-1,-1,2,"eEnergyArraySigmaCorrected=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"eEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"eEnergyCorr=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"eEnergyUnCorr=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"eEnergySigmaCorr=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eEnergyArrayCount=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TObjArray),-1,-1,2,"eSplineArray_Energy_Stat_Electron=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TObjArray),-1,-1,2,"eSplineArray_Energy_Stat_Gamma=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TObjArray),-1,-1,2,"eSplineArray_Energy_Sys_Electron=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TObjArray),-1,-1,2,"eSplineArray_Energy_Sys_Gamma=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TSpline3),-1,-1,2,"eSplineCurrent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbShowerAlgIDSimple */
static void G__setup_memvarEdbShowerAlgIDSimple(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlgIDSimple));
   { EdbShowerAlgIDSimple *p; p=(EdbShowerAlgIDSimple*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"eIDEnergySigmaCorr=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"eANNIDCutValue=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"eIDCutTypeValue[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EdbPVRQuality */
static void G__setup_memvarEdbPVRQuality(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowerDictLN_EdbPVRQuality));
   { EdbPVRQuality *p; p=(EdbPVRQuality*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_EdbPVRec),-1,-1,4,"eAli_orig=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_EdbPVRec),-1,-1,4,"eAli_modified=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eNeedModified=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eIsSource=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eIsTarget=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eHistGeometry=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eAli_maxNpatterns=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eCutMethod=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TString),-1,-1,4,"eCutMethodString=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eCutMethodIsDone[7]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eBTDensityLevel=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eBTDensityLevelAngularSpace[20]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"eBTDensityLevelCalcMethodMC=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eBTDensityLevelCalcMethodMCConfirmationNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"ePatternBTDensity_orig[114]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"ePatternBTDensity_modified[114]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TH2F),-1,-1,4,"eHistChi2W=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TH2F),-1,-1,4,"eHistYX=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TH2F),-1,-1,4,"eHistTYTX=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TH1F),-1,-1,4,"eHistTT=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TH2F),-1,-1,4,"eHistTanTheta=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"NbinsX=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"NbinsY=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"minX=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"maxX=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"minY=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"maxY=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TProfile),-1,-1,4,"eProfileBTdens_vs_PID_source=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eProfileBTdens_vs_PID_source_meanX=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eProfileBTdens_vs_PID_source_meanY=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eProfileBTdens_vs_PID_source_rmsX=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eProfileBTdens_vs_PID_source_rmsY=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TProfile),-1,-1,4,"eProfileBTdens_vs_PID_target=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eProfileBTdens_vs_PID_target_meanX=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eProfileBTdens_vs_PID_target_meanY=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eProfileBTdens_vs_PID_target_rmsX=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eProfileBTdens_vs_PID_target_rmsY=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eCutTTSqueezeFactor=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eCutp0[114]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eCutp1[114]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eCutTTp0[114][20]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eCutTTp1[114][20]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eCutDistChi2[114]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eCutDistW[114]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eAgreementChi2WDistCut[114]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eAgreementChi2CutMeanChi2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eAgreementChi2CutRMSChi2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eAgreementChi2CutMeanW=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eAgreementChi2CutRMSW=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eX2Hat=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eX2HatCut[114]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eXi2Hat_m_chi2[114]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eXi2Hat_s_chi2[114]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eXi2Hat_m_WTilde[114]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eXi2Hat_s_WTilde[114]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eXi2HatTT_m_chi2[114][20]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eXi2HatTT_s_chi2[114][20]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eXi2HatTT_m_WTilde[114][20]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eXi2HatTT_s_WTilde[114][20]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eRandomCutThreshold=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarShowerDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncEdbShowerRec(void) {
   /* EdbShowerRec */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerRec));
   G__memfunc_setup("eEANN",391,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__ShowerDictLN_TMultiLayerPerceptron), -1, 0, 0, 1, 4, 0, "", "shower length (\"nfilmb\");", (void*) NULL, 0);
   G__memfunc_setup("EdbShowerRec",1181,G__ShowerDict_817_0_2, 105, G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerRec), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowerRec",1181,G__ShowerDict_817_0_3, 105, G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerRec), -1, 0, 8, 1, 1, 0, 
"U 'TObjArray' - 0 - InBTArray i - - 0 - num "
"i - - 0 - MAXPLATE i - - 0 - DATA "
"i - - 0 - piece2 i - - 0 - piece2par "
"i - - 0 - DOWN U 'EdbPVRec' - 0 - pvr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowerRec",1181,G__ShowerDict_817_0_4, 105, G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerRec), -1, 0, 1, 1, 1, 0, "U 'EdbPVRec' - 0 - pvr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowerRec",1181,G__ShowerDict_817_0_5, 105, G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerRec), -1, 0, 2, 1, 1, 0, 
"U 'EdbPVRec' - 0 - pvr i - 'Int_t' 0 - OptionType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetN",366,G__ShowerDict_817_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__ShowerDict_817_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX0",424,G__ShowerDict_817_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY0",425,G__ShowerDict_817_0_9, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ0",426,G__ShowerDict_817_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChi20",662,G__ShowerDict_817_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetW0",423,G__ShowerDict_817_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP0",416,G__ShowerDict_817_0_13, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFlag0",714,G__ShowerDict_817_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTx",492,G__ShowerDict_817_0_15, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTy",493,G__ShowerDict_817_0_16, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDz",478,G__ShowerDict_817_0_17, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetL",364,G__ShowerDict_817_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrID",627,G__ShowerDict_817_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSize",699,G__ShowerDict_817_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSize15",801,G__ShowerDict_817_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSize20",797,G__ShowerDict_817_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSize30",798,G__ShowerDict_817_0_23, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPlateb",888,G__ShowerDict_817_0_24, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIDb",527,G__ShowerDict_817_0_25, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXb",474,G__ShowerDict_817_0_26, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYb",475,G__ShowerDict_817_0_27, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZb",476,G__ShowerDict_817_0_28, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTXb",558,G__ShowerDict_817_0_29, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTYb",559,G__ShowerDict_817_0_30, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChi2b",712,G__ShowerDict_817_0_31, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWb",473,G__ShowerDict_817_0_32, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPb",466,G__ShowerDict_817_0_33, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFlagb",764,G__ShowerDict_817_0_34, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNFilmb",856,G__ShowerDict_817_0_35, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDeltarb",990,G__ShowerDict_817_0_36, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDeltathetab",1410,G__ShowerDict_817_0_37, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTagPrimaryb",1410,G__ShowerDict_817_0_38, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOutput",945,G__ShowerDict_817_0_39, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOutput15",1047,G__ShowerDict_817_0_40, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOutput20",1043,G__ShowerDict_817_0_41, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOutput30",1044,G__ShowerDict_817_0_42, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,G__ShowerDict_817_0_43, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyUn",1101,G__ShowerDict_817_0_44, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergySigma",1403,G__ShowerDict_817_0_45, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyUnSigma",1598,G__ShowerDict_817_0_46, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetmcDigitIndexTop",1804,G__ShowerDict_817_0_47, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetmcDigitIndexBottom",2126,G__ShowerDict_817_0_48, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetID",441,G__ShowerDict_817_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetX0",436,G__ShowerDict_817_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetY0",437,G__ShowerDict_817_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZ0",438,G__ShowerDict_817_0_52, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChi20",674,G__ShowerDict_817_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - chi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetW0",435,G__ShowerDict_817_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetP0",428,G__ShowerDict_817_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFlag0",726,G__ShowerDict_817_0_56, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetmcDigitIndexTop0",1864,G__ShowerDict_817_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - mcDt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetmcDigitIndexBottom0",2186,G__ShowerDict_817_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - mcDb", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTx",504,G__ShowerDict_817_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - tx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTy",505,G__ShowerDict_817_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - ty", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrID",639,G__ShowerDict_817_0_61, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSize",711,G__ShowerDict_817_0_62, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSize15",813,G__ShowerDict_817_0_63, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSize20",809,G__ShowerDict_817_0_64, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSize30",810,G__ShowerDict_817_0_65, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDz",490,G__ShowerDict_817_0_66, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - dz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetL",376,G__ShowerDict_817_0_67, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - L", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOutput",957,G__ShowerDict_817_0_68, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - output", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOutput15",1059,G__ShowerDict_817_0_69, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - output", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOutput20",1055,G__ShowerDict_817_0_70, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - output", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOutput30",1056,G__ShowerDict_817_0_71, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - output", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXb",486,G__ShowerDict_817_0_72, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - - 0 - xb i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIDb",539,G__ShowerDict_817_0_73, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idb2 i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPlateb",900,G__ShowerDict_817_0_74, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - plate2 i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYb",487,G__ShowerDict_817_0_75, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - - 0 - yb i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZb",488,G__ShowerDict_817_0_76, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - - 0 - zb i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTXb",570,G__ShowerDict_817_0_77, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - - 0 - txb i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTYb",571,G__ShowerDict_817_0_78, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - - 0 - tyb i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChi2b",724,G__ShowerDict_817_0_79, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - - 0 - chi2b i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWb",485,G__ShowerDict_817_0_80, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - w i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPb",478,G__ShowerDict_817_0_81, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - - 0 - p i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFlagb",776,G__ShowerDict_817_0_82, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - flag i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNFilmb",868,G__ShowerDict_817_0_83, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - nfilmb i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDeltarb",1002,G__ShowerDict_817_0_84, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - - 0 - deltarb i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDelthetab",1209,G__ShowerDict_817_0_85, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - - 0 - deltathetab i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPrimary",1040,G__ShowerDict_817_0_86, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tagprimary i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetmcDigitIndexTop",1816,G__ShowerDict_817_0_87, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - mcDt i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetmcDigitIndexBottom",2138,G__ShowerDict_817_0_88, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - mcDb i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitPiece",890,G__ShowerDict_817_0_89, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'EdbDataPiece' - 1 - piece C - - 10 - cpfile "
"C - - 10 - parfile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadPiece",866,G__ShowerDict_817_0_90, 105, -1, -1, 0, 2, 1, 1, 0, 
"u 'EdbDataPiece' - 1 - piece u 'EdbPattern' - 1 - pat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rec",314,G__ShowerDict_817_0_91, 121, -1, -1, 0, 19, 1, 1, 0, 
"i - - 0 - num i - - 0 - MAXPLATE "
"i - - 0 - DATA i - - 0 - Ncand "
"D - - 0 - x0 D - - 0 - y0 "
"D - - 0 - z0 D - - 0 - tx0 "
"D - - 0 - ty0 I - - 0 - plate0 "
"I - - 0 - id0 I - - 0 - TRid "
"D - - 0 - Esim I - - 0 - mcDigitIndexTop "
"I - - 0 - mcDigitIndexBottom i - - 0 - piece2 "
"i - - 0 - piece2par i - - 0 - DOWN "
"U 'EdbPVRec' - 0 - pvr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rec",314,G__ShowerDict_817_0_92, 121, -1, -1, 0, 21, 1, 1, 0, 
"i - - 0 - num i - - 0 - MAXPLATE "
"i - - 0 - DATA i - - 0 - Ncand "
"D - - 0 - x0 D - - 0 - y0 "
"D - - 0 - z0 D - - 0 - tx0 "
"D - - 0 - ty0 D - - 0 - chi20 "
"I - - 0 - W0 D - - 0 - P0 "
"I - - 0 - Flag0 I - - 0 - plate0 "
"I - - 0 - id0 I - - 0 - TRid "
"D - - 0 - Esim i - - 0 - piece2 "
"i - - 0 - piece2par i - - 0 - DOWN "
"U 'EdbPVRec' - 0 - pvr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("recdown",754,G__ShowerDict_817_0_93, 121, -1, -1, 0, 22, 1, 1, 0, 
"i - - 0 - num i - - 0 - MAXPLATE "
"i - - 0 - DATA i - - 0 - Ncand "
"D - - 0 - x0 D - - 0 - y0 "
"D - - 0 - z0 D - - 0 - tx0 "
"D - - 0 - ty0 D - - 0 - chi20 "
"I - - 0 - W0 D - - 0 - P0 "
"I - - 0 - Flag0 I - - 0 - plate0 "
"I - - 0 - id0 I - - 0 - TRid "
"D - - 0 - Esim I - - 0 - mcDigitIndexTop0 "
"I - - 0 - mcDigitIndexBottom0 i - - 0 - piece2 "
"i - - 0 - piece2par U 'EdbPVRec' - 0 - pvr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("recup",543,G__ShowerDict_817_0_94, 121, -1, -1, 0, 22, 1, 1, 0, 
"i - - 0 - num i - - 0 - MAXPLATE "
"i - - 0 - DATA i - - 0 - Ncand "
"D - - 0 - x0 D - - 0 - y0 "
"D - - 0 - z0 D - - 0 - tx0 "
"D - - 0 - ty0 D - - 0 - chi20 "
"I - - 0 - W0 D - - 0 - P0 "
"I - - 0 - Flag0 I - - 0 - plate0 "
"I - - 0 - id0 I - - 0 - TRid "
"D - - 0 - Esim I - - 0 - mcDigitIndexTop0 "
"I - - 0 - mcDigitIndexBottom0 i - - 0 - piece2 "
"i - - 0 - piece2par U 'EdbPVRec' - 0 - pvr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rec",314,G__ShowerDict_817_0_95, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TObjArray' - 0 - sarr U 'EdbPVRec' - 0 - pvr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("remove",654,G__ShowerDict_817_0_96, 121, -1, -1, 0, 4, 1, 1, 0, 
"C - - 0 - shfname C - - 0 - def "
"i - - 0 - MAXPLATE i - - 0 - piece2par", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vert",449,G__ShowerDict_817_0_97, 121, -1, -1, 0, 4, 1, 1, 0, 
"C - - 10 - name2 C - - 10 - def "
"i - - 0 - MAXPLATE i - - 0 - piece2par", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveResults",1153,G__ShowerDict_817_0_98, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initproc",872,G__ShowerDict_817_0_99, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - def i - - 0 - iopt "
"C - - 10 - rcut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadAffAndZ",1014,G__ShowerDict_817_0_100, 121, -1, -1, 0, 8, 1, 1, 0, 
"C - - 0 - fname F - 'Float_t' 0 - pZoffs "
"F - 'Float_t' 0 - a11 F - 'Float_t' 0 - a12 "
"F - 'Float_t' 0 - a21 F - 'Float_t' 0 - a22 "
"F - 'Float_t' 0 - b1 F - 'Float_t' 0 - b2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NeuralNet",910,G__ShowerDict_817_0_101, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveLNK",628,G__ShowerDict_817_0_102, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowerToEdbSegPArray",1972,G__ShowerDict_817_0_103, 85, G__get_linked_tagnum(&G__ShowerDictLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDoEnergyCalculation",2232,G__ShowerDict_817_0_104, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - DoEnergyCalculation", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateEnergyValues",2152,G__ShowerDict_817_0_105, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Energy_ExtractShowerParametrisationProfile",4384,G__ShowerDict_817_0_106, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Energy_CreateANNTree",1930,G__ShowerDict_817_0_107, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Energy_CorrectEnergy",2053,G__ShowerDict_817_0_108, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - MeasuredEnergy i - 'Int_t' 0 - NPlatesNr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Energy_CreateEnergyResolutionFitFunction",4132,G__ShowerDict_817_0_109, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Energy_CalcSigma",1581,G__ShowerDict_817_0_110, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - Energy i - 'Int_t' 0 - NPlatesNr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadShowerFile",1400,G__ShowerDict_817_0_111, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - ShowerFileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistEnergyNominal",2032,G__ShowerDict_817_0_112, 85, G__get_linked_tagnum(&G__ShowerDictLN_TH1F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistEnergyCorrectedb",2335,G__ShowerDict_817_0_113, 85, G__get_linked_tagnum(&G__ShowerDictLN_TH1F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistEnergyUnCorrectedb",2530,G__ShowerDict_817_0_114, 85, G__get_linked_tagnum(&G__ShowerDictLN_TH1F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistEnergySigmaCorrectedb",2832,G__ShowerDict_817_0_115, 85, G__get_linked_tagnum(&G__ShowerDictLN_TH1F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistEnergySigmaUnCorrectedb",3027,G__ShowerDict_817_0_116, 85, G__get_linked_tagnum(&G__ShowerDictLN_TH1F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistLongProfile",1817,G__ShowerDict_817_0_117, 85, G__get_linked_tagnum(&G__ShowerDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistNBaseTracks",1769,G__ShowerDict_817_0_118, 85, G__get_linked_tagnum(&G__ShowerDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistdeltaR_mean",1812,G__ShowerDict_817_0_119, 85, G__get_linked_tagnum(&G__ShowerDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistdeltaT_mean",1814,G__ShowerDict_817_0_120, 85, G__get_linked_tagnum(&G__ShowerDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistdeltaR_rms",1733,G__ShowerDict_817_0_121, 85, G__get_linked_tagnum(&G__ShowerDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistdeltaT_rms",1735,G__ShowerDict_817_0_122, 85, G__get_linked_tagnum(&G__ShowerDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintInitiatorBTs",1737,G__ShowerDict_817_0_123, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddInitiatorBT",1362,G__ShowerDict_817_0_124, 105, -1, -1, 0, 1, 1, 1, 0, "U 'EdbSegP' - 0 - seg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyValues",1530,G__ShowerDict_817_0_125, 70, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - TreeEntry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetShowerValues",1544,G__ShowerDict_817_0_126, 70, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - TreeEntry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTreeBranchEntryNr",2000,G__ShowerDict_817_0_127, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'EdbSegP' - 0 - seg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUseAliSub",1177,G__ShowerDict_817_0_128, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - UseAliSub", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEdbPVRec",1015,G__ShowerDict_817_0_129, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbPVRec' - 0 - Ali", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInBTArray",1144,G__ShowerDict_817_0_130, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - InBTArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInBTArrayN",1222,G__ShowerDict_817_0_131, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - InBTArrayN", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInBTArray",1144,G__ShowerDict_817_0_132, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbSegP' - 0 - InBT", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInBTArray",1144,G__ShowerDict_817_0_133, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'EdbPVRec' - 0 - Ali i - 'Int_t' 0 '0' mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecoShowerArrayN",1914,G__ShowerDict_817_0_134, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - RecoShowerArrayN", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecoShowerArray",1836,G__ShowerDict_817_0_135, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - RecoShowerArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAlgoParameter",1616,G__ShowerDict_817_0_136, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - paravalue i - 'Int_t' 0 - paranr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetAlgoParameters",1946,G__ShowerDict_817_0_137, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQualityCutValues",1969,G__ShowerDict_817_0_138, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - p0 d - 'Double_t' 0 - p1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUseAliSub",1165,G__ShowerDict_817_0_139, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEdbPVRec",1003,G__ShowerDict_817_0_140, 85, G__get_linked_tagnum(&G__ShowerDictLN_EdbPVRec), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEdbPVRecNpat",1406,G__ShowerDict_817_0_141, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEdbPVRecNplateNumber",2232,G__ShowerDict_817_0_142, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAliLoaded",1151,G__ShowerDict_817_0_143, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEdbPVRecSub",1301,G__ShowerDict_817_0_144, 85, G__get_linked_tagnum(&G__ShowerDictLN_EdbPVRec), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInBTArray",1132,G__ShowerDict_817_0_145, 85, G__get_linked_tagnum(&G__ShowerDictLN_TObjArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInBT",621,G__ShowerDict_817_0_146, 85, G__get_linked_tagnum(&G__ShowerDictLN_EdbSegP), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecoShowerArray",1824,G__ShowerDict_817_0_147, 85, G__get_linked_tagnum(&G__ShowerDictLN_TObjArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInBTArrayN",1210,G__ShowerDict_817_0_148, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecoShowerArrayN",1902,G__ShowerDict_817_0_149, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAlgoParameter",1604,G__ShowerDict_817_0_150, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - paranr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetInBTArray",1359,G__ShowerDict_817_0_151, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetRecoShowerArray",2051,G__ShowerDict_817_0_152, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill_eInBTArray_ByLinkTracks_eFilename_LinkedTracks",5034,G__ShowerDict_817_0_153, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearInBTArray",1331,G__ShowerDict_817_0_154, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearRecoShowerArray",2023,G__ShowerDict_817_0_155, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadEdbPVRec",1099,G__ShowerDict_817_0_156, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Transform_eAli",1430,G__ShowerDict_817_0_157, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'EdbSegP' - 0 - InitiatorBT f - 'Float_t' 0 - ExtractSize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcTrackDensity",1608,G__ShowerDict_817_0_158, 121, -1, -1, 0, 5, 1, 1, 0, 
"U 'EdbPattern' - 0 - pat_interim i - 'Int_t' 0 - pat_interim_halfsize "
"i - 'Int_t' 1 - npat_int i - 'Int_t' 1 - npat_total "
"i - 'Int_t' 1 - npatN", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEdbPVRecNSeg",1368,G__ShowerDict_817_0_159, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"U 'EdbPVRec' - 0 - ali i - 'Int_t' 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckEdbPVRecSetUseAliSub",2370,G__ShowerDict_817_0_160, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintEdbPVRec",1240,G__ShowerDict_817_0_161, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintRecoShowerArray",2061,G__ShowerDict_817_0_162, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintParameters",1569,G__ShowerDict_817_0_163, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeltaThetaComponentwise",2379,G__ShowerDict_817_0_164, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"U 'EdbSegP' - 0 - s1 U 'EdbSegP' - 0 - s2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeltaR_WithPropagation",2235,G__ShowerDict_817_0_165, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"U 'EdbSegP' - 0 - s U 'EdbSegP' - 0 - stest", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeltaR_WithoutPropagation",2579,G__ShowerDict_817_0_166, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"U 'EdbSegP' - 0 - s U 'EdbSegP' - 0 - stest", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindPrecedingBTs",1563,G__ShowerDict_817_0_167, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"U 'EdbSegP' - 0 - s U 'EdbSegP' - 0 - InBT "
"U 'EdbPVRec' - 0 - gAli U 'EdbTrackP' - 0 - shower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInConeTube",1160,G__ShowerDict_817_0_168, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"U 'EdbSegP' - 0 - TestingSegment U 'EdbSegP' - 0 - StartingSegment "
"d - 'Double_t' 0 - CylinderRadius d - 'Double_t' 0 - ConeAngle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvariantMass",1344,G__ShowerDict_817_0_169, 100, -1, G__defined_typename("Double_t"), 0, 6, 1, 1, 0, 
"U 'EdbSegP' - 0 - s1 U 'EdbSegP' - 0 - s2 "
"d - 'Double_t' 0 '-1' Momentum1 d - 'Double_t' 0 '-1' Momentum2 "
"d - 'Double_t' 0 '22' ID1 d - 'Double_t' 0 '22' ID2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Execute",723,G__ShowerDict_817_0_170, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TransferShowerObjectArrayIntoEntryOfTreebranchShowerTree",5754,G__ShowerDict_817_0_171, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - segarray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TransferTreebranchShowerTreeIntoShowerObjectArray",5043,G__ShowerDict_817_0_172, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - treebranch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__ShowerDict_817_0_173, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Help",393,G__ShowerDict_817_0_174, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set0",348,G__ShowerDict_817_0_175, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ShowerDict_817_0_176, 85, G__get_linked_tagnum(&G__ShowerDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbShowerRec::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowerDict_817_0_177, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerRec::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowerDict_817_0_178, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbShowerRec::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowerDict_817_0_179, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbShowerRec::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ShowerDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowerDict_817_0_183, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowerDict_817_0_184, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerRec::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowerDict_817_0_185, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerRec::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowerDict_817_0_186, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerRec::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowerDict_817_0_187, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerRec::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EdbShowerRec", 1181, G__ShowerDict_817_0_188, (int) ('i'), G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerRec), -1, 0, 1, 1, 1, 0, "u 'EdbShowerRec' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EdbShowerRec", 1307, G__ShowerDict_817_0_189, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowerDict_817_0_190, (int) ('u'), G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerRec), -1, 1, 1, 1, 1, 0, "u 'EdbShowerRec' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbShowerAlg(void) {
   /* EdbShowerAlg */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlg));
   G__memfunc_setup("Set0",348,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowerAlg",1175,G__ShowerDict_960_0_2, 105, G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlg), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowerAlg",1175,G__ShowerDict_960_0_3, 105, G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlg), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - AlgName i - 'Int_t' 0 - AlgValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEdbPVRec",1015,G__ShowerDict_960_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbPVRec' - 0 - Ali", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInBTArray",1144,G__ShowerDict_960_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - InBTArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEdbPVRecPIDNumbers",1968,G__ShowerDict_960_0_6, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - FirstPlate_eAliPID i - 'Int_t' 0 - LastPlate_eAliPID "
"i - 'Int_t' 0 - MiddlePlate_eAliPID i - 'Int_t' 0 - NumberPlate_eAliPID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecoShowerArray",1836,G__ShowerDict_960_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - RecoShowerArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecoShowerArrayN",1914,G__ShowerDict_960_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - RecoShowerArrayN", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddRecoShowerArray",1801,G__ShowerDict_960_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - RecoShowerArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetActualAlgParameterset",2439,G__ShowerDict_960_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ActualAlgParametersetNr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAlgValue",1073,G__ShowerDict_960_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAlgName",949,G__ShowerDict_960_0_12, 117, G__get_linked_tagnum(&G__ShowerDictLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecoShowerArrayN",1902,G__ShowerDict_960_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecoShowerArray",1824,G__ShowerDict_960_0_14, 85, G__get_linked_tagnum(&G__ShowerDictLN_TObjArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUseAliSub",1177,G__ShowerDict_960_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - UseAliSub", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeltaR_WithPropagation",2235,G__ShowerDict_960_0_16, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"U 'EdbSegP' - 0 - s U 'EdbSegP' - 0 - stest", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeltaR_WithoutPropagation",2579,G__ShowerDict_960_0_17, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"U 'EdbSegP' - 0 - s U 'EdbSegP' - 0 - stest", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeltaR_NoPropagation",2012,G__ShowerDict_960_0_18, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"U 'EdbSegP' - 0 - s U 'EdbSegP' - 0 - stest", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeltaTheta",992,G__ShowerDict_960_0_19, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"U 'EdbSegP' - 0 - s1 U 'EdbSegP' - 0 - s2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeltaThetaComponentwise",2379,G__ShowerDict_960_0_20, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"U 'EdbSegP' - 0 - s1 U 'EdbSegP' - 0 - s2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeltaThetaSingleAngles",2204,G__ShowerDict_960_0_21, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"U 'EdbSegP' - 0 - s1 U 'EdbSegP' - 0 - s2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSpatialDist",1410,G__ShowerDict_960_0_22, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"U 'EdbSegP' - 0 - s1 U 'EdbSegP' - 0 - s2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMinimumDist",1424,G__ShowerDict_960_0_23, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"U 'EdbSegP' - 0 - seg1 U 'EdbSegP' - 0 - seg2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParameter",1229,G__ShowerDict_960_0_24, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - parNr f - 'Float_t' 0 - parvalue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParameters",1344,G__ShowerDict_960_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "F - 'Float_t' 0 - par", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Transform_eAli",1430,G__ShowerDict_960_0_26, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'EdbSegP' - 0 - InitiatorBT f - 'Float_t' 0 - ExtractSize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInConeTube",1160,G__ShowerDict_960_0_27, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"U 'EdbSegP' - 0 - sTest U 'EdbSegP' - 0 - sStart "
"d - 'Double_t' 0 - CylinderRadius d - 'Double_t' 0 - ConeAngle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Convert_EdbPVRec_To_InBTArray",2776,G__ShowerDict_960_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcVertex",1009,G__ShowerDict_960_0_29, 85, G__get_linked_tagnum(&G__ShowerDictLN_EdbVertex), -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - segments", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__ShowerDict_960_0_30, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintParameters",1569,G__ShowerDict_960_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintParametersShort",2097,G__ShowerDict_960_0_32, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintRecoShowerArray",2061,G__ShowerDict_960_0_33, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintMore",928,G__ShowerDict_960_0_34, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintAll",806,G__ShowerDict_960_0_35, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDebug",787,G__ShowerDict_960_0_36, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__ShowerDict_960_0_37, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Execute",723,G__ShowerDict_960_0_38, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finalize",818,G__ShowerDict_960_0_39, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__ShowerDict_960_0_40, 85, G__get_linked_tagnum(&G__ShowerDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbShowerAlg::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowerDict_960_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerAlg::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowerDict_960_0_42, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbShowerAlg::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowerDict_960_0_43, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbShowerAlg::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ShowerDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowerDict_960_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowerDict_960_0_48, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerAlg::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowerDict_960_0_49, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerAlg::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowerDict_960_0_50, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerAlg::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowerDict_960_0_51, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerAlg::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EdbShowerAlg", 1175, G__ShowerDict_960_0_52, (int) ('i'), G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlg), -1, 0, 1, 1, 1, 0, "u 'EdbShowerAlg' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EdbShowerAlg", 1301, G__ShowerDict_960_0_53, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowerDict_960_0_54, (int) ('u'), G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlg), -1, 1, 1, 1, 1, 0, "u 'EdbShowerAlg' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbShowerAlg_GS(void) {
   /* EdbShowerAlg_GS */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlg_GS));
   G__memfunc_setup("EdbShowerAlg_GS",1424,G__ShowerDict_961_0_1, 105, G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlg_GS), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set0",348,G__ShowerDict_961_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__ShowerDict_961_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInVtxArray",1316,G__ShowerDict_961_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - InVtxArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInVtx",805,G__ShowerDict_961_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbVertex' - 0 - vtx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddInVtx",770,G__ShowerDict_961_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbVertex' - 0 - vtx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInVtxArrayN",1382,G__ShowerDict_961_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInVtxArray",1304,G__ShowerDict_961_0_8, 85, G__get_linked_tagnum(&G__ShowerDictLN_TObjArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFindPairsPreselected",2332,G__ShowerDict_961_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - FindPairsPreselected", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCleanPairs",1294,G__ShowerDict_961_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - CleanPairs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCutModeFull",1392,G__ShowerDict_961_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - CutModeFull", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectHighestPInMCArray",2242,G__ShowerDict_961_0_12, 85, G__get_linked_tagnum(&G__ShowerDictLN_TObjArray), -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - BTArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckInput",1006,G__ShowerDict_961_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecoMode",1082,G__ShowerDict_961_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - RecoMode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Convert_InVtxArray_To_InBTArray",3077,G__ShowerDict_961_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckPairDuplications",2137,G__ShowerDict_961_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 9, 1, 1, 0, 
"i - 'Int_t' 0 - SegPID i - 'Int_t' 0 - SegID "
"i - 'Int_t' 0 - Seg2PID i - 'Int_t' 0 - Seg2ID "
"U 'TArrayI' - 0 - SegmentPIDArray U 'TArrayI' - 0 - SegmentIDArray "
"U 'TArrayI' - 0 - Segment2PIDArray U 'TArrayI' - 0 - Segment2IDArray "
"i - 'Int_t' 0 - RecoShowerArrayN", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcIP",524,G__ShowerDict_961_0_17, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 1, 0, 
"U 'EdbSegP' - 0 - s d - - 0 - x "
"d - - 0 - y d - - 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcIP",524,G__ShowerDict_961_0_18, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"U 'EdbSegP' - 0 - s U 'EdbVertex' - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsPossibleFakeDoublet",2115,G__ShowerDict_961_0_19, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'EdbSegP' - 0 - s1 U 'EdbSegP' - 0 - s2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindPairsPreselected",2032,G__ShowerDict_961_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'EdbSegP' - 0 - InitiatorBT U 'EdbPVRec' - 0 - eAli_Sub", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindPairs",896,G__ShowerDict_961_0_21, 85, G__get_linked_tagnum(&G__ShowerDictLN_TObjArray), -1, 0, 2, 1, 1, 0, 
"U 'EdbSegP' - 0 - InBT U 'EdbPVRec' - 0 - eAli_Sub", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckCleanPairs",1472,G__ShowerDict_961_0_22, 85, G__get_linked_tagnum(&G__ShowerDictLN_TObjArray), -1, 0, 2, 1, 1, 0, 
"U 'EdbSegP' - 0 - InBT U 'TObjArray' - 0 - RecoShowerArrayFromFindPairs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindPairsPreselected",2032,G__ShowerDict_961_0_23, 85, G__get_linked_tagnum(&G__ShowerDictLN_TObjArray), -1, 0, 1, 1, 1, 0, "U 'EdbPVRec' - 0 - eAli_Sub", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillANNTree",1012,G__ShowerDict_961_0_24, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TObjArray' - 0 - RecoShowerArray U 'EdbSegP' - 0 - Inbt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateANNPair",1213,G__ShowerDict_961_0_25, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReloadANNs",935,G__ShowerDict_961_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - RecoMode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateANNPlots",1347,G__ShowerDict_961_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Execute",723,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finalize",818,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__ShowerDict_961_0_31, 85, G__get_linked_tagnum(&G__ShowerDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbShowerAlg_GS::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowerDict_961_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerAlg_GS::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowerDict_961_0_33, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbShowerAlg_GS::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowerDict_961_0_34, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbShowerAlg_GS::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ShowerDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowerDict_961_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowerDict_961_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerAlg_GS::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowerDict_961_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerAlg_GS::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowerDict_961_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerAlg_GS::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowerDict_961_0_42, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerAlg_GS::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EdbShowerAlg_GS", 1424, G__ShowerDict_961_0_43, (int) ('i'), G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlg_GS), -1, 0, 1, 1, 1, 0, "u 'EdbShowerAlg_GS' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EdbShowerAlg_GS", 1550, G__ShowerDict_961_0_44, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowerDict_961_0_45, (int) ('u'), G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlg_GS), -1, 1, 1, 1, 1, 0, "u 'EdbShowerAlg_GS' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbShowerAlgESimple(void) {
   /* EdbShowerAlgESimple */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlgESimple));
   G__memfunc_setup("Set0",348,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowerAlgESimple",1862,G__ShowerDict_962_0_3, 105, G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlgESimple), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowerAlgESimple",1862,G__ShowerDict_962_0_4, 105, G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlgESimple), -1, 0, 1, 1, 1, 0, "U 'EdbTrackP' - 0 - track", "in libShower", (void*) NULL, 0);
   G__memfunc_setup("EdbShowerAlgESimple",1862,G__ShowerDict_962_0_5, 105, G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlgESimple), -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - RecoShowerArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecoShowerArray",1836,G__ShowerDict_962_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - RecoShowerArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecoShowerArrayN",1914,G__ShowerDict_962_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - RecoShowerArrayN", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecoShowerArrayN",1902,G__ShowerDict_962_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyArray",1417,G__ShowerDict_962_0_9, 85, G__get_linked_tagnum(&G__ShowerDictLN_TArrayF), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyArrayUnCorrected",2535,G__ShowerDict_962_0_10, 85, G__get_linked_tagnum(&G__ShowerDictLN_TArrayF), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,G__ShowerDict_962_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,G__ShowerDict_962_0_12, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "U 'EdbTrackP' - 0 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPara",676,G__ShowerDict_962_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbTrackP' - 0 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEffFunc_all",1365,G__ShowerDict_962_0_14, 85, G__get_linked_tagnum(&G__ShowerDictLN_TF1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEffFunc_edefault",1894,G__ShowerDict_962_0_15, 85, G__get_linked_tagnum(&G__ShowerDictLN_TF1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEffFunc_elletroni",2026,G__ShowerDict_962_0_16, 85, G__get_linked_tagnum(&G__ShowerDictLN_TF1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEffFunc_neuchmicro",2121,G__ShowerDict_962_0_17, 85, G__get_linked_tagnum(&G__ShowerDictLN_TF1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEffFunc_MiddleFix",1938,G__ShowerDict_962_0_18, 85, G__get_linked_tagnum(&G__ShowerDictLN_TF1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEffFunc_LowEff",1631,G__ShowerDict_962_0_19, 85, G__get_linked_tagnum(&G__ShowerDictLN_TF1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEffFunc_UserEfficiency",2480,G__ShowerDict_962_0_20, 85, G__get_linked_tagnum(&G__ShowerDictLN_TF1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNeuralNetwork",1649,G__ShowerDict_962_0_21, 85, G__get_linked_tagnum(&G__ShowerDictLN_TMultiLayerPerceptron), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0' ANNType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrainNeuralNetwork",1871,G__ShowerDict_962_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - weight i - 'Int_t' 0 '0' ANNType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DumpNeuralNetworkWeight",2383,G__ShowerDict_962_0_23, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - weight i - 'Int_t' 0 '0' ANNType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCalibrationOffset",2043,G__ShowerDict_962_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - CalibrationOffset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCalibrationSlope",1943,G__ShowerDict_962_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - CalibrationSlope", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPlateNumberType",1837,G__ShowerDict_962_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - PlateNumberType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPlateNumber",1419,G__ShowerDict_962_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - PlateNumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSpecType",1101,G__ShowerDict_962_0_28, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - SpecificationType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetForceSpecificationReload",2739,G__ShowerDict_962_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UnSetForceSpecificationReload",2934,G__ShowerDict_962_0_30, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEfficiencyParametrisationValues",3524,G__ShowerDict_962_0_31, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - Angles D - 'Double_t' 0 - EffValuesAtAngles", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEfficiencyParametrisation",2900,G__ShowerDict_962_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TSpline3' - 0 - EfficiencyParametrisation", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEfficiencyParametrisation",2888,G__ShowerDict_962_0_33, 85, G__get_linked_tagnum(&G__ShowerDictLN_TSpline3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintEfficiencyParametrisation",3125,G__ShowerDict_962_0_34, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEfficiencyParametrisationAngles",3502,G__ShowerDict_962_0_35, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWeightFileString",1931,G__ShowerDict_962_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - weightstring", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitStrings",1150,G__ShowerDict_962_0_37, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindClosestEfficiencyParametrization",3725,G__ShowerDict_962_0_38, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - TestAngle d - 'Double_t' 0 - ReferenceEff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNplIndexNr",1282,G__ShowerDict_962_0_39, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - sh_npl i - 'Int_t' 1 - check_Npl_index "
"i - 'Int_t' 0 - ePlateNumberType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSpecifications",1748,G__ShowerDict_962_0_40, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSpecifications",1760,G__ShowerDict_962_0_41, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - sp0 i - 'Int_t' 0 - sp1 "
"i - 'Int_t' 0 - sp2 i - 'Int_t' 0 - sp3 "
"i - 'Int_t' 0 - sp4 i - 'Int_t' 0 - sp5", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSpecificationType",2063,G__ShowerDict_962_0_42, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - SpecificationType i - 'Int_t' 0 - SpecificationTypeVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintSpecifications",1985,G__ShowerDict_962_0_43, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadSpecificationWeightFile",2729,G__ShowerDict_962_0_44, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadCorrectionFactors",2150,G__ShowerDict_962_0_45, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TString' - 0 - weigthstring f - 'Float_t' 1 - p0 "
"f - 'Float_t' 1 - p1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateANN",817,G__ShowerDict_962_0_46, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Update",611,G__ShowerDict_962_0_47, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoRun",488,G__ShowerDict_962_0_48, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoRun",488,G__ShowerDict_962_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - trackarray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoRun",488,G__ShowerDict_962_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbTrackP' - 0 - shower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadTables",983,G__ShowerDict_962_0_51, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadTables_Energy",1696,G__ShowerDict_962_0_52, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteNewRootFile",1625,G__ShowerDict_962_0_53, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteNewRootFile",1625,G__ShowerDict_962_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - sourcefilename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteNewRootFile",1625,G__ShowerDict_962_0_55, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - sourcefilename u 'TString' - 0 - treename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__ShowerDict_962_0_56, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Help",393,G__ShowerDict_962_0_57, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ShowerDict_962_0_58, 85, G__get_linked_tagnum(&G__ShowerDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbShowerAlgESimple::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowerDict_962_0_59, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerAlgESimple::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowerDict_962_0_60, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbShowerAlgESimple::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowerDict_962_0_61, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbShowerAlgESimple::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ShowerDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowerDict_962_0_65, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowerDict_962_0_66, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerAlgESimple::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowerDict_962_0_67, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerAlgESimple::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowerDict_962_0_68, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerAlgESimple::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowerDict_962_0_69, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerAlgESimple::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EdbShowerAlgESimple", 1862, G__ShowerDict_962_0_70, (int) ('i'), G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlgESimple), -1, 0, 1, 1, 1, 0, "u 'EdbShowerAlgESimple' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EdbShowerAlgESimple", 1988, G__ShowerDict_962_0_71, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowerDict_962_0_72, (int) ('u'), G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlgESimple), -1, 1, 1, 1, 1, 0, "u 'EdbShowerAlgESimple' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbShowerAlgIDSimple(void) {
   /* EdbShowerAlgIDSimple */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlgIDSimple));
   G__memfunc_setup("EdbShowerAlgIDSimple",1934,G__ShowerDict_963_0_1, 105, G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlgIDSimple), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowerAlgIDSimple",1934,G__ShowerDict_963_0_2, 105, G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlgIDSimple), -1, 0, 1, 1, 1, 0, "U 'EdbTrackP' - 0 - track", "in libShower", (void*) NULL, 0);
   G__memfunc_setup("EdbShowerAlgIDSimple",1934,G__ShowerDict_963_0_3, 105, G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlgIDSimple), -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - RecoShowerArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbShowerAlgIDSimple",1934,G__ShowerDict_963_0_4, 105, G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlgIDSimple), -1, 0, 2, 1, 1, 0, 
"U 'EdbTrackP' - 0 - track U 'EdbVertex' - 0 - vtx", "in libShower", (void*) NULL, 0);
   G__memfunc_setup("EdbShowerAlgIDSimple",1934,G__ShowerDict_963_0_5, 105, G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlgIDSimple), -1, 0, 2, 1, 1, 0, 
"U 'TObjArray' - 0 - RecoShowerArray U 'TObjArray' - 0 - VtxArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__ShowerDict_963_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetANNIDCutValue",1471,G__ShowerDict_963_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - ANNIDCutValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSpecificationType",2063,G__ShowerDict_963_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - SpecificationType i - 'Int_t' 0 - SpecificationTypeVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintSpecifications",1985,G__ShowerDict_963_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateANN",817,G__ShowerDict_963_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Update",611,G__ShowerDict_963_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitStrings",1150,G__ShowerDict_963_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadTables",983,G__ShowerDict_963_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadTables_ID",1219,G__ShowerDict_963_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", "to be implemented...", (void*) NULL, 0);
   G__memfunc_setup("DoRun",488,G__ShowerDict_963_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbTrackP' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoRun",488,G__ShowerDict_963_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - trackarray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoRun",488,G__ShowerDict_963_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DetermineIDType",1484,G__ShowerDict_963_0_18, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - val i - 'Int_t' 0 - SpecificationType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DetermineIDFlag",1444,G__ShowerDict_963_0_19, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - IDType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__ShowerDict_963_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Help",393,G__ShowerDict_963_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ShowerDict_963_0_22, 85, G__get_linked_tagnum(&G__ShowerDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbShowerAlgIDSimple::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowerDict_963_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerAlgIDSimple::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowerDict_963_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbShowerAlgIDSimple::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowerDict_963_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbShowerAlgIDSimple::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ShowerDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowerDict_963_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowerDict_963_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerAlgIDSimple::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowerDict_963_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerAlgIDSimple::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowerDict_963_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbShowerAlgIDSimple::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowerDict_963_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbShowerAlgIDSimple::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EdbShowerAlgIDSimple", 1934, G__ShowerDict_963_0_34, (int) ('i'), G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlgIDSimple), -1, 0, 1, 1, 1, 0, "u 'EdbShowerAlgIDSimple' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EdbShowerAlgIDSimple", 2060, G__ShowerDict_963_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowerDict_963_0_36, (int) ('u'), G__get_linked_tagnum(&G__ShowerDictLN_EdbShowerAlgIDSimple), -1, 1, 1, 1, 1, 0, "u 'EdbShowerAlgIDSimple' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdbPVRQuality(void) {
   /* EdbPVRQuality */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowerDictLN_EdbPVRQuality));
   G__memfunc_setup("Set0",348,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbPVRQuality",1260,G__ShowerDict_969_0_3, 105, G__get_linked_tagnum(&G__ShowerDictLN_EdbPVRQuality), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbPVRQuality",1260,G__ShowerDict_969_0_4, 105, G__get_linked_tagnum(&G__ShowerDictLN_EdbPVRQuality), -1, 0, 1, 1, 1, 0, "U 'EdbPVRec' - 0 - ali", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EdbPVRQuality",1260,G__ShowerDict_969_0_5, 105, G__get_linked_tagnum(&G__ShowerDictLN_EdbPVRQuality), -1, 0, 2, 1, 1, 0, 
"U 'EdbPVRec' - 0 - ali f - 'Float_t' 0 - BTDensityTargetLevel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCutMethod",1209,G__ShowerDict_969_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - CutMethod", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBTDensityLevel",1690,G__ShowerDict_969_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - BTDensityLevel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCutTTSqueezeFactor",2113,G__ShowerDict_969_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - CutTTSqueezeFactor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBTDensityLevelCalcMethodMC",2814,G__ShowerDict_969_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - BTDensityLevelCalcMethodMC", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBTDensityLevelCalcMethodMCConfirmation",4071,G__ShowerDict_969_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - BTDensityLevelCalcMethodMCConfirmationNumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBTDensityLevelCalcMethodMC",2802,G__ShowerDict_969_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBTDensityLevelCalcMethodMCConfirmation",4059,G__ShowerDict_969_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEdbPVRec",1003,G__ShowerDict_969_0_13, 85, G__get_linked_tagnum(&G__ShowerDictLN_EdbPVRec), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEdbPVRec",1003,G__ShowerDict_969_0_14, 85, G__get_linked_tagnum(&G__ShowerDictLN_EdbPVRec), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - EdbPVRecType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEdbPVRec",1003,G__ShowerDict_969_0_15, 85, G__get_linked_tagnum(&G__ShowerDictLN_EdbPVRec), -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - NeedModified", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEdbPVRec_orig",1531,G__ShowerDict_969_0_16, 85, G__get_linked_tagnum(&G__ShowerDictLN_EdbPVRec), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEdbPVRec_modified",1931,G__ShowerDict_969_0_17, 85, G__get_linked_tagnum(&G__ShowerDictLN_EdbPVRec), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEdbPVRec",1015,G__ShowerDict_969_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EdbPVRec' - 0 - Ali_orig", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistChi2W",1109,G__ShowerDict_969_0_19, 85, G__get_linked_tagnum(&G__ShowerDictLN_TH2F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistYX",873,G__ShowerDict_969_0_20, 85, G__get_linked_tagnum(&G__ShowerDictLN_TH2F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCutMethod",1197,G__ShowerDict_969_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCutMethodIsDone",1775,G__ShowerDict_969_0_22, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBTDensityLevel",1678,G__ShowerDict_969_0_23, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCutp0",748,G__ShowerDict_969_0_24, 70, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCutp1",749,G__ShowerDict_969_0_25, 70, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCutp0",748,G__ShowerDict_969_0_26, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - patNR", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCutp1",749,G__ShowerDict_969_0_27, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - patNR", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetagreementChi2CutMeanChi2",2577,G__ShowerDict_969_0_28, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetagreementChi2CutRMSChi2",2434,G__ShowerDict_969_0_29, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetagreementChi2CutMeanW",2338,G__ShowerDict_969_0_30, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetagreementChi2CutRMSW",2195,G__ShowerDict_969_0_31, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetagreementChi2Cut",1866,G__ShowerDict_969_0_32, 70, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetagreementChi2Cut",1866,G__ShowerDict_969_0_33, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - patNR", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHistGeometry_OPERA",2022,G__ShowerDict_969_0_34, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHistGeometry_MC",1791,G__ShowerDict_969_0_35, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHistGeometry_OPERAandMC",2473,G__ShowerDict_969_0_36, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHistGeometry_OPERAandMCBinArea625",3288,G__ShowerDict_969_0_37, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckEdbPVRec",1193,G__ShowerDict_969_0_38, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckEdbPVRecThetaSpace",2187,G__ShowerDict_969_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - AliType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Execute",723,G__ShowerDict_969_0_40, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Execute",723,G__ShowerDict_969_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - CutType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Execute_ConstantBTDensity",2546,G__ShowerDict_969_0_42, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Execute_ConstantBTDensityInAngularBins",3839,G__ShowerDict_969_0_43, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Execute_ConstantBTQuality",2555,G__ShowerDict_969_0_44, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Execute_ConstantBTQualityInAngularBins",3848,G__ShowerDict_969_0_45, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Execute_ConstantBTX2Hat",2233,G__ShowerDict_969_0_46, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Execute_ConstantBTX2HatInAngularBins",3526,G__ShowerDict_969_0_47, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Execute_RandomCut",1727,G__ShowerDict_969_0_48, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Execute_RandomCutInAngularBins",3020,G__ShowerDict_969_0_49, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Execute_EqualizeTanThetaSpace",2935,G__ShowerDict_969_0_50, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Execute_EqualizeTanThetaSpace_ConstantBTDensity",4758,G__ShowerDict_969_0_51, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Execute_EqualizeTanThetaSpace_ConstantBTQuality",4767,G__ShowerDict_969_0_52, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Execute_EqualizeTanThetaSpace_ConstantBTX2Hat",4445,G__ShowerDict_969_0_53, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Execute_EqualizeTanThetaSpace_RandomCut",3939,G__ShowerDict_969_0_54, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Find_DoubleBT",1233,G__ShowerDict_969_0_55, 85, G__get_linked_tagnum(&G__ShowerDictLN_TObjArray), -1, 0, 1, 1, 1, 0, "U 'EdbPVRec' - 0 - aliSource", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Remove_DoubleBT",1470,G__ShowerDict_969_0_56, 85, G__get_linked_tagnum(&G__ShowerDictLN_EdbPVRec), -1, 0, 1, 1, 1, 0, "U 'EdbPVRec' - 0 - aliSource", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Remove_Passing",1442,G__ShowerDict_969_0_57, 85, G__get_linked_tagnum(&G__ShowerDictLN_EdbPVRec), -1, 0, 1, 1, 1, 0, "U 'EdbPVRec' - 0 - aliSource", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Remove_SegmentArray",1951,G__ShowerDict_969_0_58, 85, G__get_linked_tagnum(&G__ShowerDictLN_EdbPVRec), -1, 0, 3, 1, 1, 0, 
"U 'TObjArray' - 0 - segarray U 'EdbPVRec' - 0 '0' aliSource "
"i - 'Int_t' 0 '0' Option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Remove_Segment",1440,G__ShowerDict_969_0_59, 85, G__get_linked_tagnum(&G__ShowerDictLN_EdbPVRec), -1, 0, 3, 1, 1, 0, 
"U 'EdbSegP' - 0 - seg U 'EdbPVRec' - 0 '0' aliSource "
"i - 'Int_t' 0 '0' Option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Remove_TrackArray",1729,G__ShowerDict_969_0_60, 85, G__get_linked_tagnum(&G__ShowerDictLN_EdbPVRec), -1, 0, 3, 1, 1, 0, 
"U 'TObjArray' - 0 - trackArray U 'EdbPVRec' - 0 '0' aliSource "
"i - 'Int_t' 0 '0' Option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Remove_Track",1218,G__ShowerDict_969_0_61, 85, G__get_linked_tagnum(&G__ShowerDictLN_EdbPVRec), -1, 0, 3, 1, 1, 0, 
"U 'EdbTrackP' - 0 - track U 'EdbPVRec' - 0 '0' aliSource "
"i - 'Int_t' 0 '0' Option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackToSegmentArray",1930,G__ShowerDict_969_0_62, 85, G__get_linked_tagnum(&G__ShowerDictLN_TObjArray), -1, 0, 1, 1, 1, 0, "U 'EdbTrackP' - 0 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackArrayToSegmentArray",2441,G__ShowerDict_969_0_63, 85, G__get_linked_tagnum(&G__ShowerDictLN_TObjArray), -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - trackArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateEdbPVRec",1311,G__ShowerDict_969_0_64, 85, G__get_linked_tagnum(&G__ShowerDictLN_EdbPVRec), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckFilledXYSize",1658,G__ShowerDict_969_0_65, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAngularSpaceBin",1775,G__ShowerDict_969_0_66, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'EdbSegP' - 0 - seg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindFirstBinAbove",1679,G__ShowerDict_969_0_67, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"U 'TH1' - 0 - hist d - 'Double_t' 0 - threshold "
"i - 'Int_t' 0 - axis", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindLastBinAbove",1563,G__ShowerDict_969_0_68, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"U 'TH1' - 0 - hist d - 'Double_t' 0 - threshold "
"i - 'Int_t' 0 - axis", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTracksFromLinkedTracksRootFile",3327,G__ShowerDict_969_0_69, 85, G__get_linked_tagnum(&G__ShowerDictLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckSegmentQualityInPattern_ConstBTDens",4021,G__ShowerDict_969_0_70, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"U 'EdbPVRec' - 0 - ali i - 'Int_t' 0 - PatternAtNr "
"U 'EdbSegP' - 0 - seg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckSegmentQualityInPattern_ConstQual",3880,G__ShowerDict_969_0_71, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"U 'EdbPVRec' - 0 - ali i - 'Int_t' 0 - PatternAtNr "
"U 'EdbSegP' - 0 - seg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__ShowerDict_969_0_72, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintCutType",1243,G__ShowerDict_969_0_73, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintCutType0",1291,G__ShowerDict_969_0_74, 121, -1, -1, 0, 0, 1, 1, 0, "", "Constant BT density", (void*) NULL, 0);
   G__memfunc_setup("PrintCutType1",1292,G__ShowerDict_969_0_75, 121, -1, -1, 0, 0, 1, 1, 0, "", "Constant BT density in Angular Bins", (void*) NULL, 0);
   G__memfunc_setup("PrintCutType2",1293,G__ShowerDict_969_0_76, 121, -1, -1, 0, 0, 1, 1, 0, "", "Constant BT quality", (void*) NULL, 0);
   G__memfunc_setup("PrintCutType3",1294,G__ShowerDict_969_0_77, 121, -1, -1, 0, 0, 1, 1, 0, "", "Constant BT quality in Angular Bins", (void*) NULL, 0);
   G__memfunc_setup("PrintCutType4",1295,G__ShowerDict_969_0_78, 121, -1, -1, 0, 0, 1, 1, 0, "", "Constant BT X2Hat", (void*) NULL, 0);
   G__memfunc_setup("PrintCutType5",1296,G__ShowerDict_969_0_79, 121, -1, -1, 0, 0, 1, 1, 0, "", "Constant BT X2Hat in Angular Bins", (void*) NULL, 0);
   G__memfunc_setup("PrintCutType6",1297,G__ShowerDict_969_0_80, 121, -1, -1, 0, 0, 1, 1, 0, "", "Random Test Cut", (void*) NULL, 0);
   G__memfunc_setup("PrintCutType7",1298,G__ShowerDict_969_0_81, 121, -1, -1, 0, 0, 1, 1, 0, "", "Random Test Cut in Angular Bins", (void*) NULL, 0);
   G__memfunc_setup("PrintCutValues",1449,G__ShowerDict_969_0_82, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - CutType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Help",393,G__ShowerDict_969_0_83, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ShowerDict_969_0_84, 85, G__get_linked_tagnum(&G__ShowerDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EdbPVRQuality::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowerDict_969_0_85, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbPVRQuality::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowerDict_969_0_86, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EdbPVRQuality::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowerDict_969_0_87, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EdbPVRQuality::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ShowerDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowerDict_969_0_91, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowerDict_969_0_92, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbPVRQuality::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowerDict_969_0_93, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbPVRQuality::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowerDict_969_0_94, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EdbPVRQuality::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowerDict_969_0_95, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EdbPVRQuality::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EdbPVRQuality", 1260, G__ShowerDict_969_0_96, (int) ('i'), G__get_linked_tagnum(&G__ShowerDictLN_EdbPVRQuality), -1, 0, 1, 1, 1, 0, "u 'EdbPVRQuality' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EdbPVRQuality", 1386, G__ShowerDict_969_0_97, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowerDict_969_0_98, (int) ('u'), G__get_linked_tagnum(&G__ShowerDictLN_EdbPVRQuality), -1, 1, 1, 1, 1, 0, "u 'EdbPVRQuality' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncShowerDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalShowerDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcShowerDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__ShowerDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOcharcOlongcOcharmUcOcharaNgR = { "iterator<random_access_iterator_tag,char,long,char*,char&>" , 115 , -1 };
G__linked_taginfo G__ShowerDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR = { "iterator<random_access_iterator_tag,ROOT::TSchemaHelper,long,ROOT::TSchemaHelper*,ROOT::TSchemaHelper&>" , 115 , -1 };
G__linked_taginfo G__ShowerDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLconst_iteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::const_iterator>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR = { "iterator<random_access_iterator_tag,TVirtualArray*,long,TVirtualArray**,TVirtualArray*&>" , 115 , -1 };
G__linked_taginfo G__ShowerDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLconst_iteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::const_iterator>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__ShowerDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TArrayI = { "TArrayI" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TArrayF = { "TArrayF" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_EdbSegP = { "EdbSegP" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_EdbVertex = { "EdbVertex" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_EdbTrackP = { "EdbTrackP" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_EdbPattern = { "EdbPattern" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TProfile = { "TProfile" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_EdbPVRec = { "EdbPVRec" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_EdbDataPiece = { "EdbDataPiece" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_EdbDataProc = { "EdbDataProc" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TMultiLayerPerceptron = { "TMultiLayerPerceptron" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOTStringcOlongcOTStringmUcOTStringaNgR = { "iterator<random_access_iterator_tag,TString,long,TString*,TString&>" , 115 , -1 };
G__linked_taginfo G__ShowerDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLconst_iteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::const_iterator>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_EdbShowerRec = { "EdbShowerRec" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_TSpline3 = { "TSpline3" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_listlEVERTEXcLcLRelationmUcOallocatorlEVERTEXcLcLRelationmUgRsPgR = { "list<VERTEX::Relation*,allocator<VERTEX::Relation*> >" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_listlEVERTEXcLcLMassCmUcOallocatorlEVERTEXcLcLMassCmUgRsPgR = { "list<VERTEX::MassC*,allocator<VERTEX::MassC*> >" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_vectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgR = { "vector<VERTEX::Track*,allocator<VERTEX::Track*> >" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_reverse_iteratorlEvectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<VERTEX::Track*,allocator<VERTEX::Track*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOVERTEXcLcLTrackmUcOlongcOVERTEXcLcLTrackmUmUcOVERTEXcLcLTrackmUaNgR = { "iterator<random_access_iterator_tag,VERTEX::Track*,long,VERTEX::Track**,VERTEX::Track*&>" , 115 , -1 };
G__linked_taginfo G__ShowerDictLN_reverse_iteratorlEvectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgRcLcLconst_iteratorgR = { "reverse_iterator<vector<VERTEX::Track*,allocator<VERTEX::Track*> >::const_iterator>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__ShowerDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOpairlEunsignedsPintcOintgRcOlongcOpairlEunsignedsPintcOintgRmUcOpairlEunsignedsPintcOintgRaNgR = { "iterator<random_access_iterator_tag,pair<unsigned int,int>,long,pair<unsigned int,int>*,pair<unsigned int,int>&>" , 115 , -1 };
G__linked_taginfo G__ShowerDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLconst_iteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::const_iterator>" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_EdbShowerAlg = { "EdbShowerAlg" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_EdbShowerAlg_GS = { "EdbShowerAlg_GS" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_EdbShowerAlgESimple = { "EdbShowerAlgESimple" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_EdbShowerAlgIDSimple = { "EdbShowerAlgIDSimple" , 99 , -1 };
G__linked_taginfo G__ShowerDictLN_EdbPVRQuality = { "EdbPVRQuality" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableShowerDict() {
  G__ShowerDictLN_TClass.tagnum = -1 ;
  G__ShowerDictLN_TBuffer.tagnum = -1 ;
  G__ShowerDictLN_TMemberInspector.tagnum = -1 ;
  G__ShowerDictLN_TObject.tagnum = -1 ;
  G__ShowerDictLN_TString.tagnum = -1 ;
  G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOcharcOlongcOcharmUcOcharaNgR.tagnum = -1 ;
  G__ShowerDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__ShowerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__ShowerDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR.tagnum = -1 ;
  G__ShowerDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLconst_iteratorgR.tagnum = -1 ;
  G__ShowerDictLN_TObjArray.tagnum = -1 ;
  G__ShowerDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__ShowerDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR.tagnum = -1 ;
  G__ShowerDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLconst_iteratorgR.tagnum = -1 ;
  G__ShowerDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__ShowerDictLN_TFile.tagnum = -1 ;
  G__ShowerDictLN_TTree.tagnum = -1 ;
  G__ShowerDictLN_TArrayI.tagnum = -1 ;
  G__ShowerDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__ShowerDictLN_TH1.tagnum = -1 ;
  G__ShowerDictLN_TArrayF.tagnum = -1 ;
  G__ShowerDictLN_TH1F.tagnum = -1 ;
  G__ShowerDictLN_TH2F.tagnum = -1 ;
  G__ShowerDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__ShowerDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__ShowerDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__ShowerDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__ShowerDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__ShowerDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__ShowerDictLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__ShowerDictLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__ShowerDictLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__ShowerDictLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__ShowerDictLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__ShowerDictLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__ShowerDictLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__ShowerDictLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__ShowerDictLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__ShowerDictLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__ShowerDictLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__ShowerDictLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__ShowerDictLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__ShowerDictLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__ShowerDictLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__ShowerDictLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__ShowerDictLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__ShowerDictLN_EdbSegP.tagnum = -1 ;
  G__ShowerDictLN_EdbVertex.tagnum = -1 ;
  G__ShowerDictLN_EdbTrackP.tagnum = -1 ;
  G__ShowerDictLN_EdbPattern.tagnum = -1 ;
  G__ShowerDictLN_TF1.tagnum = -1 ;
  G__ShowerDictLN_TH1D.tagnum = -1 ;
  G__ShowerDictLN_TProfile.tagnum = -1 ;
  G__ShowerDictLN_EdbPVRec.tagnum = -1 ;
  G__ShowerDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__ShowerDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__ShowerDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__ShowerDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__ShowerDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__ShowerDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__ShowerDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__ShowerDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__ShowerDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__ShowerDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__ShowerDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__ShowerDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__ShowerDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__ShowerDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__ShowerDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__ShowerDictLN_EdbDataPiece.tagnum = -1 ;
  G__ShowerDictLN_EdbDataProc.tagnum = -1 ;
  G__ShowerDictLN_TMultiLayerPerceptron.tagnum = -1 ;
  G__ShowerDictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__ShowerDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOTStringcOlongcOTStringmUcOTStringaNgR.tagnum = -1 ;
  G__ShowerDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLconst_iteratorgR.tagnum = -1 ;
  G__ShowerDictLN_EdbShowerRec.tagnum = -1 ;
  G__ShowerDictLN_TSpline3.tagnum = -1 ;
  G__ShowerDictLN_listlEVERTEXcLcLRelationmUcOallocatorlEVERTEXcLcLRelationmUgRsPgR.tagnum = -1 ;
  G__ShowerDictLN_listlEVERTEXcLcLMassCmUcOallocatorlEVERTEXcLcLMassCmUgRsPgR.tagnum = -1 ;
  G__ShowerDictLN_vectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgR.tagnum = -1 ;
  G__ShowerDictLN_reverse_iteratorlEvectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOVERTEXcLcLTrackmUcOlongcOVERTEXcLcLTrackmUmUcOVERTEXcLcLTrackmUaNgR.tagnum = -1 ;
  G__ShowerDictLN_reverse_iteratorlEvectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgRcLcLconst_iteratorgR.tagnum = -1 ;
  G__ShowerDictLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__ShowerDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__ShowerDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOpairlEunsignedsPintcOintgRcOlongcOpairlEunsignedsPintcOintgRmUcOpairlEunsignedsPintcOintgRaNgR.tagnum = -1 ;
  G__ShowerDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLconst_iteratorgR.tagnum = -1 ;
  G__ShowerDictLN_EdbShowerAlg.tagnum = -1 ;
  G__ShowerDictLN_EdbShowerAlg_GS.tagnum = -1 ;
  G__ShowerDictLN_EdbShowerAlgESimple.tagnum = -1 ;
  G__ShowerDictLN_EdbShowerAlgIDSimple.tagnum = -1 ;
  G__ShowerDictLN_EdbPVRQuality.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableShowerDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TString);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOcharcOlongcOcharmUcOcharaNgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLconst_iteratorgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLconst_iteratorgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TFile);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TTree);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TArrayI);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TH1);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TArrayF);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TH1F);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TH2F);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TMatrixTSparseDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_EdbSegP);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_EdbVertex);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_EdbTrackP);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_EdbPattern);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TF1);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TH1D);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TProfile);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_EdbPVRec);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_EdbDataPiece);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_EdbDataProc);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TMultiLayerPerceptron);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOTStringcOlongcOTStringmUcOTStringaNgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLconst_iteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowerDictLN_EdbShowerRec),sizeof(EdbShowerRec),-1,324864,(char*)NULL,G__setup_memvarEdbShowerRec,G__setup_memfuncEdbShowerRec);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_TSpline3);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_listlEVERTEXcLcLRelationmUcOallocatorlEVERTEXcLcLRelationmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_listlEVERTEXcLcLMassCmUcOallocatorlEVERTEXcLcLMassCmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_vectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_reverse_iteratorlEvectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOVERTEXcLcLTrackmUcOlongcOVERTEXcLcLTrackmUmUcOVERTEXcLcLTrackmUaNgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_reverse_iteratorlEvectorlEVERTEXcLcLTrackmUcOallocatorlEVERTEXcLcLTrackmUgRsPgRcLcLconst_iteratorgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_iteratorlErandom_access_iterator_tagcOpairlEunsignedsPintcOintgRcOlongcOpairlEunsignedsPintcOintgRmUcOpairlEunsignedsPintcOintgRaNgR);
   G__get_linked_tagnum_fwd(&G__ShowerDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLconst_iteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowerDictLN_EdbShowerAlg),sizeof(EdbShowerAlg),-1,324864,"Root Class Definition for my Objects",G__setup_memvarEdbShowerAlg,G__setup_memfuncEdbShowerAlg);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowerDictLN_EdbShowerAlg_GS),sizeof(EdbShowerAlg_GS),-1,324864,"Root Class Definition for my Objects",G__setup_memvarEdbShowerAlg_GS,G__setup_memfuncEdbShowerAlg_GS);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowerDictLN_EdbShowerAlgESimple),sizeof(EdbShowerAlgESimple),-1,324864,"Root Class Definition for my Objects",G__setup_memvarEdbShowerAlgESimple,G__setup_memfuncEdbShowerAlgESimple);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowerDictLN_EdbShowerAlgIDSimple),sizeof(EdbShowerAlgIDSimple),-1,324864,"Root Class Definition for my Objects",G__setup_memvarEdbShowerAlgIDSimple,G__setup_memfuncEdbShowerAlgIDSimple);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowerDictLN_EdbPVRQuality),sizeof(EdbPVRQuality),-1,324864,"Root Class Definition for EdbPVRQuality",G__setup_memvarEdbPVRQuality,G__setup_memfuncEdbPVRQuality);
}
extern "C" void G__cpp_setupShowerDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupShowerDict()");
  G__set_cpp_environmentShowerDict();
  G__cpp_setup_tagtableShowerDict();

  G__cpp_setup_inheritanceShowerDict();

  G__cpp_setup_typetableShowerDict();

  G__cpp_setup_memvarShowerDict();

  G__cpp_setup_memfuncShowerDict();
  G__cpp_setup_globalShowerDict();
  G__cpp_setup_funcShowerDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncShowerDict();
  return;
}
class G__cpp_setup_initShowerDict {
  public:
    G__cpp_setup_initShowerDict() { G__add_setup_func("ShowerDict",(G__incsetup)(&G__cpp_setupShowerDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initShowerDict() { G__remove_setup_func("ShowerDict"); }
};
G__cpp_setup_initShowerDict G__cpp_setup_initializerShowerDict;

